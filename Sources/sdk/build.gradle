apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

def SDK_VERSION = "SDK_VERSION"
def ENABLE_DEBUG_LOGGER = "ENABLE_DEBUG_LOGGER"
def ENABLE_WS_INTERCEPTOR = "ENABLE_WS_INTERCEPTOR"
def WS_DOMAIN = "WS_DOMAIN"
def API_LEVEL = "API_LEVEL"
def MESSAGING_API_LEVEL = "MESSAGING_API_LEVEL"

ext {
    mavenGroupId = 'com.batch.android'
    mavenArtifact = 'batch-sdk'
    androidXLibraryVersion = '1.0.0'
    playServicesVersion = '11.8.0'
}

android {
    compileSdkVersion 33
    defaultPublishConfig "release"

    resourcePrefix "com_batchsdk_"

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 33
        versionCode 1
        versionName "1.19.3"
        buildConfigField "String", SDK_VERSION, "\"$versionName\""
        buildConfigField "Integer", API_LEVEL, '51'
        buildConfigField "Integer", MESSAGING_API_LEVEL, '12'
        buildConfigField "String", WS_DOMAIN, '"ws.batch.com"'

        consumerProguardFiles 'proguard-consumer-rules.txt'
        project.archivesBaseName = "Batch"
        project.version = android.defaultConfig.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-sdk-release.txt'

            buildConfigField "boolean", ENABLE_DEBUG_LOGGER, 'false'
            buildConfigField "boolean", ENABLE_WS_INTERCEPTOR, 'false'
        }

        debug {
            multiDexEnabled true
            minifyEnabled false

            buildConfigField "boolean", ENABLE_DEBUG_LOGGER, 'true'
            buildConfigField "boolean", ENABLE_WS_INTERCEPTOR, 'true'
        }
    }


    testOptions {
        execution 'ANDROIDX_TEST_ORCHESTRATOR'
        unitTests {
            returnDefaultValues = true
            includeAndroidResources = true
            all {
                testLogging {
                    events "started", "passed", "skipped", "failed"
                }
            }
        }
    }
    lint {
        abortOnError true
        baseline file('lint-baseline.xml')
        lintConfig file('lint.xml')
    }

    publishing {
        singleVariant("release") {
            withSourcesJar()
            withJavadocJar()
        }
    }
}

// Prevent from having accidental kotlin in production code
afterEvaluate {
    android.sourceSets.all { sourceSet ->
        if (!sourceSet.name.startsWith("test")) {
            sourceSet.kotlin.setSrcDirs([])
        }
    }
}

// Print the sdk version name
task printVersion {
    doLast {
        println project.version
    }
}

dependencies {
    compileOnly "com.google.android.gms:play-services-ads:$playServicesVersion"
    compileOnly "com.google.android.gms:play-services-gcm:$playServicesVersion"
    compileOnly "com.google.android.gms:play-services-location:$playServicesVersion"
    compileOnly "com.google.android.gms:play-services-nearby:$playServicesVersion"
    compileOnly 'com.google.android.play:core:1.9.0'
    compileOnly "com.google.firebase:firebase-iid:21.1.0"
    compileOnly "com.google.firebase:firebase-messaging:22.0.0"
    compileOnly project(':sdk-stubs')
    compileOnly project(':sdk-processor')
    annotationProcessor project(':sdk-processor')
    lintChecks project(':sdk-lint')

    api "androidx.core:core:$androidXLibraryVersion"
    compileOnly "androidx.appcompat:appcompat:$androidXLibraryVersion"
    compileOnly "com.google.android.material:material:$androidXLibraryVersion"
    compileOnly "androidx.dynamicanimation:dynamicanimation:$androidXLibraryVersion"

    androidTestImplementation 'junit:junit:4.12'
    androidTestImplementation "androidx.annotation:annotation:$androidXLibraryVersion"
    androidTestImplementation 'androidx.test:core-ktx:1.4.0'
    androidTestImplementation 'androidx.test:rules:1.4.0'
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation 'androidx.test.ext:truth:1.4.0'
    androidTestImplementation 'org.mockito:mockito-android:3.2.0'

    androidTestImplementation "com.google.android.gms:play-services-ads:$playServicesVersion"
    androidTestImplementation "com.google.android.gms:play-services-gcm:$playServicesVersion"
    androidTestImplementation "com.google.android.gms:play-services-location:$playServicesVersion"
    androidTestImplementation "com.google.android.gms:play-services-nearby:$playServicesVersion"
    androidTestImplementation "com.google.firebase:firebase-core:17.4.3"
    androidTestImplementation "androidx.appcompat:appcompat:$androidXLibraryVersion"

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:3.2.0'
    testImplementation 'androidx.test:core:1.4.0'
    testImplementation 'androidx.test:rules:1.4.0'
    testImplementation 'androidx.test.ext:junit:1.1.3'
    testImplementation 'androidx.test.ext:junit-ktx:1.1.3'
    testImplementation 'androidx.test.espresso:espresso-intents:3.4.0'
    testImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    testImplementation 'androidx.test.ext:truth:1.4.0'
    testImplementation "com.google.android.gms:play-services-ads:$playServicesVersion"
    testImplementation "com.google.android.gms:play-services-gcm:$playServicesVersion"
    testImplementation "com.google.android.gms:play-services-location:$playServicesVersion"
    testImplementation "com.google.android.gms:play-services-nearby:$playServicesVersion"
    testImplementation "androidx.appcompat:appcompat:$androidXLibraryVersion"
    testImplementation 'org.robolectric:robolectric:4.7.1'

    testImplementation "org.powermock:powermock-module-junit4:2.0.7"
    testImplementation "org.powermock:powermock-module-junit4-rule:2.0.7"
    testImplementation "org.powermock:powermock-api-mockito2:2.0.7"
    testImplementation "org.powermock:powermock-classloading-xstream:2.0.7"

    testImplementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_couroutines_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_couroutines_version"
}

apply from: 'maven-publish.gradle'
apply from: 'jacoco.gradle'
apply from: 'metalava.gradle'
