# compiler: R8
# compiler_version: 2.1.62
# pg_map_id: 5f5af57
# common_typos_disable
com.batch.android.AdsIdentifierProviderAvailabilityException -> com.batch.android.AdsIdentifierProviderAvailabilityException:
    1:1:void <init>(java.lang.String):10:10 -> <init>
com.batch.android.AttributesCheckWebservice -> com.batch.android.a:
    java.lang.String TAG -> v
    com.batch.android.webservice.listener.AttributesCheckWebserviceListener listener -> u
    long version -> s
    java.lang.String transactionID -> t
    1:17:void <init>(android.content.Context,long,java.lang.String,com.batch.android.webservice.listener.AttributesCheckWebserviceListener):53:69 -> <init>
    18:18:void <init>(android.content.Context,long,java.lang.String,com.batch.android.webservice.listener.AttributesCheckWebserviceListener):64:64 -> <init>
    19:19:void <init>(android.content.Context,long,java.lang.String,com.batch.android.webservice.listener.AttributesCheckWebserviceListener):60:60 -> <init>
    20:20:void <init>(android.content.Context,long,java.lang.String,com.batch.android.webservice.listener.AttributesCheckWebserviceListener):56:56 -> <init>
    java.lang.String getSpecificConnectTimeoutKey() -> A
    java.lang.String getSpecificReadTimeoutKey() -> B
    java.lang.String getSpecificRetryCountKey() -> C
    java.lang.String getURLSorterPatternParameterKey() -> F
    java.lang.String getPropertyParameterKey() -> H
    1:3:java.util.List getQueries():77:79 -> I
    java.lang.String getTaskIdentifier() -> a
    java.lang.String getCryptorModeParameterKey() -> o
    java.lang.String getCryptorTypeParameterKey() -> p
    1:51:void run():88:138 -> run
    52:52:void run():132:132 -> run
    53:55:void run():99:99 -> run
    57:70:void run():101:114 -> run
    71:71:void run():111:111 -> run
    72:72:void run():108:108 -> run
    73:109:void run():105:141 -> run
    java.lang.String getPostCryptorTypeParameterKey() -> v
    java.lang.String getReadCryptorTypeParameterKey() -> y
com.batch.android.AttributesCheckWebservice$1 -> com.batch.android.a$a:
    int[] $SwitchMap$com$batch$android$core$Webservice$WebserviceError$Reason -> a
    1:1:void <clinit>():103:103 -> <clinit>
com.batch.android.AttributesSendWebservice -> com.batch.android.b:
    java.lang.String TAG -> w
    java.util.Map attributes -> t
    com.batch.android.webservice.listener.AttributesSendWebserviceListener listener -> v
    long version -> s
    java.util.Map tags -> u
    1:22:void <init>(android.content.Context,long,java.util.Map,java.util.Map,com.batch.android.webservice.listener.AttributesSendWebserviceListener):60:81 -> <init>
    23:23:void <init>(android.content.Context,long,java.util.Map,java.util.Map,com.batch.android.webservice.listener.AttributesSendWebserviceListener):75:75 -> <init>
    24:24:void <init>(android.content.Context,long,java.util.Map,java.util.Map,com.batch.android.webservice.listener.AttributesSendWebserviceListener):71:71 -> <init>
    25:25:void <init>(android.content.Context,long,java.util.Map,java.util.Map,com.batch.android.webservice.listener.AttributesSendWebserviceListener):67:67 -> <init>
    26:26:void <init>(android.content.Context,long,java.util.Map,java.util.Map,com.batch.android.webservice.listener.AttributesSendWebserviceListener):63:63 -> <init>
    java.lang.String getSpecificConnectTimeoutKey() -> A
    java.lang.String getSpecificReadTimeoutKey() -> B
    java.lang.String getSpecificRetryCountKey() -> C
    java.lang.String getURLSorterPatternParameterKey() -> F
    java.lang.String getPropertyParameterKey() -> H
    1:3:java.util.List getQueries():89:91 -> I
    java.lang.String getTaskIdentifier() -> a
    java.lang.String getCryptorModeParameterKey() -> o
    java.lang.String getCryptorTypeParameterKey() -> p
    1:51:void run():100:150 -> run
    52:52:void run():144:144 -> run
    53:55:void run():111:111 -> run
    57:70:void run():113:126 -> run
    71:71:void run():123:123 -> run
    72:72:void run():120:120 -> run
    73:109:void run():117:153 -> run
    java.lang.String getPostCryptorTypeParameterKey() -> v
    java.lang.String getReadCryptorTypeParameterKey() -> y
com.batch.android.AttributesSendWebservice$1 -> com.batch.android.b$a:
    int[] $SwitchMap$com$batch$android$core$Webservice$WebserviceError$Reason -> a
    1:1:void <clinit>():115:115 -> <clinit>
com.batch.android.Batch -> com.batch.android.Batch:
    com.batch.android.Device device -> b
    com.batch.android.module.BatchModule moduleMaster -> k
    android.content.Intent newIntent -> g
    java.lang.String sessionID -> h
    com.batch.android.core.Reachability reachability -> f
    boolean didLogOptOutWarning -> i
    android.content.BroadcastReceiver receiver -> e
    com.batch.android.User user -> d
    java.lang.Boolean lastNotificationAuthorizationStatus -> j
    com.batch.android.Install install -> c
    com.batch.android.Config config -> a
    1:1:void <clinit>():179:179 -> <clinit>
    1:1:void <init>():185:185 -> <init>
    void manageUpdate(java.lang.String,java.lang.String) -> a
    1:1:com.batch.android.Install access$000():80:80 -> a
    2:3:void lambda$getAPIKey$0(java.lang.StringBuilder,com.batch.android.runtime.State):198:199 -> a
    4:12:com.batch.android.runtime.State lambda$setConfig$1(com.batch.android.Config,com.batch.android.runtime.State):251:259 -> a
    13:14:void lambda$getLoggerLevel$5(java.util.concurrent.atomic.AtomicReference,com.batch.android.runtime.State):339:340 -> a
    15:22:void _optOut(android.content.Context,boolean,com.batch.android.BatchOptOutResultListener):515:522 -> a
    23:23:void _optOut(android.content.Context,boolean,com.batch.android.BatchOptOutResultListener):512:512 -> a
    24:27:void lambda$_optOut$7(android.content.Context,java.lang.Void):517:520 -> a
    28:28:void lambda$_optOut$8(com.batch.android.BatchOptOutResultListener,java.lang.Exception):524:524 -> a
    29:34:void lambda$onNewIntent$9(android.content.Intent,android.app.Activity,com.batch.android.runtime.State):2063:2068 -> a
    35:361:void doBatchStart(android.content.Context,boolean,boolean):2105:2431 -> a
    362:487:com.batch.android.runtime.State lambda$doBatchStart$10(com.batch.android.runtime.RuntimeManager,boolean,android.content.Context,boolean,java.util.concurrent.atomic.AtomicBoolean,java.lang.StringBuilder,com.batch.android.runtime.State):2110:2235 -> a
    488:540:com.batch.android.runtime.State lambda$doBatchStart$10(com.batch.android.runtime.RuntimeManager,boolean,android.content.Context,boolean,java.util.concurrent.atomic.AtomicBoolean,java.lang.StringBuilder,com.batch.android.runtime.State):2234:2286 -> a
    541:587:com.batch.android.runtime.State lambda$doBatchStart$10(com.batch.android.runtime.RuntimeManager,boolean,android.content.Context,boolean,java.util.concurrent.atomic.AtomicBoolean,java.lang.StringBuilder,com.batch.android.runtime.State):2285:2331 -> a
    588:642:com.batch.android.runtime.State lambda$doBatchStart$10(com.batch.android.runtime.RuntimeManager,boolean,android.content.Context,boolean,java.util.concurrent.atomic.AtomicBoolean,java.lang.StringBuilder,com.batch.android.runtime.State):2330:2384 -> a
    643:657:com.batch.android.runtime.State lambda$doBatchStart$10(com.batch.android.runtime.RuntimeManager,boolean,android.content.Context,boolean,java.util.concurrent.atomic.AtomicBoolean,java.lang.StringBuilder,com.batch.android.runtime.State):2383:2397 -> a
    658:659:void lambda$doBatchStart$11(com.batch.android.runtime.RuntimeManager,java.util.concurrent.atomic.AtomicBoolean,java.lang.StringBuilder,boolean,com.batch.android.runtime.State):2414:2415 -> a
    660:660:void lambda$doBatchStart$11(com.batch.android.runtime.RuntimeManager,java.util.concurrent.atomic.AtomicBoolean,java.lang.StringBuilder,boolean,com.batch.android.runtime.State):2413:2413 -> a
    661:722:com.batch.android.runtime.State lambda$onStop$12(boolean,android.content.Context,boolean,com.batch.android.runtime.State):2450:2511 -> a
    723:723:com.batch.android.runtime.State lambda$onStop$12(boolean,android.content.Context,boolean,com.batch.android.runtime.State):2498:2498 -> a
    724:724:void lambda$onWebserviceExecutorWorkFinished$13(java.util.concurrent.atomic.AtomicBoolean,com.batch.android.runtime.State):2537:2537 -> a
    725:749:com.batch.android.runtime.State lambda$doStop$14(com.batch.android.runtime.State):2557:2581 -> a
    750:750:void checkForNotificationAuthorizationChange(android.content.Context):2702:2702 -> a
    751:781:void checkForNotificationAuthorizationChange(android.content.Context):2700:2730 -> a
    782:789:void lambda$checkForNotificationAuthorizationChange$15(android.content.Context,com.batch.android.runtime.RuntimeManager):2719:2726 -> a
    1:1:void access$100():80:80 -> b
    2:3:void lambda$shouldUseAdvancedDeviceInformation$3(java.util.concurrent.atomic.AtomicBoolean,com.batch.android.runtime.State):291:292 -> b
    4:5:void lambda$getSessionID$6(java.lang.StringBuilder,com.batch.android.runtime.State):357:358 -> b
    6:75:void onStop(android.content.Context,boolean,boolean):2448:2517 -> b
    76:82:void onStop(android.content.Context,boolean,boolean):2516:2522 -> b
    83:85:void setupReachability(android.content.Context):2618:2620 -> b
    1:1:void access$200():80:80 -> c
    2:3:void lambda$shouldUseAdvertisingID$2(java.util.concurrent.atomic.AtomicBoolean,com.batch.android.runtime.State):274:275 -> c
    1:1:void copyBatchExtras(android.content.Intent,android.content.Intent):397:397 -> copyBatchExtras
    2:2:void copyBatchExtras(android.os.Bundle,android.os.Bundle):411:411 -> copyBatchExtras
    1:2:void lambda$shouldUseGoogleInstanceID$4(java.util.concurrent.atomic.AtomicBoolean,com.batch.android.runtime.State):310:311 -> d
    3:6:void clearCachedInstallData():2607:2610 -> d
    1:34:void doStop():2555:2588 -> e
    1:1:com.batch.android.Device getDevice():2633:2633 -> f
    1:1:com.batch.android.Install getInstall():2643:2643 -> g
    1:9:java.lang.String getAPIKey():196:204 -> getAPIKey
    1:1:java.lang.String getBroadcastPermissionName(android.content.Context):422:422 -> getBroadcastPermissionName
    1:8:com.batch.android.LoggerLevel getLoggerLevel():337:344 -> getLoggerLevel
    1:10:java.lang.String getSessionID():354:363 -> getSessionID
    1:9:com.batch.android.BatchUserProfile getUserProfile():226:234 -> getUserProfile
    1:1:com.batch.android.User getUser():2653:2653 -> h
    1:11:void onWebserviceExecutorWorkFinished():2533:2543 -> i
    1:1:boolean isOptedOut(android.content.Context):559:559 -> isOptedOut
    2:2:boolean isOptedOut(android.content.Context):557:557 -> isOptedOut
    1:3:boolean isRunningInDevMode():379:381 -> isRunningInDevMode
    1:1:void updateVersionManagement():2670:2670 -> j
    2:8:void updateVersionManagement():2669:2675 -> j
    9:18:void updateVersionManagement():2674:2683 -> j
    19:25:void updateVersionManagement():2682:2688 -> j
    26:33:void updateVersionManagement():2687:2694 -> j
    1:1:void onDestroy(android.app.Activity):2095:2095 -> onDestroy
    1:1:void onNewIntent(android.app.Activity,android.content.Intent):2062:2062 -> onNewIntent
    1:1:void onServiceCreate(android.content.Context,boolean):2039:2039 -> onServiceCreate
    1:1:void onServiceDestroy(android.content.Context):2051:2051 -> onServiceDestroy
    1:1:void onStart(android.app.Activity):2017:2017 -> onStart
    1:1:void onStop(android.app.Activity):2084:2084 -> onStop
    1:1:void optIn(android.content.Context):545:545 -> optIn
    2:2:void optIn(android.content.Context):543:543 -> optIn
    1:1:void optOut(android.content.Context):449:449 -> optOut
    2:2:void optOut(android.content.Context,com.batch.android.BatchOptOutResultListener):467:467 -> optOut
    1:1:void optOutAndWipeData(android.content.Context):482:482 -> optOutAndWipeData
    2:2:void optOutAndWipeData(android.content.Context,com.batch.android.BatchOptOutResultListener):503:503 -> optOutAndWipeData
    1:1:void setConfig(com.batch.android.Config):250:250 -> setConfig
    1:8:boolean shouldUseAdvancedDeviceInformation():289:296 -> shouldUseAdvancedDeviceInformation
    1:8:boolean shouldUseAdvertisingID():272:279 -> shouldUseAdvertisingID
    1:8:boolean shouldUseGoogleInstanceID():308:315 -> shouldUseGoogleInstanceID
com.batch.android.Batch$1 -> com.batch.android.Batch$a:
com.batch.android.Batch$Actions -> com.batch.android.Batch$Actions:
    1:1:void <init>():1927:1927 -> <init>
    1:1:void addDrawableAlias(java.lang.String,int):1971:1971 -> addDrawableAlias
    1:1:boolean performAction(android.content.Context,java.lang.String,com.batch.android.json.JSONObject):1987:1987 -> performAction
    1:1:void register(com.batch.android.UserAction):1941:1941 -> register
    1:1:void setDeeplinkInterceptor(com.batch.android.BatchDeeplinkInterceptor):1999:1999 -> setDeeplinkInterceptor
    1:1:void unregister(java.lang.String):1954:1954 -> unregister
com.batch.android.Batch$Debug -> com.batch.android.Batch$Debug:
    1:1:void <init>():573:573 -> <init>
    1:2:void startDebugActivity(android.content.Context):586:587 -> startDebugActivity
com.batch.android.Batch$EventDispatcher -> com.batch.android.Batch$EventDispatcher:
    1:1:void <init>():1212:1212 -> <init>
    1:1:void addDispatcher(com.batch.android.BatchEventDispatcher):1223:1223 -> addDispatcher
    1:1:boolean removeDispatcher(com.batch.android.BatchEventDispatcher):1233:1233 -> removeDispatcher
com.batch.android.Batch$EventDispatcher$Type -> com.batch.android.Batch$EventDispatcher$Type:
    com.batch.android.Batch$EventDispatcher$Type[] $VALUES -> a
    1:7:void <clinit>():1243:1249 -> <clinit>
    8:8:void <clinit>():1240:1240 -> <clinit>
    1:1:void <init>(java.lang.String,int):1241:1241 -> <init>
    1:1:boolean isMessagingEvent():1258:1258 -> isMessagingEvent
    1:1:boolean isNotificationEvent():1253:1253 -> isNotificationEvent
    1:1:com.batch.android.Batch$EventDispatcher$Type valueOf(java.lang.String):1240:1240 -> valueOf
    1:1:com.batch.android.Batch$EventDispatcher$Type[] values():1240:1240 -> values
com.batch.android.Batch$Inbox -> com.batch.android.Batch$Inbox:
    1:1:void <init>():602:602 -> <init>
    1:2:com.batch.android.BatchInboxFetcher getFetcher(android.content.Context):618:619 -> getFetcher
    3:3:com.batch.android.BatchInboxFetcher getFetcher(android.content.Context):616:616 -> getFetcher
    4:4:com.batch.android.BatchInboxFetcher getFetcher(android.content.Context,java.lang.String,java.lang.String):641:641 -> getFetcher
    5:5:com.batch.android.BatchInboxFetcher getFetcher(android.content.Context,java.lang.String,java.lang.String):639:639 -> getFetcher
    6:6:com.batch.android.BatchInboxFetcher getFetcher(java.lang.String,java.lang.String):661:661 -> getFetcher
com.batch.android.Batch$InternalBroadcastReceiver -> com.batch.android.Batch$b:
    1:1:void <init>():2747:2747 -> <init>
    2:2:void <init>(com.batch.android.Batch$1):2747:2747 -> <init>
    1:12:void onReceive(android.content.Context,android.content.Intent):2756:2767 -> onReceive
    13:13:void onReceive(android.content.Context,android.content.Intent):2764:2764 -> onReceive
com.batch.android.Batch$Messaging -> com.batch.android.Batch$Messaging:
    1:1:void <init>():1591:1591 -> <init>
    1:1:boolean hasPendingMessage():1898:1898 -> hasPendingMessage
    1:1:boolean isDoNotDisturbEnabled():1888:1888 -> isDoNotDisturbEnabled
    1:4:com.batch.android.BatchBannerView loadBanner(android.content.Context,com.batch.android.BatchMessage):1833:1833 -> loadBanner
    1:4:androidx.fragment.app.DialogFragment loadFragment(android.content.Context,com.batch.android.BatchMessage):1811:1811 -> loadFragment
    1:1:com.batch.android.BatchMessage popPendingMessage():1912:1912 -> popPendingMessage
    1:1:void setAutomaticMode(boolean):1760:1760 -> setAutomaticMode
    1:1:void setDoNotDisturbEnabled(boolean):1880:1880 -> setDoNotDisturbEnabled
    1:1:void setLifecycleListener(com.batch.android.Batch$Messaging$LifecycleListener):1786:1786 -> setLifecycleListener
    1:1:void setShowForegroundLandings(boolean):1748:1748 -> setShowForegroundLandings
    1:1:void setTypefaceOverride(android.graphics.Typeface,android.graphics.Typeface):1775:1775 -> setTypefaceOverride
    1:1:void show(android.content.Context,com.batch.android.BatchMessage):1859:1859 -> show
    2:2:void show(android.content.Context,com.batch.android.BatchMessage):1857:1857 -> show
    3:3:void show(android.content.Context,com.batch.android.BatchMessage):1854:1854 -> show
com.batch.android.Batch$Messaging$DisplayHint -> com.batch.android.Batch$Messaging$DisplayHint:
    android.view.View view -> b
    com.batch.android.Batch$Messaging$DisplayHintStrategy strategy -> a
    1:3:void <init>(android.view.View,com.batch.android.Batch$Messaging$DisplayHintStrategy):1699:1701 -> <init>
    1:1:com.batch.android.Batch$Messaging$DisplayHint embed(android.widget.FrameLayout):1729:1729 -> embed
    2:2:com.batch.android.Batch$Messaging$DisplayHint embed(android.widget.FrameLayout):1726:1726 -> embed
    1:1:com.batch.android.Batch$Messaging$DisplayHint findUsingView(android.view.View):1715:1715 -> findUsingView
    2:2:com.batch.android.Batch$Messaging$DisplayHint findUsingView(android.view.View):1712:1712 -> findUsingView
com.batch.android.Batch$Messaging$DisplayHintStrategy -> com.batch.android.Batch$Messaging$a:
    com.batch.android.Batch$Messaging$DisplayHintStrategy[] $VALUES -> c
    com.batch.android.Batch$Messaging$DisplayHintStrategy EMBED -> b
    com.batch.android.Batch$Messaging$DisplayHintStrategy TRANSVERSE_HIERARCHY -> a
    1:2:void <clinit>():1681:1682 -> <clinit>
    3:3:void <clinit>():1679:1679 -> <clinit>
    1:1:void <init>(java.lang.String,int):1679:1679 -> <init>
    1:1:com.batch.android.Batch$Messaging$DisplayHintStrategy valueOf(java.lang.String):1679:1679 -> valueOf
    1:1:com.batch.android.Batch$Messaging$DisplayHintStrategy[] values():1679:1679 -> values
com.batch.android.Batch$Push -> com.batch.android.Batch$Push:
    1:1:void <init>():679:679 -> <init>
    1:1:void appendBatchData(android.content.Intent,android.content.Intent):862:862 -> appendBatchData
    2:2:void appendBatchData(android.os.Bundle,android.content.Intent):875:875 -> appendBatchData
    3:3:void appendBatchData(com.google.firebase.messaging.RemoteMessage,android.content.Intent):888:888 -> appendBatchData
    1:1:void dismissNotifications():767:767 -> dismissNotifications
    1:1:void displayNotification(android.content.Context,android.content.Intent):1062:1062 -> displayNotification
    2:2:void displayNotification(android.content.Context,android.content.Intent,boolean):1076:1076 -> displayNotification
    3:3:void displayNotification(android.content.Context,android.content.Intent,com.batch.android.BatchNotificationInterceptor):1090:1090 -> displayNotification
    4:4:void displayNotification(android.content.Context,android.content.Intent,com.batch.android.BatchNotificationInterceptor,boolean):1107:1107 -> displayNotification
    5:5:void displayNotification(android.content.Context,com.google.firebase.messaging.RemoteMessage):1118:1118 -> displayNotification
    6:6:void displayNotification(android.content.Context,com.google.firebase.messaging.RemoteMessage,com.batch.android.BatchNotificationInterceptor):1129:1129 -> displayNotification
    1:1:com.batch.android.BatchNotificationChannelsManager getChannelsManager():753:753 -> getChannelsManager
    1:1:java.lang.String getLastKnownPushToken():1178:1178 -> getLastKnownPushToken
    1:1:java.util.EnumSet getNotificationsType(android.content.Context):778:778 -> getNotificationsType
    1:1:boolean isBatchPush(android.content.Intent):807:807 -> isBatchPush
    2:2:boolean isBatchPush(com.google.firebase.messaging.RemoteMessage):820:820 -> isBatchPush
    1:1:boolean isManualDisplayModeActivated():839:839 -> isManualDisplayModeActivated
    1:1:android.app.PendingIntent makePendingIntent(android.content.Context,android.content.Intent,android.os.Bundle):922:922 -> makePendingIntent
    2:2:android.app.PendingIntent makePendingIntent(android.content.Context,android.content.Intent,android.os.Bundle):918:918 -> makePendingIntent
    3:3:android.app.PendingIntent makePendingIntent(android.content.Context,android.content.Intent,android.os.Bundle):914:914 -> makePendingIntent
    4:4:android.app.PendingIntent makePendingIntent(android.content.Context,android.content.Intent,android.os.Bundle):910:910 -> makePendingIntent
    5:5:android.app.PendingIntent makePendingIntent(android.content.Context,android.content.Intent,com.google.firebase.messaging.RemoteMessage):958:958 -> makePendingIntent
    6:6:android.app.PendingIntent makePendingIntent(android.content.Context,android.content.Intent,com.google.firebase.messaging.RemoteMessage):954:954 -> makePendingIntent
    7:7:android.app.PendingIntent makePendingIntent(android.content.Context,android.content.Intent,com.google.firebase.messaging.RemoteMessage):950:950 -> makePendingIntent
    8:8:android.app.PendingIntent makePendingIntent(android.content.Context,android.content.Intent,com.google.firebase.messaging.RemoteMessage):946:946 -> makePendingIntent
    1:1:android.app.PendingIntent makePendingIntentForDeeplink(android.content.Context,java.lang.String,android.os.Bundle):991:991 -> makePendingIntentForDeeplink
    2:2:android.app.PendingIntent makePendingIntentForDeeplink(android.content.Context,java.lang.String,android.os.Bundle):988:988 -> makePendingIntentForDeeplink
    3:3:android.app.PendingIntent makePendingIntentForDeeplink(android.content.Context,java.lang.String,android.os.Bundle):984:984 -> makePendingIntentForDeeplink
    4:4:android.app.PendingIntent makePendingIntentForDeeplink(android.content.Context,java.lang.String,android.os.Bundle):980:980 -> makePendingIntentForDeeplink
    5:5:android.app.PendingIntent makePendingIntentForDeeplink(android.content.Context,java.lang.String,com.google.firebase.messaging.RemoteMessage):1024:1024 -> makePendingIntentForDeeplink
    6:6:android.app.PendingIntent makePendingIntentForDeeplink(android.content.Context,java.lang.String,com.google.firebase.messaging.RemoteMessage):1021:1021 -> makePendingIntentForDeeplink
    7:7:android.app.PendingIntent makePendingIntentForDeeplink(android.content.Context,java.lang.String,com.google.firebase.messaging.RemoteMessage):1017:1017 -> makePendingIntentForDeeplink
    8:8:android.app.PendingIntent makePendingIntentForDeeplink(android.content.Context,java.lang.String,com.google.firebase.messaging.RemoteMessage):1013:1013 -> makePendingIntentForDeeplink
    1:1:void onNotificationDisplayed(android.content.Context,android.content.Intent):1153:1153 -> onNotificationDisplayed
    2:2:void onNotificationDisplayed(android.content.Context,com.google.firebase.messaging.RemoteMessage):1164:1164 -> onNotificationDisplayed
    1:1:void refreshRegistration():1197:1197 -> refreshRegistration
    1:1:void setAdditionalIntentFlags(java.lang.Integer):1142:1142 -> setAdditionalIntentFlags
    1:1:void setGCMSenderId(java.lang.String):710:710 -> setGCMSenderId
    1:1:void setLargeIcon(android.graphics.Bitmap):744:744 -> setLargeIcon
    1:1:void setManualDisplay(boolean):850:850 -> setManualDisplay
    1:1:void setNotificationInterceptor(com.batch.android.BatchNotificationInterceptor):1188:1188 -> setNotificationInterceptor
    1:1:void setNotificationsColor(int):831:831 -> setNotificationsColor
    1:1:void setNotificationsType(java.util.EnumSet):794:794 -> setNotificationsType
    1:1:void setSmallIconResourceId(int):720:720 -> setSmallIconResourceId
    1:1:void setSound(android.net.Uri):734:734 -> setSound
    1:1:boolean shouldDisplayPush(android.content.Context,android.content.Intent):1037:1037 -> shouldDisplayPush
    2:2:boolean shouldDisplayPush(android.content.Context,com.google.firebase.messaging.RemoteMessage):1051:1051 -> shouldDisplayPush
com.batch.android.Batch$User -> com.batch.android.Batch$User:
    1:1:void <init>():1336:1336 -> <init>
    1:1:com.batch.android.BatchUserDataEditor editor():1422:1422 -> editor
    1:1:void fetchAttributes(android.content.Context,com.batch.android.BatchAttributesFetchListener):1434:1434 -> fetchAttributes
    1:1:void fetchTagCollections(android.content.Context,com.batch.android.BatchTagCollectionsFetchListener):1446:1446 -> fetchTagCollections
    1:1:com.batch.android.BatchUserDataEditor getEditor():1410:1410 -> getEditor
    1:1:java.lang.String getIdentifier(android.content.Context):1398:1398 -> getIdentifier
    2:2:java.lang.String getIdentifier(android.content.Context):1395:1395 -> getIdentifier
    1:3:java.lang.String getInstallationID():1348:1350 -> getInstallationID
    1:1:java.lang.String getLanguage(android.content.Context):1368:1368 -> getLanguage
    2:2:java.lang.String getLanguage(android.content.Context):1365:1365 -> getLanguage
    1:1:java.lang.String getRegion(android.content.Context):1383:1383 -> getRegion
    2:2:java.lang.String getRegion(android.content.Context):1380:1380 -> getRegion
    1:1:void printDebugInformation():1572:1572 -> printDebugInformation
    1:1:void trackEvent(java.lang.String):1457:1457 -> trackEvent
    2:2:void trackEvent(java.lang.String,java.lang.String):1469:1469 -> trackEvent
    3:8:void trackEvent(java.lang.String,java.lang.String,com.batch.android.json.JSONObject):1486:1491 -> trackEvent
    9:15:void trackEvent(java.lang.String,java.lang.String,com.batch.android.BatchEventData):1507:1513 -> trackEvent
    1:1:void trackLocation(android.location.Location):1528:1528 -> trackLocation
    1:1:void trackTransaction(double):1539:1539 -> trackTransaction
    2:9:void trackTransaction(double,com.batch.android.json.JSONObject):1554:1561 -> trackTransaction
com.batch.android.BatchActionActivity -> com.batch.android.BatchActionActivity:
    java.lang.String TAG -> a
    1:1:void <init>():22:22 -> <init>
    1:1:android.content.Intent addPayloadToIntent(android.content.Intent,android.os.Bundle):31:31 -> a
    2:5:androidx.core.app.TaskStackBuilder addPayloadToTaskStackBuilder(androidx.core.app.TaskStackBuilder,android.os.Bundle):40:43 -> a
    6:36:void launchDeeplink(android.content.Intent,java.lang.String):60:90 -> a
    37:40:void launchDeeplink(android.content.Intent,java.lang.String):83:86 -> a
    41:85:void launchDeeplink(android.content.Intent,java.lang.String):68:112 -> a
    86:89:void launchDeeplink(android.content.Intent,java.lang.String):105:108 -> a
    90:115:void launchDeeplink(android.content.Intent,java.lang.String):95:120 -> a
    1:2:void onDestroy():165:166 -> onDestroy
    1:16:void onStart():126:141 -> onStart
    17:17:void onStart():138:138 -> onStart
    18:34:void onStart():136:152 -> onStart
    1:2:void onStop():158:159 -> onStop
com.batch.android.BatchActionService -> com.batch.android.BatchActionService:
    java.lang.String TAG -> a
    java.lang.String ACTION_EXTRA_IDENTIFIER -> c
    java.lang.String INTENT_ACTION -> b
    java.lang.String ACTION_EXTRA_DISMISS_NOTIFICATION_ID -> e
    java.lang.String ACTION_EXTRA_ARGS -> d
    1:1:void <init>():32:32 -> <init>
    1:50:void onHandleIntent(android.content.Intent):38:87 -> onHandleIntent
    51:56:void onHandleIntent(android.content.Intent):86:91 -> onHandleIntent
com.batch.android.BatchActivityLifecycleHelper -> com.batch.android.BatchActivityLifecycleHelper:
    1:1:void <init>():21:21 -> <init>
    1:1:void onActivityDestroyed(android.app.Activity):62:62 -> onActivityDestroyed
    1:1:void onActivityStarted(android.app.Activity):32:32 -> onActivityStarted
    1:1:void onActivityStopped(android.app.Activity):50:50 -> onActivityStopped
com.batch.android.BatchAlertContent -> com.batch.android.BatchAlertContent:
    java.lang.String trackingIdentifier -> a
    java.lang.String body -> c
    com.batch.android.BatchAlertContent$CTA acceptCTA -> e
    java.lang.String title -> b
    java.lang.String cancelLabel -> d
    1:8:void <init>(com.batch.android.messaging.model.AlertMessage):28:35 -> <init>
    1:1:com.batch.android.BatchAlertContent$CTA getAcceptCTA():66:66 -> getAcceptCTA
    1:1:java.lang.String getBody():54:54 -> getBody
    1:1:java.lang.String getCancelLabel():60:60 -> getCancelLabel
    1:1:java.lang.String getTitle():48:48 -> getTitle
    1:1:java.lang.String getTrackingIdentifier():42:42 -> getTrackingIdentifier
com.batch.android.BatchAlertContent$CTA -> com.batch.android.BatchAlertContent$CTA:
    com.batch.android.json.JSONObject args -> c
    java.lang.String label -> a
    java.lang.String action -> b
    1:8:void <init>(com.batch.android.messaging.model.CTA):79:86 -> <init>
    1:1:java.lang.String getAction():100:100 -> getAction
    1:1:com.batch.android.json.JSONObject getArgs():106:106 -> getArgs
    1:1:java.lang.String getLabel():94:94 -> getLabel
com.batch.android.BatchBannerContent -> com.batch.android.BatchBannerContent:
    java.lang.String mediaAccessibilityDescription -> g
    java.lang.String mediaURL -> f
    java.lang.Long autoCloseTimeMillis -> i
    java.util.List ctas -> d
    com.batch.android.BatchBannerContent$Action globalTapAction -> e
    java.lang.String trackingIdentifier -> a
    boolean showCloseButton -> h
    java.lang.String body -> c
    java.lang.String title -> b
    1:1:void <init>(com.batch.android.messaging.model.BannerMessage):39:39 -> <init>
    2:35:void <init>(com.batch.android.messaging.model.BannerMessage):26:59 -> <init>
    1:1:java.lang.Long getAutoCloseTimeMillis():105:105 -> getAutoCloseTimeMillis
    1:1:java.lang.String getBody():75:75 -> getBody
    1:1:java.util.List getCtas():80:80 -> getCtas
    1:1:com.batch.android.BatchBannerContent$Action getGlobalTapAction():85:85 -> getGlobalTapAction
    1:1:java.lang.String getMediaAccessibilityDescription():95:95 -> getMediaAccessibilityDescription
    1:1:java.lang.String getMediaURL():90:90 -> getMediaURL
    1:1:java.lang.String getTitle():70:70 -> getTitle
    1:1:java.lang.String getTrackingIdentifier():65:65 -> getTrackingIdentifier
    1:1:boolean isShowCloseButton():100:100 -> isShowCloseButton
com.batch.android.BatchBannerContent$Action -> com.batch.android.BatchBannerContent$Action:
    com.batch.android.json.JSONObject args -> b
    java.lang.String action -> a
    1:7:void <init>(com.batch.android.messaging.model.Action):116:122 -> <init>
    1:1:java.lang.String getAction():130:130 -> getAction
    1:1:com.batch.android.json.JSONObject getArgs():136:136 -> getArgs
com.batch.android.BatchBannerContent$CTA -> com.batch.android.BatchBannerContent$CTA:
    java.lang.String label -> c
    1:2:void <init>(com.batch.android.messaging.model.CTA):147:148 -> <init>
    1:1:java.lang.String getLabel():154:154 -> getLabel
com.batch.android.BatchBannerView -> com.batch.android.BatchBannerView:
    com.batch.android.messaging.model.BannerMessage message -> b
    com.batch.android.messaging.view.formats.EmbeddedBannerContainer shownContainer -> c
    com.batch.android.MessagingAnalyticsDelegate analyticsDelegate -> e
    com.batch.android.BatchMessage rawMessage -> a
    boolean shown -> d
    1:1:void <init>(com.batch.android.BatchMessage,com.batch.android.messaging.model.BannerMessage,com.batch.android.MessagingAnalyticsDelegate):41:41 -> <init>
    2:12:void <init>(com.batch.android.BatchMessage,com.batch.android.messaging.model.BannerMessage,com.batch.android.MessagingAnalyticsDelegate):34:44 -> <init>
    1:1:void lambda$show$0(android.view.View):127:127 -> a
    2:14:void lambda$show$0(android.view.View):126:138 -> a
    15:15:void lambda$embed$1(android.widget.FrameLayout):170:170 -> a
    16:28:void lambda$embed$1(android.widget.FrameLayout):169:181 -> a
    1:2:void dismiss(boolean):196:197 -> dismiss
    1:9:void embed(android.widget.FrameLayout):159:167 -> embed
    10:10:void embed(android.widget.FrameLayout):156:156 -> embed
    1:27:void show(android.app.Activity):67:93 -> show
    28:28:void show(android.app.Activity):61:61 -> show
    29:37:void show(android.view.View):116:124 -> show
    38:38:void show(android.view.View):113:113 -> show
com.batch.android.BatchBannerViewPrivateHelper -> com.batch.android.c:
    1:1:void <init>():10:10 -> <init>
    1:1:com.batch.android.BatchBannerView newInstance(com.batch.android.BatchMessage,com.batch.android.messaging.model.BannerMessage,com.batch.android.MessagingAnalyticsDelegate):16:16 -> a
com.batch.android.BatchDeeplinkInterceptor -> com.batch.android.BatchDeeplinkInterceptor:
    1:1:android.content.Intent getFallbackIntent(android.content.Context):35:35 -> getFallbackIntent
com.batch.android.BatchDisplayReceiptJobService -> com.batch.android.BatchDisplayReceiptJobService:
    java.lang.String TAG -> a
    1:1:void <init>():21:21 -> <init>
    1:3:boolean onStartJob(android.app.job.JobParameters):28:30 -> onStartJob
com.batch.android.BatchDisplayReceiptJobService$SendReceiptTask -> com.batch.android.BatchDisplayReceiptJobService$a:
    java.lang.ref.WeakReference originService -> a
    android.app.job.JobParameters originJobParameters -> b
    1:3:void <init>(android.app.job.JobService,android.app.job.JobParameters):47:49 -> <init>
    1:11:java.lang.Void doInBackground(java.lang.Void[]):55:65 -> a
    1:1:java.lang.Object doInBackground(java.lang.Object[]):40:40 -> doInBackground
com.batch.android.BatchEventData -> com.batch.android.BatchEventData:
    java.util.Map attributes -> a
    int MAXIMUM_STRING_LENGTH -> f
    int MAXIMUM_VALUES -> d
    int MAXIMUM_TAGS -> e
    java.util.Set tags -> b
    boolean convertedFromLegacyAPI -> c
    1:1:void <init>():39:39 -> <init>
    2:6:void <init>():36:40 -> <init>
    7:7:void <init>(com.batch.android.json.JSONObject):44:44 -> <init>
    8:38:void <init>(com.batch.android.json.JSONObject):36:66 -> <init>
    1:3:int lambda$new$0(java.lang.String,java.lang.String):48:48 -> a
    4:4:java.util.Map getAttributes():80:80 -> a
    5:5:boolean enforceDateValue(java.util.Date):280:280 -> a
    6:7:boolean enforceAttributeName(java.lang.String):290:291 -> a
    1:8:com.batch.android.BatchEventData addTag(java.lang.String):101:108 -> addTag
    1:1:boolean getConvertedFromLegacyAPI():90:90 -> b
    2:3:boolean enforceAttributesCount(java.lang.String):252:253 -> b
    1:1:java.util.Set getTags():85:85 -> c
    2:9:boolean enforceStringValue(java.lang.String):262:269 -> c
    1:2:void init():74:75 -> d
    3:3:java.lang.String normalizeKey(java.lang.String):301:301 -> d
    1:15:com.batch.android.json.JSONObject toInternalJSON():230:244 -> e
    1:2:com.batch.android.BatchEventData put(java.lang.String,java.lang.String):124:125 -> put
    3:4:com.batch.android.BatchEventData put(java.lang.String,float):140:141 -> put
    5:6:com.batch.android.BatchEventData put(java.lang.String,double):156:157 -> put
    7:8:com.batch.android.BatchEventData put(java.lang.String,int):172:173 -> put
    9:10:com.batch.android.BatchEventData put(java.lang.String,long):188:189 -> put
    11:12:com.batch.android.BatchEventData put(java.lang.String,boolean):204:205 -> put
    13:15:com.batch.android.BatchEventData put(java.lang.String,java.util.Date):220:222 -> put
    16:16:com.batch.android.BatchEventData put(java.lang.String,java.util.Date):221:221 -> put
com.batch.android.BatchEventData$TypedAttribute -> com.batch.android.BatchEventData$a:
    com.batch.android.user.AttributeType type -> b
    java.lang.Object value -> a
    1:3:void <init>(java.lang.Object,com.batch.android.user.AttributeType):310:312 -> <init>
com.batch.android.BatchEventDataPrivateHelper -> com.batch.android.d:
    1:1:void <init>():13:13 -> <init>
    1:35:java.util.Map getAttributesFromEventData(com.batch.android.BatchEventData):17:51 -> a
    36:38:java.util.Map getAttributesFromEventData(com.batch.android.BatchEventData):47:47 -> a
    39:44:java.util.Map getAttributesFromEventData(com.batch.android.BatchEventData):38:43 -> a
    45:45:java.util.Map getAttributesFromEventData(com.batch.android.BatchEventData):42:42 -> a
    46:50:java.util.Map getAttributesFromEventData(com.batch.android.BatchEventData):30:34 -> a
    1:1:boolean getConvertedFromLegacyAPIFromEvent(com.batch.android.BatchEventData):67:67 -> b
    1:1:java.util.Set getTagsFromEventData(com.batch.android.BatchEventData):62:62 -> c
com.batch.android.BatchEventDataPrivateHelper$1 -> com.batch.android.d$a:
    int[] $SwitchMap$com$batch$android$user$AttributeType -> a
    1:1:void <clinit>():28:28 -> <clinit>
com.batch.android.BatchImageContent -> com.batch.android.BatchImageContent:
    com.batch.android.BatchImageContent$Action globalTapAction -> a
    long globalTapDelay -> b
    int autoCloseDelay -> g
    boolean isFullscreen -> h
    com.batch.android.messaging.Size2D imageSize -> f
    boolean allowSwipeToDismiss -> c
    java.lang.String imageDescription -> e
    java.lang.String imageURL -> d
    1:11:void <init>(com.batch.android.messaging.model.ImageMessage):30:40 -> <init>
    1:1:int getAutoCloseDelay():83:83 -> getAutoCloseDelay
    1:1:com.batch.android.BatchImageContent$Action getGlobalTapAction():116:116 -> getGlobalTapAction
    1:1:long getGlobalTapDelay():111:111 -> getGlobalTapDelay
    1:1:java.lang.String getImageDescription():96:96 -> getImageDescription
    1:4:android.graphics.Point getImageSize():88:91 -> getImageSize
    1:1:java.lang.String getImageURL():101:101 -> getImageURL
    1:1:boolean isAllowSwipeToDismiss():106:106 -> isAllowSwipeToDismiss
    1:1:boolean isFullscreen():78:78 -> isFullscreen
com.batch.android.BatchImageContent$Action -> com.batch.android.BatchImageContent$Action:
    com.batch.android.json.JSONObject args -> b
    java.lang.String action -> a
    1:7:void <init>(com.batch.android.messaging.model.Action):52:58 -> <init>
    1:1:java.lang.String getAction():66:66 -> getAction
    1:1:com.batch.android.json.JSONObject getArgs():72:72 -> getArgs
com.batch.android.BatchInAppMessage -> com.batch.android.BatchInAppMessage:
    com.batch.android.json.JSONObject customPayload -> d
    java.lang.String campaignId -> f
    java.lang.String LANDING_PAYLOAD_KEY -> i
    com.batch.android.json.JSONObject landingPayload -> c
    java.lang.String CAMPAIGN_TOKEN_KEY -> k
    java.lang.String CUSTOM_PAYLOAD_KEY -> j
    java.lang.String CAMPAIGN_EVENT_DATA_KEY -> m
    com.batch.android.BatchInAppMessage$Content cachedContent -> h
    java.lang.String CAMPAIGN_ID_KEY -> l
    java.lang.String campaignToken -> e
    com.batch.android.json.JSONObject eventData -> g
    1:6:void <init>(java.lang.String,java.lang.String,com.batch.android.json.JSONObject,com.batch.android.json.JSONObject,com.batch.android.json.JSONObject):78:83 -> <init>
    1:24:com.batch.android.BatchInAppMessage getInstanceFromBundle(android.os.Bundle):46:69 -> a
    25:25:com.batch.android.BatchInAppMessage getInstanceFromBundle(android.os.Bundle):56:56 -> a
    26:29:android.os.Bundle getBundleRepresentation():109:112 -> a
    30:36:android.os.Bundle getBundleRepresentation():111:117 -> a
    1:1:com.batch.android.json.JSONObject getCustomPayloadJSON():95:95 -> b
    1:1:com.batch.android.json.JSONObject getJSON():89:89 -> c
    java.lang.String getKind() -> d
    1:1:java.lang.String getCampaignId():123:123 -> e
    1:1:com.batch.android.json.JSONObject getEventData():128:128 -> f
    1:1:java.lang.String getCampaignToken():181:181 -> getCampaignToken
    1:21:com.batch.android.BatchInAppMessage$Content getContent():150:170 -> getContent
    1:1:com.batch.android.json.JSONObject getCustomPayload():135:135 -> getCustomPayload
com.batch.android.BatchInboxFetcher -> com.batch.android.BatchInboxFetcher:
    android.os.Handler handler -> b
    com.batch.android.inbox.InboxFetcherInternal impl -> a
    1:1:void <init>(com.batch.android.inbox.InboxFetcherInternal):43:43 -> <init>
    2:6:void <init>(com.batch.android.inbox.InboxFetcherInternal):40:44 -> <init>
    1:1:android.os.Handler access$000(com.batch.android.BatchInboxFetcher):35:35 -> a
    1:22:void fetchNewNotifications(com.batch.android.BatchInboxFetcher$OnNewNotificationsFetchedListener):126:147 -> fetchNewNotifications
    1:19:void fetchNextPage(com.batch.android.BatchInboxFetcher$OnNextPageFetchedListener):159:177 -> fetchNextPage
    1:1:java.util.List getFetchedNotifications():113:113 -> getFetchedNotifications
    1:1:boolean hasMore():74:74 -> hasMore
    1:1:void markAllAsRead():92:92 -> markAllAsRead
    1:1:void markAsDeleted(com.batch.android.BatchInboxNotificationContent):102:102 -> markAsDeleted
    1:1:void markAsRead(com.batch.android.BatchInboxNotificationContent):84:84 -> markAsRead
    1:1:void setFetchLimit(int):64:64 -> setFetchLimit
    1:1:void setHandlerOverride(android.os.Handler):189:189 -> setHandlerOverride
    1:1:void setMaxPageSize(int):53:53 -> setMaxPageSize
com.batch.android.BatchInboxFetcher$1 -> com.batch.android.BatchInboxFetcher$a:
    com.batch.android.BatchInboxFetcher this$0 -> b
    com.batch.android.BatchInboxFetcher$OnNewNotificationsFetchedListener val$originalListener -> a
    1:1:void <init>(com.batch.android.BatchInboxFetcher,com.batch.android.BatchInboxFetcher$OnNewNotificationsFetchedListener):129:129 -> <init>
    1:1:void lambda$onFetchSuccess$0(com.batch.android.BatchInboxFetcher$OnNewNotificationsFetchedListener,java.util.List,boolean,boolean):135:135 -> a
    2:2:void lambda$onFetchFailure$1(com.batch.android.BatchInboxFetcher$OnNewNotificationsFetchedListener,java.lang.String):143:143 -> a
    1:1:void onFetchFailure(java.lang.String):143:143 -> onFetchFailure
    1:1:void onFetchSuccess(java.util.List,boolean,boolean):135:135 -> onFetchSuccess
com.batch.android.BatchInboxFetcher$2 -> com.batch.android.BatchInboxFetcher$b:
    com.batch.android.BatchInboxFetcher this$0 -> b
    com.batch.android.BatchInboxFetcher$OnNextPageFetchedListener val$originalListener -> a
    1:1:void <init>(com.batch.android.BatchInboxFetcher,com.batch.android.BatchInboxFetcher$OnNextPageFetchedListener):162:162 -> <init>
    1:1:void lambda$onFetchSuccess$0(com.batch.android.BatchInboxFetcher$OnNextPageFetchedListener,java.util.List,boolean):167:167 -> a
    2:2:void lambda$onFetchFailure$1(com.batch.android.BatchInboxFetcher$OnNextPageFetchedListener,java.lang.String):173:173 -> a
    1:1:void onFetchFailure(java.lang.String):173:173 -> onFetchFailure
    1:1:void onFetchSuccess(java.util.List,boolean):167:167 -> onFetchSuccess
com.batch.android.BatchInboxNotificationContent -> com.batch.android.BatchInboxNotificationContent:
    com.batch.android.inbox.InboxNotificationContentInternal internalContent -> a
    com.batch.android.BatchPushPayload batchPushPayloadCache -> b
    1:1:void <init>(com.batch.android.inbox.InboxNotificationContentInternal):31:31 -> <init>
    2:11:void <init>(com.batch.android.inbox.InboxNotificationContentInternal):23:32 -> <init>
    1:1:java.lang.String getBody():55:55 -> getBody
    1:1:java.util.Date getDate():77:77 -> getDate
    1:1:java.lang.String getNotificationIdentifier():43:43 -> getNotificationIdentifier
    1:5:com.batch.android.BatchPushPayload getPushPayload():98:102 -> getPushPayload
    1:1:java.util.Map getRawPayload():87:87 -> getRawPayload
    1:1:com.batch.android.BatchNotificationSource getSource():61:61 -> getSource
    1:1:java.lang.String getTitle():49:49 -> getTitle
    1:1:boolean isDeleted():71:71 -> isDeleted
    1:1:boolean isUnread():66:66 -> isUnread
com.batch.android.BatchInterstitialContent -> com.batch.android.BatchInterstitialContent:
    java.lang.String mediaAccessibilityDescription -> g
    java.lang.String mediaURL -> f
    java.util.List ctas -> e
    java.lang.String trackingIdentifier -> a
    boolean showCloseButton -> h
    java.lang.String title -> c
    java.lang.String header -> b
    java.lang.String body -> d
    1:1:void <init>(com.batch.android.messaging.model.UniversalMessage):39:39 -> <init>
    2:31:void <init>(com.batch.android.messaging.model.UniversalMessage):30:59 -> <init>
    1:1:java.lang.String getBody():80:80 -> getBody
    1:1:java.util.List getCtas():85:85 -> getCtas
    1:1:java.lang.String getHeader():70:70 -> getHeader
    1:1:java.lang.String getMediaAccessibilityDescription():95:95 -> getMediaAccessibilityDescription
    1:1:java.lang.String getMediaURL():90:90 -> getMediaURL
    1:1:java.lang.String getTitle():75:75 -> getTitle
    1:1:java.lang.String getTrackingIdentifier():65:65 -> getTrackingIdentifier
    1:1:boolean shouldShowCloseButton():100:100 -> shouldShowCloseButton
com.batch.android.BatchInterstitialContent$CTA -> com.batch.android.BatchInterstitialContent$CTA:
    com.batch.android.json.JSONObject args -> c
    java.lang.String label -> a
    java.lang.String action -> b
    1:8:void <init>(com.batch.android.messaging.model.CTA):113:120 -> <init>
    1:1:java.lang.String getAction():134:134 -> getAction
    1:1:com.batch.android.json.JSONObject getArgs():140:140 -> getArgs
    1:1:java.lang.String getLabel():128:128 -> getLabel
com.batch.android.BatchLandingMessage -> com.batch.android.BatchLandingMessage:
    com.batch.android.json.JSONObject landing -> d
    android.os.Bundle payload -> c
    1:3:void <init>(android.os.Bundle,com.batch.android.json.JSONObject):22:24 -> <init>
    1:2:android.os.Bundle getBundleRepresentation():50:51 -> a
    com.batch.android.json.JSONObject getCustomPayloadJSON() -> b
    1:1:com.batch.android.json.JSONObject getJSON():30:30 -> c
    java.lang.String getKind() -> d
    1:1:android.os.Bundle getPushBundle():57:57 -> getPushBundle
com.batch.android.BatchMessage -> com.batch.android.BatchMessage:
    java.lang.String KIND_KEY -> a
    java.lang.String DATA_KEY -> b
    1:1:void <init>():25:25 -> <init>
    android.os.Bundle getBundleRepresentation() -> a
    com.batch.android.json.JSONObject getCustomPayloadJSON() -> b
    com.batch.android.json.JSONObject getJSON() -> c
    java.lang.String getKind() -> d
    1:18:com.batch.android.BatchMessage$Format getFormat():113:130 -> getFormat
    1:21:com.batch.android.BatchMessage getMessageForBundle(android.os.Bundle):75:95 -> getMessageForBundle
    22:22:com.batch.android.BatchMessage getMessageForBundle(android.os.Bundle):77:77 -> getMessageForBundle
    23:23:com.batch.android.BatchMessage getMessageForBundle(android.os.Bundle):72:72 -> getMessageForBundle
    1:5:void writeToBundle(android.os.Bundle):47:51 -> writeToBundle
    6:6:void writeToBundle(android.os.Bundle):44:44 -> writeToBundle
    1:5:void writeToIntent(android.content.Intent):61:65 -> writeToIntent
    6:6:void writeToIntent(android.content.Intent):58:58 -> writeToIntent
com.batch.android.BatchMessage$Format -> com.batch.android.BatchMessage$Format:
    com.batch.android.BatchMessage$Format[] $VALUES -> a
    1:21:void <clinit>():149:169 -> <clinit>
    22:22:void <clinit>():142:142 -> <clinit>
    1:1:void <init>(java.lang.String,int):143:143 -> <init>
    1:1:com.batch.android.BatchMessage$Format valueOf(java.lang.String):142:142 -> valueOf
    1:1:com.batch.android.BatchMessage$Format[] values():142:142 -> values
com.batch.android.BatchMessageAction -> com.batch.android.BatchMessageAction:
    com.batch.android.json.JSONObject args -> b
    java.lang.String action -> a
    1:7:void <init>(com.batch.android.messaging.model.Action):26:32 -> <init>
    1:1:java.lang.String getAction():40:40 -> getAction
    1:1:com.batch.android.json.JSONObject getArgs():46:46 -> getArgs
    1:1:boolean isDismissAction():51:51 -> isDismissAction
com.batch.android.BatchMessageCTA -> com.batch.android.BatchMessageCTA:
    java.lang.String label -> c
    1:2:void <init>(com.batch.android.messaging.model.CTA):22:23 -> <init>
    1:1:java.lang.String getLabel():29:29 -> getLabel
com.batch.android.BatchMessagingException -> com.batch.android.BatchMessagingException:
    1:1:void <init>():13:13 -> <init>
    2:2:void <init>(java.lang.String):18:18 -> <init>
    3:3:void <init>(java.lang.String,java.lang.Throwable):23:23 -> <init>
    4:4:void <init>(java.lang.Throwable):28:28 -> <init>
com.batch.android.BatchModalContent -> com.batch.android.BatchModalContent:
    java.lang.String mediaAccessibilityDescription -> g
    java.lang.String mediaURL -> f
    java.lang.Long autoCloseTimeMillis -> i
    java.util.List ctas -> d
    com.batch.android.BatchModalContent$Action globalTapAction -> e
    java.lang.String trackingIdentifier -> a
    boolean showCloseButton -> h
    java.lang.String body -> c
    java.lang.String title -> b
    1:1:void <init>(com.batch.android.messaging.model.ModalMessage):39:39 -> <init>
    2:35:void <init>(com.batch.android.messaging.model.ModalMessage):26:59 -> <init>
    1:1:java.lang.Long getAutoCloseTimeMillis():105:105 -> getAutoCloseTimeMillis
    1:1:java.lang.String getBody():75:75 -> getBody
    1:1:java.util.List getCtas():80:80 -> getCtas
    1:1:com.batch.android.BatchModalContent$Action getGlobalTapAction():85:85 -> getGlobalTapAction
    1:1:java.lang.String getMediaAccessibilityDescription():95:95 -> getMediaAccessibilityDescription
    1:1:java.lang.String getMediaURL():90:90 -> getMediaURL
    1:1:java.lang.String getTitle():70:70 -> getTitle
    1:1:java.lang.String getTrackingIdentifier():65:65 -> getTrackingIdentifier
    1:1:boolean isShowCloseButton():100:100 -> isShowCloseButton
com.batch.android.BatchModalContent$Action -> com.batch.android.BatchModalContent$Action:
    com.batch.android.json.JSONObject args -> b
    java.lang.String action -> a
    1:7:void <init>(com.batch.android.messaging.model.Action):116:122 -> <init>
    1:1:java.lang.String getAction():130:130 -> getAction
    1:1:com.batch.android.json.JSONObject getArgs():136:136 -> getArgs
com.batch.android.BatchModalContent$CTA -> com.batch.android.BatchModalContent$CTA:
    java.lang.String label -> c
    1:2:void <init>(com.batch.android.messaging.model.CTA):147:148 -> <init>
    1:1:java.lang.String getLabel():154:154 -> getLabel
com.batch.android.BatchNotificationAction -> com.batch.android.BatchNotificationAction:
    1:36:void <init>():22:57 -> <init>
    1:18:java.util.List getSupportActions(android.content.Context,java.util.List,com.batch.android.BatchPushPayload,java.lang.Integer):83:100 -> getSupportActions
    19:33:java.util.List getSupportActions(android.content.Context,java.util.List,com.batch.android.BatchPushPayload,java.lang.Integer):99:113 -> getSupportActions
    34:40:java.util.List getSupportActions(android.content.Context,java.util.List,com.batch.android.BatchPushPayload,java.lang.Integer):112:118 -> getSupportActions
    41:50:java.util.List getSupportActions(android.content.Context,java.util.List,com.batch.android.BatchPushPayload,java.lang.Integer):117:126 -> getSupportActions
    51:51:java.util.List getSupportActions(android.content.Context,java.util.List,com.batch.android.BatchPushPayload,java.lang.Integer):123:123 -> getSupportActions
    52:52:java.util.List getSupportActions(android.content.Context,java.util.List,com.batch.android.BatchPushPayload,java.lang.Integer):80:80 -> getSupportActions
com.batch.android.BatchNotificationChannelsManager -> com.batch.android.BatchNotificationChannelsManager:
    com.batch.android.BatchNotificationChannelsManager$NotificationChannelIdInterceptor channelIdInterceptor -> c
    java.lang.String channelOverride -> a
    com.batch.android.module.PushModule pushModule -> d
    com.batch.android.BatchNotificationChannelsManager$ChannelNameProvider channelNameProvider -> b
    1:17:void <init>(com.batch.android.module.PushModule):39:55 -> <init>
    18:18:void <init>(com.batch.android.module.PushModule):40:40 -> <init>
    1:12:java.lang.String getChannelId(com.batch.android.BatchPushPayload):65:76 -> a
    13:25:void registerBatchChannelIfNeeded(android.content.Context):93:105 -> a
    26:31:void registerBatchChannelIfNeeded(android.content.Context):104:109 -> a
    32:42:java.lang.String getBatchChannelName():122:132 -> a
    1:1:boolean shouldRegisterDefaultChannel():88:88 -> b
    1:1:boolean openSystemChannelSettings(android.content.Context):214:214 -> openSystemChannelSettings
    2:7:boolean openSystemChannelSettings(android.content.Context,java.lang.String):237:242 -> openSystemChannelSettings
    8:8:boolean openSystemChannelSettings(android.content.Context,java.lang.String):235:235 -> openSystemChannelSettings
    9:9:boolean openSystemChannelSettings(android.content.Context,java.lang.String):231:231 -> openSystemChannelSettings
    1:1:com.batch.android.BatchNotificationChannelsManager provide():46:46 -> provide
    1:1:void setChannelIdInterceptor(com.batch.android.BatchNotificationChannelsManager$NotificationChannelIdInterceptor):201:201 -> setChannelIdInterceptor
    1:1:void setChannelIdOverride(java.lang.String):157:157 -> setChannelIdOverride
    1:1:void setChannelName(android.content.Context,int):188:188 -> setChannelName
    1:1:void setChannelNameProvider(com.batch.android.BatchNotificationChannelsManager$ChannelNameProvider):175:175 -> setChannelNameProvider
com.batch.android.BatchNotificationChannelsManager$StringResChannelNameProvider -> com.batch.android.BatchNotificationChannelsManager$StringResChannelNameProvider:
    android.content.Context context -> a
    int resId -> b
    1:3:void <init>(android.content.Context,int):285:287 -> <init>
    1:1:java.lang.String getDefaultChannelName():293:293 -> getDefaultChannelName
com.batch.android.BatchNotificationChannelsManagerPrivateHelper -> com.batch.android.e:
    1:1:void <init>():10:10 -> <init>
    1:1:java.lang.String getChannelId(com.batch.android.BatchNotificationChannelsManager):15:15 -> a
    2:2:void registerBatchChannelIfNeeded(com.batch.android.BatchNotificationChannelsManager,android.content.Context):21:21 -> a
com.batch.android.BatchNotificationInterceptor -> com.batch.android.BatchNotificationInterceptor:
    1:1:void <init>():19:19 -> <init>
com.batch.android.BatchNotificationSource -> com.batch.android.BatchNotificationSource:
    com.batch.android.BatchNotificationSource[] $VALUES -> a
    1:4:void <clinit>():12:15 -> <clinit>
    5:5:void <clinit>():9:9 -> <clinit>
    1:1:void <init>(java.lang.String,int):10:10 -> <init>
    1:1:com.batch.android.BatchNotificationSource valueOf(java.lang.String):9:9 -> valueOf
    1:1:com.batch.android.BatchNotificationSource[] values():9:9 -> values
com.batch.android.BatchOptOutResultListener$ErrorPolicy -> com.batch.android.BatchOptOutResultListener$ErrorPolicy:
    com.batch.android.BatchOptOutResultListener$ErrorPolicy[] $VALUES -> a
    1:6:void <clinit>():21:26 -> <clinit>
    7:7:void <clinit>():15:15 -> <clinit>
    1:1:void <init>(java.lang.String,int):16:16 -> <init>
    1:1:com.batch.android.BatchOptOutResultListener$ErrorPolicy valueOf(java.lang.String):15:15 -> valueOf
    1:1:com.batch.android.BatchOptOutResultListener$ErrorPolicy[] values():15:15 -> values
com.batch.android.BatchPushData -> com.batch.android.BatchPushData:
    android.content.Context context -> b
    com.batch.android.core.InternalPushData internalPushData -> a
    1:14:void <init>(android.content.Context,android.content.Intent):39:52 -> <init>
    15:15:void <init>(android.content.Context,android.content.Intent):45:45 -> <init>
    16:16:void <init>(android.content.Context,android.content.Intent):41:41 -> <init>
    1:8:java.lang.String getBigPictureURL():129:136 -> getBigPictureURL
    9:9:java.lang.String getBigPictureURL():134:134 -> getBigPictureURL
    1:8:java.lang.String getCustomLargeIconURL():99:106 -> getCustomLargeIconURL
    9:9:java.lang.String getCustomLargeIconURL():104:104 -> getCustomLargeIconURL
    1:1:java.lang.String getDeeplink():76:76 -> getDeeplink
    1:1:boolean hasBigPicture():116:116 -> hasBigPicture
    1:1:boolean hasCustomLargeIcon():86:86 -> hasCustomLargeIcon
    1:1:boolean hasDeeplink():65:65 -> hasDeeplink
com.batch.android.BatchPushHelper -> com.batch.android.f:
    java.lang.String ALREADY_SHOWN_IDS_STORAGE_KEY -> a
    int ALREADY_SHOWN_IDS_SIZE -> b
    java.util.ArrayList beingShownIds -> c
    1:1:void <clinit>():31:31 -> <clinit>
    1:1:void <init>():25:25 -> <init>
    1:14:boolean isPushValid(android.content.Context,com.batch.android.core.InternalPushData):41:54 -> a
    15:22:android.os.Bundle firebaseMessageToReceiverBundle(com.google.firebase.messaging.RemoteMessage):95:102 -> a
    23:34:com.batch.android.core.FixedSizeArrayList getShownPushIds(android.content.Context):130:141 -> a
    35:36:boolean installIDMatchesCurrent(android.content.Context,java.lang.String):155:156 -> a
    1:1:boolean isPushAlreadyShown(android.content.Context,java.lang.String):116:116 -> b
    1:11:void markPushAsShown(android.content.Context,java.lang.String):71:81 -> c
com.batch.android.BatchPushInstanceIDService -> com.batch.android.BatchPushInstanceIDService:
    1:1:void <init>():13:13 -> <init>
    1:3:void onTokenRefresh():18:20 -> onTokenRefresh
com.batch.android.BatchPushJobService -> com.batch.android.BatchPushJobService:
    java.lang.String TAG -> a
    1:1:void <init>():23:23 -> <init>
    1:12:boolean onStartJob(android.app.job.JobParameters):33:44 -> onStartJob
com.batch.android.BatchPushJobService$PresentPushTask -> com.batch.android.BatchPushJobService$a:
    android.os.Bundle pushData -> a
    android.app.job.JobParameters originJobParameters -> c
    java.lang.ref.WeakReference originService -> b
    1:4:void <init>(android.os.Bundle,android.app.job.JobService,android.app.job.JobParameters):65:68 -> <init>
    1:31:java.lang.Void doInBackground(java.lang.Void[]):74:104 -> a
    32:34:java.lang.Void doInBackground(java.lang.Void[]):98:100 -> a
    35:45:java.lang.Void doInBackground(java.lang.Void[]):96:106 -> a
    1:1:java.lang.Object doInBackground(java.lang.Object[]):54:54 -> doInBackground
com.batch.android.BatchPushMessageDismissReceiver -> com.batch.android.BatchPushMessageDismissReceiver:
    java.lang.String TAG -> d
    1:1:void <init>():19:19 -> <init>
    1:21:void onReceive(android.content.Context,android.content.Intent):27:47 -> onReceive
    22:22:void onReceive(android.content.Context,android.content.Intent):33:33 -> onReceive
com.batch.android.BatchPushMessageReceiver -> com.batch.android.BatchPushMessageReceiver:
    java.lang.String TAG -> d
    1:1:void <init>():21:21 -> <init>
    1:52:void onReceive(android.content.Context,android.content.Intent):29:80 -> onReceive
    53:81:void onReceive(android.content.Context,android.content.Intent):37:65 -> onReceive
    82:106:void onReceive(android.content.Context,android.content.Intent):47:71 -> onReceive
    107:115:void onReceive(android.content.Context,android.content.Intent):69:77 -> onReceive
com.batch.android.BatchPushNotificationPresenter -> com.batch.android.g:
    java.lang.String TAG -> a
    int DEFAULT_NO_NOTIFICATION -> e
    java.lang.String CUSTOM_SMALL_ICON_FIREBASE_METADATA_NAME -> c
    java.lang.String CUSTOM_SMALL_ICON_METADATA_NAME -> b
    java.lang.String CUSTOM_COLOR_METADATA -> d
    1:1:void <init>():61:61 -> <init>
    1:28:void displayForPush(android.content.Context,android.os.Bundle):85:112 -> a
    29:48:void displayForPush(android.content.Context,android.os.Bundle):111:130 -> a
    49:49:void displayForPush(android.content.Context,android.os.Bundle):127:127 -> a
    50:57:void _handleLocalCampaignsSilentPush(android.content.Context):141:148 -> a
    58:62:void _handleLocalCampaignsSilentPush(android.content.Context):146:150 -> a
    63:266:void presentNotification(android.content.Context,android.os.Bundle,com.batch.android.BatchPushPayload,com.batch.android.BatchNotificationInterceptor):163:366 -> a
    267:269:void presentNotification(android.content.Context,android.os.Bundle,com.batch.android.BatchPushPayload,com.batch.android.BatchNotificationInterceptor):365:367 -> a
    270:377:void presentNotification(android.content.Context,android.os.Bundle,com.batch.android.BatchPushPayload,com.batch.android.BatchNotificationInterceptor):360:467 -> a
    378:450:void presentNotification(android.content.Context,android.os.Bundle,com.batch.android.BatchPushPayload,com.batch.android.BatchNotificationInterceptor):463:535 -> a
    451:451:void presentNotification(android.content.Context,android.os.Bundle,com.batch.android.BatchPushPayload,com.batch.android.BatchNotificationInterceptor):220:220 -> a
    452:499:boolean trySendLandingToForegroundApp(android.content.Context,android.os.Bundle,com.batch.android.core.InternalPushData):551:598 -> a
    500:504:android.graphics.Bitmap resizeLargeIcon(android.content.Context,android.graphics.Bitmap):611:615 -> a
    505:525:void applyNotificationFormat(android.content.Context,com.batch.android.push.formats.NotificationFormat,androidx.core.app.NotificationCompat$Builder):739:759 -> a
    1:9:int getAppPrimaryColor(android.content.Context):697:705 -> b
    1:27:int getDefaults(android.content.Context):628:654 -> c
    1:10:java.lang.Integer getMetaDataPushColor(android.content.Context):720:729 -> d
    1:15:java.lang.Integer getMetaDataSmallIconResId(android.content.Context):674:688 -> e
com.batch.android.BatchPushPayload -> com.batch.android.BatchPushPayload:
    android.os.Bundle rawData -> b
    com.batch.android.core.InternalPushData internalPushData -> a
    1:8:void <init>(android.os.Bundle):60:67 -> <init>
    9:9:void <init>(android.os.Bundle):64:64 -> <init>
    10:15:void <init>(com.google.firebase.messaging.RemoteMessage):71:76 -> <init>
    1:1:com.batch.android.core.InternalPushData getInternalData():384:384 -> a
    1:2:java.util.List getActions():319:320 -> getActions
    1:8:java.lang.String getBigPictureURL(android.content.Context):282:289 -> getBigPictureURL
    9:9:java.lang.String getBigPictureURL(android.content.Context):287:287 -> getBigPictureURL
    1:1:java.lang.String getChannel():364:364 -> getChannel
    1:8:java.lang.String getCustomLargeIconURL(android.content.Context):252:259 -> getCustomLargeIconURL
    9:9:java.lang.String getCustomLargeIconURL(android.content.Context):257:257 -> getCustomLargeIconURL
    1:1:java.lang.String getDeeplink():229:229 -> getDeeplink
    1:1:java.lang.String getGroup():343:343 -> getGroup
    1:5:com.batch.android.BatchMessage getLandingMessage():307:311 -> getLandingMessage
    1:1:int getPriority():333:333 -> getPriority
    1:1:android.os.Bundle getPushBundle():377:377 -> getPushBundle
    1:1:boolean hasBigPicture():269:269 -> hasBigPicture
    1:1:boolean hasCustomLargeIcon():239:239 -> hasCustomLargeIcon
    1:1:boolean hasDeeplink():218:218 -> hasDeeplink
    1:1:boolean hasLandingMessage():297:297 -> hasLandingMessage
    1:1:boolean isGroupSummary():353:353 -> isGroupSummary
    1:8:com.batch.android.BatchPushPayload payloadFromBundle(android.os.Bundle):98:105 -> payloadFromBundle
    9:9:com.batch.android.BatchPushPayload payloadFromBundle(android.os.Bundle):101:101 -> payloadFromBundle
    10:10:com.batch.android.BatchPushPayload payloadFromBundle(android.os.Bundle):95:95 -> payloadFromBundle
    1:1:com.batch.android.BatchPushPayload payloadFromFirebaseMessage(com.google.firebase.messaging.RemoteMessage):168:168 -> payloadFromFirebaseMessage
    2:2:com.batch.android.BatchPushPayload payloadFromFirebaseMessage(com.google.firebase.messaging.RemoteMessage):165:165 -> payloadFromFirebaseMessage
    1:1:com.batch.android.BatchPushPayload payloadFromReceiverExtras(android.os.Bundle):149:149 -> payloadFromReceiverExtras
    2:2:com.batch.android.BatchPushPayload payloadFromReceiverExtras(android.os.Bundle):146:146 -> payloadFromReceiverExtras
    1:7:com.batch.android.BatchPushPayload payloadFromReceiverIntent(android.content.Intent):124:130 -> payloadFromReceiverIntent
    8:8:com.batch.android.BatchPushPayload payloadFromReceiverIntent(android.content.Intent):127:127 -> payloadFromReceiverIntent
    9:9:com.batch.android.BatchPushPayload payloadFromReceiverIntent(android.content.Intent):121:121 -> payloadFromReceiverIntent
    1:1:void writeToBundle(android.os.Bundle):188:188 -> writeToBundle
    2:2:void writeToBundle(android.os.Bundle):185:185 -> writeToBundle
    1:1:void writeToIntentExtras(android.content.Intent):204:204 -> writeToIntentExtras
    2:2:void writeToIntentExtras(android.content.Intent):201:201 -> writeToIntentExtras
com.batch.android.BatchPushPayload$ParsingException -> com.batch.android.BatchPushPayload$ParsingException:
    1:1:void <init>():39:39 -> <init>
    2:2:void <init>(java.lang.String):45:45 -> <init>
    3:3:void <init>(java.lang.String,java.lang.Throwable):51:51 -> <init>
com.batch.android.BatchPushReceiver -> com.batch.android.BatchPushReceiver:
    1:1:void <init>():19:19 -> <init>
    1:10:void onReceive(android.content.Context,android.content.Intent):24:33 -> onReceive
com.batch.android.BatchPushService -> com.batch.android.BatchPushService:
    java.lang.String TAG -> a
    1:1:void <init>():23:23 -> <init>
    1:11:void onHandleIntent(android.content.Intent):31:41 -> onHandleIntent
    12:19:void onHandleIntent(android.content.Intent):34:41 -> onHandleIntent
    20:20:void onHandleIntent(android.content.Intent):38:38 -> onHandleIntent
    21:27:void onHandleIntent(android.content.Intent):36:42 -> onHandleIntent
com.batch.android.BatchQueryWebservice -> com.batch.android.h:
    java.util.List responses -> p
    java.util.List queries -> o
    com.batch.android.WebserviceMetrics webserviceMetrics -> q
    java.lang.String TAG -> r
    1:2:void <init>(android.content.Context,com.batch.android.core.Webservice$RequestType,java.lang.String,java.lang.String[]):62:63 -> <init>
    java.util.List getQueries() -> I
    1:5:com.batch.android.query.response.Response getResponseFor(java.lang.Class,com.batch.android.query.QueryType):223:227 -> a
    6:6:com.batch.android.query.response.Response getResponseFor(java.lang.Class,com.batch.android.query.QueryType):224:224 -> a
    7:8:com.batch.android.query.response.Response getResponseForType(com.batch.android.query.QueryType):245:246 -> a
    1:2:com.batch.android.query.Query getQueryForID(java.lang.String):262:263 -> b
    1:49:void parseQueries(com.batch.android.json.JSONObject):155:203 -> c
    50:50:void parseQueries(com.batch.android.json.JSONObject):200:200 -> c
    51:51:void parseQueries(com.batch.android.json.JSONObject):197:197 -> c
    52:52:void parseQueries(com.batch.android.json.JSONObject):194:194 -> c
    53:53:void parseQueries(com.batch.android.json.JSONObject):191:191 -> c
    54:73:void parseQueries(com.batch.android.json.JSONObject):188:207 -> c
    74:74:void parseQueries(com.batch.android.json.JSONObject):179:179 -> c
    75:75:void parseQueries(com.batch.android.json.JSONObject):161:161 -> c
    76:76:void parseQueries(com.batch.android.json.JSONObject):156:156 -> c
    1:11:void parseResponse(com.batch.android.json.JSONObject):133:143 -> d
    1:33:com.batch.android.post.PostDataProvider getPostDataProvider():76:108 -> w
com.batch.android.BatchQueryWebservice$1 -> com.batch.android.h$a:
    int[] $SwitchMap$com$batch$android$query$QueryType -> a
    1:1:void <clinit>():186:186 -> <clinit>
com.batch.android.BatchUserAttribute -> com.batch.android.BatchUserAttribute:
    1:3:void <init>(java.lang.Object,com.batch.android.BatchUserAttribute$Type):16:18 -> <init>
    1:2:java.lang.Boolean getBooleanValue():51:52 -> getBooleanValue
    1:2:java.util.Date getDateValue():24:25 -> getDateValue
    1:2:java.lang.Number getNumberValue():42:43 -> getNumberValue
    1:2:java.lang.String getStringValue():33:34 -> getStringValue
com.batch.android.BatchUserAttribute$Type -> com.batch.android.BatchUserAttribute$Type:
    com.batch.android.BatchUserAttribute$Type[] $VALUES -> a
    1:1:void <clinit>():60:60 -> <clinit>
    2:2:void <clinit>():57:57 -> <clinit>
    1:1:void <init>(java.lang.String,int):58:58 -> <init>
    1:1:com.batch.android.BatchUserAttribute$Type valueOf(java.lang.String):57:57 -> valueOf
    1:1:com.batch.android.BatchUserAttribute$Type[] values():57:57 -> values
com.batch.android.BatchUserDataEditor -> com.batch.android.BatchUserDataEditor:
    java.util.List operationQueue -> a
    int ATTR_STRING_MAX_LENGTH -> h
    java.util.regex.Pattern ATTR_KEY_PATTERN -> d
    int REGION_INDEX -> f
    int IDENTIFIER_INDEX -> g
    boolean[] updatedFields -> b
    int LANGAGUE_INDEX -> e
    java.lang.String[] userFields -> c
    1:1:void <clinit>():36:36 -> <clinit>
    1:1:void <init>():48:48 -> <init>
    2:4:void <init>():43:45 -> <init>
    1:1:void lambda$setAttribute$0(java.lang.String,long,com.batch.android.user.SQLUserDatasource):129:129 -> a
    2:2:void lambda$setAttribute$1(java.lang.String,double,com.batch.android.user.SQLUserDatasource):152:152 -> a
    3:3:void lambda$setAttribute$2(java.lang.String,boolean,com.batch.android.user.SQLUserDatasource):175:175 -> a
    4:4:void lambda$setAttribute$3(java.lang.String,java.util.Date,com.batch.android.user.SQLUserDatasource):208:208 -> a
    5:5:void lambda$addTag$6(java.lang.String,java.lang.String,com.batch.android.user.SQLUserDatasource):314:314 -> a
    6:6:void lambda$clearTagCollection$8(java.lang.String,com.batch.android.user.SQLUserDatasource):390:390 -> a
    7:27:com.batch.android.core.Promise save(boolean):425:445 -> a
    28:32:void lambda$save$9(java.util.List,com.batch.android.core.Promise):432:436 -> a
    33:39:java.lang.String normalizeAttributeKey(java.lang.String):456:462 -> a
    40:42:java.lang.String normalizeAttributeKey(java.lang.String):457:459 -> a
    43:51:com.batch.android.user.UserOperation getUserUpdateOperation():487:495 -> a
    52:80:void lambda$getUserUpdateOperation$10(com.batch.android.user.SQLUserDatasource):497:525 -> a
    81:81:void lambda$getUserUpdateOperation$10(com.batch.android.user.SQLUserDatasource):499:499 -> a
    1:24:com.batch.android.BatchUserDataEditor addTag(java.lang.String,java.lang.String):293:316 -> addTag
    25:27:com.batch.android.BatchUserDataEditor addTag(java.lang.String,java.lang.String):305:305 -> addTag
    28:30:com.batch.android.BatchUserDataEditor addTag(java.lang.String,java.lang.String):295:295 -> addTag
    1:1:void lambda$removeAttribute$5(java.lang.String,com.batch.android.user.SQLUserDatasource):261:261 -> b
    2:2:void lambda$removeTag$7(java.lang.String,java.lang.String,com.batch.android.user.SQLUserDatasource):356:356 -> b
    3:7:java.lang.String normalizeTagCollection(java.lang.String):467:471 -> b
    8:8:java.lang.String normalizeTagCollection(java.lang.String):468:468 -> b
    9:14:java.util.List popOperationQueue():532:537 -> b
    1:1:void lambda$setAttribute$4(java.lang.String,java.lang.String,com.batch.android.user.SQLUserDatasource):238:238 -> c
    2:6:java.lang.String normalizeTagValue(java.lang.String):476:480 -> c
    7:7:java.lang.String normalizeTagValue(java.lang.String):477:477 -> c
    1:3:com.batch.android.BatchUserDataEditor clearAttributes():274:276 -> clearAttributes
    1:14:com.batch.android.BatchUserDataEditor clearTagCollection(java.lang.String):386:399 -> clearTagCollection
    15:17:com.batch.android.BatchUserDataEditor clearTagCollection(java.lang.String):392:392 -> clearTagCollection
    21:24:com.batch.android.BatchUserDataEditor clearTagCollection(java.lang.String):396:399 -> clearTagCollection
    1:3:com.batch.android.BatchUserDataEditor clearTags():370:372 -> clearTags
    1:8:com.batch.android.BatchUserDataEditor removeAttribute(java.lang.String):255:262 -> removeAttribute
    1:24:com.batch.android.BatchUserDataEditor removeTag(java.lang.String,java.lang.String):335:358 -> removeTag
    25:27:com.batch.android.BatchUserDataEditor removeTag(java.lang.String,java.lang.String):347:347 -> removeTag
    28:30:com.batch.android.BatchUserDataEditor removeTag(java.lang.String,java.lang.String):337:337 -> removeTag
    1:7:void save():413:419 -> save
    1:8:com.batch.android.BatchUserDataEditor setAttribute(java.lang.String,long):123:130 -> setAttribute
    9:16:com.batch.android.BatchUserDataEditor setAttribute(java.lang.String,double):146:153 -> setAttribute
    17:24:com.batch.android.BatchUserDataEditor setAttribute(java.lang.String,boolean):169:176 -> setAttribute
    25:42:com.batch.android.BatchUserDataEditor setAttribute(java.lang.String,java.util.Date):192:209 -> setAttribute
    43:57:com.batch.android.BatchUserDataEditor setAttribute(java.lang.String,java.lang.String):225:239 -> setAttribute
    58:58:com.batch.android.BatchUserDataEditor setAttribute(java.lang.String,java.lang.String):232:232 -> setAttribute
    1:8:com.batch.android.BatchUserDataEditor setIdentifier(java.lang.String):101:108 -> setIdentifier
    1:8:com.batch.android.BatchUserDataEditor setLanguage(java.lang.String):61:68 -> setLanguage
    1:8:com.batch.android.BatchUserDataEditor setRegion(java.lang.String):81:88 -> setRegion
com.batch.android.BatchUserDataEditor$AttributeValidationException -> com.batch.android.BatchUserDataEditor$a:
    1:1:void <init>():547:547 -> <init>
com.batch.android.BatchUserProfile -> com.batch.android.BatchUserProfile:
    android.content.Context context -> a
    1:5:void <init>(android.content.Context):29:33 -> <init>
    6:6:void <init>(android.content.Context):31:31 -> <init>
    1:1:long getVersion():155:155 -> a
    1:1:boolean hasCustomLanguage():74:74 -> b
    1:1:boolean hasCustomRegion():115:115 -> c
    1:1:java.lang.String getCustomID():144:144 -> getCustomID
    1:1:java.lang.String getLanguage():64:64 -> getLanguage
    1:1:java.lang.String getRegion():103:103 -> getRegion
    1:1:com.batch.android.BatchUserProfile setCustomID(java.lang.String):131:131 -> setCustomID
    1:1:com.batch.android.BatchUserProfile setLanguage(java.lang.String):49:49 -> setLanguage
    1:1:com.batch.android.BatchUserProfile setRegion(java.lang.String):88:88 -> setRegion
com.batch.android.BatchWebservice -> com.batch.android.i:
    int retryCount -> l
    com.batch.android.core.WebserviceErrorCause lastFailureCause -> m
    java.lang.String TAG -> n
    1:1:void <init>(android.content.Context,com.batch.android.core.Webservice$RequestType,java.lang.String,java.lang.String[]):62:62 -> <init>
    2:23:void <init>(android.content.Context,com.batch.android.core.Webservice$RequestType,java.lang.String,java.lang.String[]):44:65 -> <init>
    1:31:void addPropertyParameters():345:375 -> G
    32:40:void addPropertyParameters():371:379 -> G
    java.lang.String getPropertyParameterKey() -> H
    1:3:java.lang.String[] addBatchApiKey(java.lang.String[]):78:80 -> a
    4:8:void onRetry(com.batch.android.core.WebserviceErrorCause):330:334 -> a
    9:35:void handleParameters(com.batch.android.json.JSONObject):405:431 -> a
    36:36:void handleParameters(com.batch.android.json.JSONObject):401:401 -> a
    37:42:java.lang.String generateAcceptLanguage(android.content.Context):505:510 -> a
    1:24:void addDefaultHeaders():89:112 -> b
    25:27:void handleServerID(com.batch.android.json.JSONObject):447:449 -> b
    28:33:void handleServerID(com.batch.android.json.JSONObject):448:453 -> b
    34:34:void handleServerID(com.batch.android.json.JSONObject):443:443 -> b
    35:57:java.lang.String generateUserAgent(android.content.Context):469:491 -> b
    1:203:com.batch.android.post.PostDataProvider getPostDataProvider():122:324 -> w
com.batch.android.BuildConfig -> com.batch.android.j:
    java.lang.Integer API_LEVEL -> d
    java.lang.String WS_DOMAIN -> i
    java.lang.String SDK_VERSION -> h
    java.lang.Integer MESSAGING_API_LEVEL -> g
    boolean ENABLE_DEBUG_LOGGER -> e
    boolean ENABLE_WS_INTERCEPTOR -> f
    boolean DEBUG -> a
    java.lang.String BUILD_TYPE -> c
    java.lang.String LIBRARY_PACKAGE_NAME -> b
    1:7:void <clinit>():11:17 -> <clinit>
    1:1:void <init>():6:6 -> <init>
com.batch.android.Config -> com.batch.android.Config:
    com.batch.android.LoggerDelegate loggerDelegate -> e
    java.lang.String apikey -> a
    com.batch.android.LoggerLevel loggerLevel -> f
    boolean shouldUseAdvertisingID -> b
    boolean shouldUseAdvancedDeviceInformation -> c
    boolean shouldUseGoogleInstanceID -> d
    1:1:void <init>(java.lang.String):45:45 -> <init>
    2:28:void <init>(java.lang.String):20:46 -> <init>
    1:1:com.batch.android.Config setCanUseAdvancedDeviceInformation(boolean):95:95 -> setCanUseAdvancedDeviceInformation
    1:1:com.batch.android.Config setCanUseAdvertisingID(boolean):72:72 -> setCanUseAdvertisingID
    1:1:com.batch.android.Config setCanUseInstanceID(boolean):137:137 -> setCanUseInstanceID
    1:1:com.batch.android.Config setLoggerDelegate(com.batch.android.LoggerDelegate):109:109 -> setLoggerDelegate
    1:1:com.batch.android.Config setLoggerLevel(com.batch.android.LoggerLevel):121:121 -> setLoggerLevel
com.batch.android.DeeplinkInterceptorRuntimeException -> com.batch.android.k:
    java.lang.RuntimeException wrappedRuntimeException -> a
    1:2:void <init>(java.lang.RuntimeException):18:19 -> <init>
    1:1:java.lang.RuntimeException getWrappedRuntimeException():24:24 -> a
com.batch.android.Device -> com.batch.android.l:
    java.lang.String advertisingID -> a
    boolean limited -> b
    boolean adverstisingIDready -> c
    java.lang.String TAG -> d
    1:1:void <init>():38:38 -> <init>
    2:9:void <init>():33:40 -> <init>
    1:1:java.lang.String access$002(com.batch.android.Device,java.lang.String):16:16 -> a
    2:2:boolean access$102(com.batch.android.Device,boolean):16:16 -> a
    3:7:java.lang.String getAdvertisingID():99:103 -> a
    8:8:java.lang.String getAdvertisingID():100:100 -> a
    1:1:boolean access$202(com.batch.android.Device,boolean):16:16 -> b
    2:12:void initAdvertisingID():48:58 -> b
    13:15:void initAdvertisingID():53:53 -> b
    1:5:boolean isAdversitingIDLimited():114:118 -> c
    6:6:boolean isAdversitingIDLimited():115:115 -> c
    1:1:boolean isAdvertisingIDReady():88:88 -> d
com.batch.android.Device$1 -> com.batch.android.l$a:
    com.batch.android.Device this$0 -> a
    1:1:void <init>(com.batch.android.Device):59:59 -> <init>
    1:2:void onError(java.lang.Exception):72:73 -> onError
    1:4:void onSuccess(java.lang.String,boolean):63:66 -> onSuccess
com.batch.android.DisplayReceiptWebservice -> com.batch.android.m:
    com.batch.android.post.DisplayReceiptPostDataProvider dataProvider -> m
    com.batch.android.webservice.listener.DisplayReceiptWebserviceListener listener -> l
    java.lang.String MSGPACK_SCHEMA_VERSION -> o
    java.lang.String TAG -> n
    1:5:void <init>(android.content.Context,com.batch.android.webservice.listener.DisplayReceiptWebserviceListener,com.batch.android.post.DisplayReceiptPostDataProvider,java.lang.String[]):40:40 -> <init>
    14:19:void <init>(android.content.Context,com.batch.android.webservice.listener.DisplayReceiptWebserviceListener,com.batch.android.post.DisplayReceiptPostDataProvider,java.lang.String[]):49:54 -> <init>
    20:20:void <init>(android.content.Context,com.batch.android.webservice.listener.DisplayReceiptWebserviceListener,com.batch.android.post.DisplayReceiptPostDataProvider,java.lang.String[]):50:50 -> <init>
    21:21:void <init>(android.content.Context,com.batch.android.webservice.listener.DisplayReceiptWebserviceListener,com.batch.android.post.DisplayReceiptPostDataProvider,java.lang.String[]):46:46 -> <init>
    java.lang.String getSpecificConnectTimeoutKey() -> A
    java.lang.String getSpecificReadTimeoutKey() -> B
    java.lang.String getSpecificRetryCountKey() -> C
    java.lang.String getURLSorterPatternParameterKey() -> F
    java.lang.String getTaskIdentifier() -> a
    1:3:java.lang.String[] addSchemaVersion(java.lang.String[]):67:69 -> a
    java.lang.String getCryptorModeParameterKey() -> o
    java.lang.String getCryptorTypeParameterKey() -> p
    1:3:java.util.Map getHeaders():76:78 -> r
    1:5:void run():100:104 -> run
    java.lang.String getPostCryptorTypeParameterKey() -> v
    1:1:com.batch.android.post.PostDataProvider getPostDataProvider():85:85 -> w
    java.lang.String getReadCryptorTypeParameterKey() -> y
com.batch.android.FailReason -> com.batch.android.FailReason:
    com.batch.android.FailReason[] $VALUES -> a
    1:17:void <clinit>():16:32 -> <clinit>
    18:18:void <clinit>():10:10 -> <clinit>
    1:1:void <init>(java.lang.String,int):11:11 -> <init>
    1:1:com.batch.android.FailReason valueOf(java.lang.String):10:10 -> valueOf
    1:1:com.batch.android.FailReason[] values():10:10 -> values
com.batch.android.GoogleApiAvailabilityContainer -> com.batch.android.n:
    java.lang.String TAG -> a
    1:1:void <init>():17:17 -> <init>
    1:3:int getGooglePlayServicesVersionCode():24:26 -> a
    4:9:boolean deviceNotSupportPlayServiceVersion(android.content.Context):47:52 -> a
    1:6:boolean mustDeviceUpdatePlayServices(android.content.Context):34:39 -> b
com.batch.android.ImageDownloadWebservice -> com.batch.android.o:
    java.lang.String TAG -> m
    java.lang.String url -> l
    1:3:void <init>(android.content.Context,java.lang.String,java.util.List):29:31 -> <init>
    java.lang.String getSpecificConnectTimeoutKey() -> A
    java.lang.String getSpecificReadTimeoutKey() -> B
    java.lang.String getSpecificRetryCountKey() -> C
    java.lang.String getURLSorterPatternParameterKey() -> F
    1:20:android.graphics.Bitmap run():96:115 -> G
    21:29:android.graphics.Bitmap run():112:120 -> G
    1:13:java.lang.String buildImageURL(android.content.Context,java.lang.String,java.util.List):52:64 -> a
    14:20:java.lang.String appendDensityToImageURL(java.lang.String,java.lang.Double):82:88 -> a
    java.lang.String getCryptorModeParameterKey() -> o
    java.lang.String getCryptorTypeParameterKey() -> p
    java.lang.String getPostCryptorTypeParameterKey() -> v
    com.batch.android.post.PostDataProvider getPostDataProvider() -> w
    java.lang.String getReadCryptorTypeParameterKey() -> y
com.batch.android.Install -> com.batch.android.p:
    java.util.Date installDate -> b
    java.lang.String installID -> a
    1:7:void <init>(android.content.Context):34:40 -> <init>
    8:8:void <init>(android.content.Context):36:36 -> <init>
    1:1:java.util.Date getInstallDate():62:62 -> a
    2:2:java.lang.String generateInstallID(android.content.Context):92:92 -> a
    1:1:java.lang.String getInstallID():52:52 -> b
    2:6:java.util.Date getInstallDate(android.content.Context):105:109 -> b
    7:13:java.util.Date getInstallDate(android.content.Context):108:114 -> b
    1:4:java.lang.String getInstallID(android.content.Context):75:78 -> c
com.batch.android.IntentParser -> com.batch.android.q:
    java.lang.String FROM_PUSH_LEGACY_KEY -> g
    java.lang.String FROM_PUSH_KEY -> f
    java.lang.String PUSH_ID_LEGACY_KEY -> i
    java.lang.String PUSH_ID_KEY -> h
    android.content.Intent intent -> a
    java.lang.String TAG -> c
    com.batch.android.BatchPushPayload payload -> b
    java.lang.String ALREADY_TRACKED_OPEN_KEY -> e
    java.lang.String ALREADY_SHOWN_LANDING_KEY -> d
    1:1:void <init>(android.app.Activity):78:78 -> <init>
    2:2:void <init>(android.content.Intent):87:87 -> <init>
    3:35:void <init>(android.content.Intent):67:99 -> <init>
    1:28:com.batch.android.BatchMessage getLanding(android.content.Context):158:185 -> a
    29:29:com.batch.android.BatchMessage getLanding(android.content.Context):154:154 -> a
    30:31:android.os.Bundle getPushBundle():238:239 -> a
    32:41:void putPushExtrasToIntent(android.os.Bundle,com.batch.android.core.InternalPushData,android.content.Intent):251:260 -> a
    42:44:void copyExtras(android.content.Intent,android.content.Intent):273:275 -> a
    45:68:void copyExtras(android.os.Bundle,android.os.Bundle):287:310 -> a
    69:75:void copyExtras(android.os.Bundle,android.os.Bundle):309:315 -> a
    76:76:void copyExtras(android.os.Bundle,android.os.Bundle):314:314 -> a
    1:8:java.lang.String getPushId(android.content.Context):204:211 -> b
    9:9:java.lang.String getPushId(android.content.Context):200:200 -> b
    10:17:com.batch.android.core.InternalPushData getPushData():224:231 -> b
    1:1:boolean hasPushPayload():107:107 -> c
    1:23:boolean shouldHandleOpen():118:140 -> d
com.batch.android.LocalCampaignsWebservice -> com.batch.android.s:
    com.batch.android.webservice.listener.LocalCampaignsWebserviceListener listener -> s
    java.lang.String TAG -> t
    1:3:void <init>(android.content.Context,com.batch.android.webservice.listener.LocalCampaignsWebserviceListener):42:44 -> <init>
    java.lang.String getSpecificConnectTimeoutKey() -> A
    java.lang.String getSpecificReadTimeoutKey() -> B
    java.lang.String getSpecificRetryCountKey() -> C
    java.lang.String getURLSorterPatternParameterKey() -> F
    java.lang.String getPropertyParameterKey() -> H
    1:3:java.util.List getQueries():52:54 -> I
    java.lang.String getTaskIdentifier() -> a
    java.lang.String getCryptorModeParameterKey() -> o
    java.lang.String getCryptorTypeParameterKey() -> p
    1:56:void run():64:119 -> run
    57:60:void run():75:75 -> run
    63:76:void run():78:91 -> run
    77:77:void run():88:88 -> run
    78:78:void run():85:85 -> run
    79:119:void run():82:122 -> run
    java.lang.String getPostCryptorTypeParameterKey() -> v
    java.lang.String getReadCryptorTypeParameterKey() -> y
com.batch.android.LocalCampaignsWebservice$1 -> com.batch.android.s$a:
    int[] $SwitchMap$com$batch$android$core$Webservice$WebserviceError$Reason -> a
    1:1:void <clinit>():80:80 -> <clinit>
com.batch.android.LoggerLevel -> com.batch.android.LoggerLevel:
    com.batch.android.LoggerLevel[] $VALUES -> b
    int level -> a
    1:5:void <clinit>():8:12 -> <clinit>
    6:6:void <clinit>():5:5 -> <clinit>
    1:2:void <init>(java.lang.String,int,int):17:18 -> <init>
    1:1:boolean canLog(com.batch.android.LoggerLevel):24:24 -> canLog
    1:1:com.batch.android.LoggerLevel valueOf(java.lang.String):5:5 -> valueOf
    1:1:com.batch.android.LoggerLevel[] values():5:5 -> values
com.batch.android.MessagingActivity -> com.batch.android.MessagingActivity:
    android.content.BroadcastReceiver dismissReceiver -> a
    java.lang.String ROTATED -> c
    java.lang.String TAG -> b
    java.lang.String DIALOG_FRAGMENT_TAG -> d
    1:7:void <init>():25:31 -> <init>
    1:12:boolean showMessage(com.batch.android.BatchMessage):121:132 -> a
    1:4:void finish():108:111 -> finish
    1:23:void onCreate(android.os.Bundle):45:67 -> onCreate
    24:46:void onCreate(android.os.Bundle):49:71 -> onCreate
    1:3:void onDestroy():100:102 -> onDestroy
    1:6:void onDialogDismiss(androidx.fragment.app.DialogFragment):141:146 -> onDialogDismiss
    1:2:void onSaveInstanceState(android.os.Bundle):79:80 -> onSaveInstanceState
    1:2:void onStart():86:87 -> onStart
    1:2:void onStop():93:94 -> onStop
    1:6:void startActivityForMessage(android.content.Context,com.batch.android.BatchMessage):156:161 -> startActivityForMessage
com.batch.android.MessagingActivity$1 -> com.batch.android.MessagingActivity$a:
    com.batch.android.MessagingActivity this$0 -> a
    1:1:void <init>(com.batch.android.MessagingActivity):32:32 -> <init>
    1:2:void onReceive(android.content.Context,android.content.Intent):36:37 -> onReceive
com.batch.android.MessagingAnalyticsDelegate -> com.batch.android.t:
    java.lang.String STATE_KEY_CALLED_METHODS -> g
    com.batch.android.module.EventDispatcherModule eventDispatcherModule -> c
    com.batch.android.module.MessagingModule messagingModule -> a
    com.batch.android.module.TrackerModule trackerModule -> b
    java.util.ArrayList calledMethods -> f
    com.batch.android.messaging.model.Message message -> d
    com.batch.android.BatchMessage sourceMessage -> e
    1:1:void <init>(com.batch.android.module.MessagingModule,com.batch.android.module.TrackerModule,com.batch.android.module.EventDispatcherModule,com.batch.android.messaging.model.Message,com.batch.android.BatchMessage):52:52 -> <init>
    2:14:void <init>(com.batch.android.module.MessagingModule,com.batch.android.module.TrackerModule,com.batch.android.module.EventDispatcherModule,com.batch.android.messaging.model.Message,com.batch.android.BatchMessage):45:57 -> <init>
    1:4:com.batch.android.MessagingAnalyticsDelegate provide(com.batch.android.messaging.model.Message,com.batch.android.BatchMessage):63:66 -> a
    5:12:boolean ensureOnce(java.lang.String):75:82 -> a
    13:25:void onGlobalTap(com.batch.android.messaging.model.Action):89:101 -> a
    26:26:void onGlobalTap(com.batch.android.messaging.model.Action):98:98 -> a
    27:40:void onCTAClicked(int,com.batch.android.messaging.model.CTA):107:120 -> a
    41:41:void onCTAClicked(int,com.batch.android.messaging.model.CTA):117:117 -> a
    42:49:void onAutoClosedAfterDelay():144:151 -> a
    50:50:void onAutoClosedAfterDelay():148:148 -> a
    51:51:void onSaveInstanceState(android.os.Bundle):197:197 -> a
    1:8:void onClosed():128:135 -> b
    9:9:void onClosed():132:132 -> b
    10:13:void restoreState(android.os.Bundle):187:190 -> b
    1:4:void onViewDismissed():174:177 -> c
    1:8:void onViewShown():156:163 -> d
    9:16:void onViewShown():162:169 -> d
    17:17:void onViewShown():166:166 -> d
com.batch.android.NotificationInterceptorRuntimeException -> com.batch.android.u:
    java.lang.RuntimeException wrappedRuntimeException -> a
    1:2:void <init>(java.lang.RuntimeException):18:19 -> <init>
    1:1:java.lang.RuntimeException getWrappedRuntimeException():24:24 -> a
com.batch.android.PrivateNotificationContentHelper -> com.batch.android.v:
    1:1:void <init>():13:13 -> <init>
    1:1:com.batch.android.inbox.InboxNotificationContentInternal getInternalContent(com.batch.android.BatchInboxNotificationContent):18:18 -> a
    2:2:com.batch.android.BatchInboxNotificationContent getPublicContent(com.batch.android.inbox.InboxNotificationContentInternal):23:23 -> a
com.batch.android.PushNotificationType -> com.batch.android.PushNotificationType:
    com.batch.android.PushNotificationType[] $VALUES -> b
    int value -> a
    1:21:void <clinit>():18:38 -> <clinit>
    22:22:void <clinit>():12:12 -> <clinit>
    1:2:void <init>(java.lang.String,int,int):51:52 -> <init>
    1:10:java.util.EnumSet fromValue(int):59:68 -> fromValue
    1:2:int toValue(java.util.EnumSet):78:79 -> toValue
    1:1:com.batch.android.PushNotificationType valueOf(java.lang.String):12:12 -> valueOf
    1:1:com.batch.android.PushNotificationType[] values():12:12 -> values
com.batch.android.PushRegistrationProviderAvailabilityException -> com.batch.android.PushRegistrationProviderAvailabilityException:
    1:1:void <init>(java.lang.String):10:10 -> <init>
com.batch.android.PushWebservice -> com.batch.android.w:
    com.batch.android.push.Registration registration -> s
    com.batch.android.webservice.listener.PushWebserviceListener listener -> t
    java.lang.String TAG -> u
    1:12:void <init>(android.content.Context,com.batch.android.push.Registration,com.batch.android.webservice.listener.PushWebserviceListener):49:60 -> <init>
    13:13:void <init>(android.content.Context,com.batch.android.push.Registration,com.batch.android.webservice.listener.PushWebserviceListener):56:56 -> <init>
    14:14:void <init>(android.content.Context,com.batch.android.push.Registration,com.batch.android.webservice.listener.PushWebserviceListener):52:52 -> <init>
    java.lang.String getSpecificConnectTimeoutKey() -> A
    java.lang.String getSpecificReadTimeoutKey() -> B
    java.lang.String getSpecificRetryCountKey() -> C
    java.lang.String getURLSorterPatternParameterKey() -> F
    java.lang.String getPropertyParameterKey() -> H
    1:3:java.util.List getQueries():68:70 -> I
    java.lang.String getTaskIdentifier() -> a
    java.lang.String getCryptorModeParameterKey() -> o
    java.lang.String getCryptorTypeParameterKey() -> p
    1:50:void run():79:128 -> run
    51:51:void run():122:122 -> run
    52:54:void run():90:90 -> run
    56:69:void run():92:105 -> run
    70:70:void run():102:102 -> run
    71:71:void run():99:99 -> run
    72:107:void run():96:131 -> run
    java.lang.String getPostCryptorTypeParameterKey() -> v
    java.lang.String getReadCryptorTypeParameterKey() -> y
com.batch.android.PushWebservice$1 -> com.batch.android.w$a:
    int[] $SwitchMap$com$batch$android$core$Webservice$WebserviceError$Reason -> a
    1:1:void <clinit>():94:94 -> <clinit>
com.batch.android.StartWebservice -> com.batch.android.x:
    java.lang.String TAG -> w
    boolean userActivity -> v
    com.batch.android.webservice.listener.StartWebserviceListener listener -> s
    java.lang.String pushId -> u
    boolean fromPush -> t
    1:10:void <init>(android.content.Context,boolean,java.lang.String,boolean,com.batch.android.webservice.listener.StartWebserviceListener):67:76 -> <init>
    11:11:void <init>(android.content.Context,boolean,java.lang.String,boolean,com.batch.android.webservice.listener.StartWebserviceListener):70:70 -> <init>
    java.lang.String getSpecificConnectTimeoutKey() -> A
    java.lang.String getSpecificReadTimeoutKey() -> B
    java.lang.String getSpecificRetryCountKey() -> C
    java.lang.String getURLSorterPatternParameterKey() -> F
    java.lang.String getPropertyParameterKey() -> H
    1:9:java.util.List getQueries():84:92 -> I
    java.lang.String getTaskIdentifier() -> a
    java.lang.String getCryptorModeParameterKey() -> o
    java.lang.String getCryptorTypeParameterKey() -> p
    1:51:void run():103:153 -> run
    52:52:void run():147:147 -> run
    53:55:void run():114:114 -> run
    57:70:void run():116:129 -> run
    71:71:void run():126:126 -> run
    72:72:void run():123:123 -> run
    73:109:void run():120:156 -> run
    java.lang.String getPostCryptorTypeParameterKey() -> v
    java.lang.String getReadCryptorTypeParameterKey() -> y
com.batch.android.StartWebservice$1 -> com.batch.android.x$a:
    int[] $SwitchMap$com$batch$android$core$Webservice$WebserviceError$Reason -> a
    1:1:void <clinit>():118:118 -> <clinit>
com.batch.android.TrackerWebservice -> com.batch.android.y:
    java.lang.String TAG -> v
    java.util.List events -> t
    com.batch.android.webservice.listener.TrackerWebserviceListener listener -> s
    boolean canBypassOptOut -> u
    1:13:void <init>(android.content.Context,com.batch.android.webservice.listener.TrackerWebserviceListener,java.util.List,boolean):36:48 -> <init>
    14:14:void <init>(android.content.Context,com.batch.android.webservice.listener.TrackerWebserviceListener,java.util.List,boolean):43:43 -> <init>
    15:15:void <init>(android.content.Context,com.batch.android.webservice.listener.TrackerWebserviceListener,java.util.List,boolean):39:39 -> <init>
    java.lang.String getSpecificConnectTimeoutKey() -> A
    java.lang.String getSpecificReadTimeoutKey() -> B
    java.lang.String getSpecificRetryCountKey() -> C
    java.lang.String getURLSorterPatternParameterKey() -> F
    java.lang.String getPropertyParameterKey() -> H
    1:3:java.util.List getQueries():62:64 -> I
    java.lang.String getTaskIdentifier() -> a
    1:1:boolean canBypassOptOut():56:56 -> i
    java.lang.String getCryptorModeParameterKey() -> o
    java.lang.String getCryptorTypeParameterKey() -> p
    1:42:void run():73:114 -> run
    43:45:void run():84:84 -> run
    47:60:void run():86:99 -> run
    61:61:void run():96:96 -> run
    62:62:void run():93:93 -> run
    63:92:void run():90:119 -> run
    93:97:void run():116:120 -> run
    java.lang.String getPostCryptorTypeParameterKey() -> v
    java.lang.String getReadCryptorTypeParameterKey() -> y
com.batch.android.TrackerWebservice$1 -> com.batch.android.y$a:
    int[] $SwitchMap$com$batch$android$core$Webservice$WebserviceError$Reason -> a
    1:1:void <clinit>():88:88 -> <clinit>
com.batch.android.User -> com.batch.android.z:
    android.content.Context context -> a
    1:6:void <init>(android.content.Context):35:40 -> <init>
    7:7:void <init>(android.content.Context):37:37 -> <init>
    1:5:void setCustomID(java.lang.String):113:117 -> a
    6:6:java.lang.String getCustomID():128:128 -> a
    1:6:void setLanguage(java.lang.String):53:58 -> b
    7:8:java.lang.String getLanguage():69:70 -> b
    1:6:void setRegion(java.lang.String):83:88 -> c
    7:8:java.lang.String getRegion():99:100 -> c
    1:8:long getVersion():140:147 -> d
    1:3:long incrementVersion():160:162 -> e
    4:4:long incrementVersion():161:161 -> e
    1:22:void sendChangeEvent():170:191 -> f
com.batch.android.UserAction -> com.batch.android.UserAction:
    com.batch.android.UserActionRunnable runnable -> b
    java.lang.String identifier -> a
    1:17:void <init>(java.lang.String,com.batch.android.UserActionRunnable):24:40 -> <init>
    18:18:void <init>(java.lang.String,com.batch.android.UserActionRunnable):36:36 -> <init>
    19:19:void <init>(java.lang.String,com.batch.android.UserActionRunnable):31:31 -> <init>
    20:20:void <init>(java.lang.String,com.batch.android.UserActionRunnable):27:27 -> <init>
    1:1:java.lang.String getIdentifier():46:46 -> getIdentifier
    1:1:com.batch.android.UserActionRunnable getRunnable():52:52 -> getRunnable
com.batch.android.UserDataAccessor -> com.batch.android.a0:
    1:1:void <init>():22:22 -> <init>
    1:38:void fetchTagCollections(android.content.Context,com.batch.android.BatchTagCollectionsFetchListener,boolean):33:70 -> a
    39:39:void fetchTagCollections(android.content.Context,com.batch.android.BatchTagCollectionsFetchListener,boolean):30:30 -> a
    40:65:void lambda$fetchTagCollections$1(android.content.Context,boolean,com.batch.android.BatchTagCollectionsFetchListener):35:60 -> a
    66:68:void lambda$null$0(com.batch.android.BatchTagCollectionsFetchListener,java.util.Map):49:51 -> a
    69:141:void fetchAttributes(android.content.Context,com.batch.android.BatchAttributesFetchListener,boolean):83:155 -> a
    142:142:void fetchAttributes(android.content.Context,com.batch.android.BatchAttributesFetchListener,boolean):80:80 -> a
    143:169:void lambda$fetchAttributes$3(android.content.Context,boolean,com.batch.android.BatchAttributesFetchListener):85:111 -> a
    170:170:void lambda$fetchAttributes$3(android.content.Context,boolean,com.batch.android.BatchAttributesFetchListener):108:108 -> a
    171:171:void lambda$fetchAttributes$3(android.content.Context,boolean,com.batch.android.BatchAttributesFetchListener):105:105 -> a
    172:172:void lambda$fetchAttributes$3(android.content.Context,boolean,com.batch.android.BatchAttributesFetchListener):102:102 -> a
    173:220:void lambda$fetchAttributes$3(android.content.Context,boolean,com.batch.android.BatchAttributesFetchListener):99:146 -> a
    221:223:void lambda$null$2(com.batch.android.BatchAttributesFetchListener,java.util.HashMap):135:137 -> a
com.batch.android.UserDataAccessor$1 -> com.batch.android.a0$a:
    int[] $SwitchMap$com$batch$android$user$AttributeType -> a
    1:1:void <clinit>():97:97 -> <clinit>
com.batch.android.WebserviceLauncher -> com.batch.android.b0:
    java.lang.String TAG -> a
    1:1:void <init>():32:32 -> <init>
    1:1:boolean launchStartWebservice(com.batch.android.runtime.RuntimeManager,boolean,java.lang.String,boolean):46:46 -> a
    2:4:boolean launchStartWebservice(com.batch.android.runtime.RuntimeManager,boolean,java.lang.String,boolean):45:47 -> a
    5:13:boolean launchStartWebservice(com.batch.android.runtime.RuntimeManager,boolean,java.lang.String,boolean):46:54 -> a
    14:19:com.batch.android.core.TaskRunnable initTrackerWebservice(com.batch.android.runtime.RuntimeManager,java.util.List,com.batch.android.webservice.listener.TrackerWebserviceListener):72:77 -> a
    20:24:com.batch.android.core.TaskRunnable initDisplayReceiptWebservice(android.content.Context,com.batch.android.post.DisplayReceiptPostDataProvider,com.batch.android.webservice.listener.DisplayReceiptWebserviceListener):95:99 -> a
    25:30:com.batch.android.core.TaskRunnable initOptOutTrackerWebservice(android.content.Context,java.util.List,com.batch.android.webservice.listener.TrackerWebserviceListener):116:121 -> a
    31:31:boolean launchPushWebservice(com.batch.android.runtime.RuntimeManager,com.batch.android.push.Registration):134:134 -> a
    32:34:boolean launchPushWebservice(com.batch.android.runtime.RuntimeManager,com.batch.android.push.Registration):133:135 -> a
    35:41:boolean launchPushWebservice(com.batch.android.runtime.RuntimeManager,com.batch.android.push.Registration):134:140 -> a
    42:42:boolean launchAttributesSendWebservice(com.batch.android.runtime.RuntimeManager,long,java.util.Map,java.util.Map):152:152 -> a
    43:45:boolean launchAttributesSendWebservice(com.batch.android.runtime.RuntimeManager,long,java.util.Map,java.util.Map):151:153 -> a
    46:54:boolean launchAttributesSendWebservice(com.batch.android.runtime.RuntimeManager,long,java.util.Map,java.util.Map):152:160 -> a
    55:55:boolean launchAttributesCheckWebservice(com.batch.android.runtime.RuntimeManager,long,java.lang.String):171:171 -> a
    56:58:boolean launchAttributesCheckWebservice(com.batch.android.runtime.RuntimeManager,long,java.lang.String):170:172 -> a
    59:66:boolean launchAttributesCheckWebservice(com.batch.android.runtime.RuntimeManager,long,java.lang.String):171:178 -> a
    67:67:boolean launchLocalCampaignsWebservice(com.batch.android.runtime.RuntimeManager):187:187 -> a
    68:71:boolean launchLocalCampaignsWebservice(com.batch.android.runtime.RuntimeManager):186:189 -> a
    72:77:boolean launchLocalCampaignsWebservice(com.batch.android.runtime.RuntimeManager):187:192 -> a
com.batch.android.WebserviceMetrics -> com.batch.android.c0:
    java.util.Map metrics -> a
    java.util.Map webservicesStartTime -> b
    java.util.Map shortNames -> d
    java.lang.String TAG -> c
    1:10:void <clinit>():114:123 -> <clinit>
    1:12:void <init>():20:31 -> <init>
    1:4:void onWebserviceStarted(com.batch.android.core.Webservice):46:49 -> a
    5:12:void onWebserviceStarted(com.batch.android.core.Webservice):48:55 -> a
    13:13:void onWebserviceStarted(com.batch.android.core.Webservice):43:43 -> a
    14:17:void onWebserviceFinished(com.batch.android.core.Webservice,boolean):70:73 -> a
    18:38:void onWebserviceFinished(com.batch.android.core.Webservice,boolean):72:92 -> a
    39:39:void onWebserviceFinished(com.batch.android.core.Webservice,boolean):88:88 -> a
    40:40:void onWebserviceFinished(com.batch.android.core.Webservice,boolean):67:67 -> a
    41:45:java.util.Map getMetrics():102:106 -> a
com.batch.android.WebserviceMetrics$1 -> com.batch.android.c0$a:
com.batch.android.WebserviceMetrics$Metric -> com.batch.android.c0$b:
    long time -> b
    boolean success -> a
    1:1:void <init>(boolean,long,com.batch.android.WebserviceMetrics$1):133:133 -> <init>
    2:4:void <init>(boolean,long):151:153 -> <init>
com.batch.android.adsidentifier.GCMAdsIdentifierProvider -> com.batch.android.d0.a:
    android.content.Context context -> a
    1:2:void <init>(android.content.Context):18:19 -> <init>
    1:1:android.content.Context access$000(com.batch.android.adsidentifier.GCMAdsIdentifierProvider):13:13 -> a
    2:2:boolean isGMSAdvertisingIdClientPresent():39:39 -> a
    1:7:void checkAvailability():25:31 -> checkAvailability
    8:8:void checkAvailability():26:26 -> checkAvailability
    1:1:void getAdsIdentifier(com.batch.android.AdsIdentifierProvider$AdsIdentifierListener):56:56 -> getAdsIdentifier
    2:2:void getAdsIdentifier(com.batch.android.AdsIdentifierProvider$AdsIdentifierListener):50:50 -> getAdsIdentifier
com.batch.android.adsidentifier.GCMAdsIdentifierProvider$1 -> com.batch.android.d0.a$a:
    com.batch.android.adsidentifier.GCMAdsIdentifierProvider this$0 -> b
    com.batch.android.AdsIdentifierProvider$AdsIdentifierListener val$listener -> a
    1:1:void <init>(com.batch.android.adsidentifier.GCMAdsIdentifierProvider,com.batch.android.AdsIdentifierProvider$AdsIdentifierListener):57:57 -> <init>
    java.lang.String getTaskIdentifier() -> a
    1:25:void run():65:89 -> run
com.batch.android.annotation.PublicSDK -> com.batch.android.e0.a:
com.batch.android.compat.LocalBroadcastManager -> com.batch.android.f0.a:
    android.content.Context mAppContext -> a
    java.lang.String TAG -> f
    android.os.Handler mHandler -> e
    int MSG_EXEC_PENDING_BROADCASTS -> h
    java.util.HashMap mReceivers -> b
    boolean DEBUG -> g
    java.util.ArrayList mPendingBroadcasts -> d
    java.util.HashMap mActions -> c
    1:1:void <init>(android.content.Context):107:107 -> <init>
    2:17:void <init>(android.content.Context):94:109 -> <init>
    1:1:void access$000(com.batch.android.compat.LocalBroadcastManager):51:51 -> a
    2:19:void registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter):135:152 -> a
    20:43:void unregisterReceiver(android.content.BroadcastReceiver):165:188 -> a
    44:47:boolean sendBroadcast(android.content.Intent):202:205 -> a
    48:87:boolean sendBroadcast(android.content.Intent):204:243 -> a
    88:132:boolean sendBroadcast(android.content.Intent):242:286 -> a
    133:145:void executePendingBroadcasts():306:318 -> a
    146:146:void executePendingBroadcasts():314:314 -> a
    1:2:void sendBroadcastSync(android.content.Intent):297:298 -> b
com.batch.android.compat.LocalBroadcastManager$1 -> com.batch.android.f0.a$a:
    com.batch.android.compat.LocalBroadcastManager this$0 -> a
    1:1:void <init>(com.batch.android.compat.LocalBroadcastManager,android.os.Looper):110:110 -> <init>
    1:6:void handleMessage(android.os.Message):115:120 -> handleMessage
    7:7:void handleMessage(android.os.Message):117:117 -> handleMessage
com.batch.android.compat.LocalBroadcastManager$BroadcastRecord -> com.batch.android.f0.a$b:
    android.content.Intent intent -> a
    java.util.ArrayList receivers -> b
    1:3:void <init>(android.content.Intent,java.util.ArrayList):83:85 -> <init>
com.batch.android.compat.LocalBroadcastManager$ReceiverRecord -> com.batch.android.f0.a$c:
    android.content.IntentFilter filter -> a
    android.content.BroadcastReceiver receiver -> b
    boolean broadcasting -> c
    1:3:void <init>(android.content.IntentFilter,android.content.BroadcastReceiver):60:62 -> <init>
    1:1:java.lang.String toString():68:68 -> toString
com.batch.android.compat.WakefulBroadcastReceiver -> com.batch.android.f0.b:
    android.util.SparseArray mActiveWakeLocks -> b
    java.lang.String EXTRA_WAKE_LOCK_ID -> a
    int mNextId -> c
    1:3:void <clinit>():63:65 -> <clinit>
    1:1:void <init>():59:59 -> <init>
    1:20:boolean completeWakefulIntent(android.content.Intent):120:139 -> completeWakefulIntent
    1:16:android.content.ComponentName startWakefulService(android.content.Context,android.content.Intent):83:98 -> startWakefulService
    17:23:android.content.ComponentName startWakefulService(android.content.Context,android.content.Intent):97:103 -> startWakefulService
com.batch.android.core.BuiltinActionProvider -> com.batch.android.g0.a:
    1:1:void <init>():37:37 -> <init>
com.batch.android.core.BuiltinActionProvider$DeeplinkActionRunnable -> com.batch.android.g0.a$a:
    java.lang.String IDENTIFIER -> c
    java.lang.String TAG -> b
    com.batch.android.module.ActionModule actionModule -> a
    java.lang.String ARGUMENT_SHOW_LINK_INAPP -> e
    java.lang.String ARGUMENT_DEEPLINK_URL -> d
    1:2:void <init>(com.batch.android.module.ActionModule):127:128 -> <init>
    1:15:void launchDeeplink(android.content.Context,java.lang.String,boolean):136:150 -> a
    16:45:void launchDeeplink(android.content.Context,java.lang.String,boolean):143:172 -> a
    46:49:void launchDeeplink(android.content.Context,java.lang.String,boolean):165:168 -> a
    50:75:void launchDeeplink(android.content.Context,java.lang.String,boolean):155:180 -> a
    1:11:void performAction(android.content.Context,java.lang.String,com.batch.android.json.JSONObject,com.batch.android.UserActionSource):190:200 -> performAction
    12:17:void performAction(android.content.Context,java.lang.String,com.batch.android.json.JSONObject,com.batch.android.UserActionSource):199:204 -> performAction
    18:28:void performAction(android.content.Context,java.lang.String,com.batch.android.json.JSONObject,com.batch.android.UserActionSource):203:213 -> performAction
    29:29:void performAction(android.content.Context,java.lang.String,com.batch.android.json.JSONObject,com.batch.android.UserActionSource):209:209 -> performAction
    30:30:void performAction(android.content.Context,java.lang.String,com.batch.android.json.JSONObject,com.batch.android.UserActionSource):207:207 -> performAction
com.batch.android.core.BuiltinActionProvider$GroupActionRunnable -> com.batch.android.g0.a$b:
    java.lang.String IDENTIFIER -> b
    com.batch.android.module.ActionModule actionModule -> a
    1:2:void <init>(com.batch.android.module.ActionModule):50:51 -> <init>
    1:40:void performAction(android.content.Context,java.lang.String,com.batch.android.json.JSONObject,com.batch.android.UserActionSource):70:109 -> performAction
com.batch.android.core.BuiltinActionProvider$LocalCampaignsRefreshActionRunnable -> com.batch.android.g0.a$c:
    java.lang.String TAG -> a
    java.lang.String IDENTIFIER -> b
    1:1:void <init>():218:218 -> <init>
    1:5:void performAction(android.content.Context,java.lang.String,com.batch.android.json.JSONObject,com.batch.android.UserActionSource):229:233 -> performAction
com.batch.android.core.BuiltinActionProvider$UserDataBuiltinActionRunnable -> com.batch.android.g0.a$d:
    java.lang.String TAG -> a
    java.lang.String IDENTIFIER -> b
    1:1:void <init>():239:239 -> <init>
    1:50:void performAction(android.content.Context,java.lang.String,com.batch.android.json.JSONObject,com.batch.android.UserActionSource):251:300 -> performAction
com.batch.android.core.BuiltinActionProvider$UserEventBuiltinActionRunnable -> com.batch.android.g0.a$e:
    java.lang.String TAG -> a
    java.lang.String IDENTIFIER -> b
    1:1:void <init>():305:305 -> <init>
    1:3:java.util.Date parseDate(java.lang.String):312:314 -> a
    1:63:void performAction(android.content.Context,java.lang.String,com.batch.android.json.JSONObject,com.batch.android.UserActionSource):327:389 -> performAction
com.batch.android.core.ByteArrayHelper -> com.batch.android.g0.b:
    char[] hexArray -> b
    java.lang.String UTF_8 -> a
    1:1:void <clinit>():29:29 -> <clinit>
    1:1:void <init>():19:19 -> <init>
    1:6:byte[] concat(byte[],byte[]):42:47 -> a
    7:9:byte[] getUTF8Bytes(java.lang.String):78:80 -> a
    10:13:java.lang.String SHA1Base64Encoded(byte[]):139:142 -> a
    14:14:java.lang.String SHA1Base64Encoded(byte[]):135:135 -> a
    15:24:byte[] fromInputStream(java.io.InputStream):148:148 -> a
    32:32:byte[] fromInputStream(java.io.InputStream):156:156 -> a
    1:10:java.lang.String bytesToHex(byte[]):94:103 -> b
    11:16:byte[] hexToBytes(java.lang.String):114:119 -> b
    1:3:java.lang.String getUTF8String(byte[]):63:65 -> c
com.batch.android.core.Cryptor -> com.batch.android.g0.c:
    java.lang.String encrypt(java.lang.String) -> a
    byte[] encrypt(byte[]) -> a
    java.lang.String decrypt(java.lang.String) -> b
    byte[] decrypt(byte[]) -> b
    byte[] decryptToByte(java.lang.String) -> c
com.batch.android.core.CryptorFactory -> com.batch.android.g0.d:
    java.lang.String DEFAULT_PRIVATE_KEY_PART -> a
    1:1:void <init>():12:12 -> <init>
    1:1:com.batch.android.core.Cryptor getCryptorForType(java.lang.String):29:29 -> a
    2:2:com.batch.android.core.Cryptor getCryptorForType(java.lang.String,java.lang.String):41:41 -> a
    3:3:com.batch.android.core.Cryptor getCryptorForTypeValue(int):52:52 -> a
    4:4:com.batch.android.core.Cryptor getCryptorForTypeValue(int,java.lang.String):64:64 -> a
    5:5:com.batch.android.core.Cryptor getCryptorForType(com.batch.android.core.CryptorFactory$CryptorType):75:75 -> a
    6:17:com.batch.android.core.Cryptor getCryptorForType(com.batch.android.core.CryptorFactory$CryptorType,java.lang.String):92:103 -> a
    18:18:com.batch.android.core.Cryptor getCryptorForType(com.batch.android.core.CryptorFactory$CryptorType,java.lang.String):101:101 -> a
    19:19:com.batch.android.core.Cryptor getCryptorForType(com.batch.android.core.CryptorFactory$CryptorType,java.lang.String):99:99 -> a
    20:20:com.batch.android.core.Cryptor getCryptorForType(com.batch.android.core.CryptorFactory$CryptorType,java.lang.String):97:97 -> a
    21:24:byte[] buildDefaultKey():116:119 -> a
com.batch.android.core.CryptorFactory$1 -> com.batch.android.g0.d$a:
    int[] $SwitchMap$com$batch$android$core$CryptorFactory$CryptorType -> a
    1:1:void <clinit>():95:95 -> <clinit>
com.batch.android.core.CryptorFactory$CryptorType -> com.batch.android.g0.d$b:
    com.batch.android.core.CryptorFactory$CryptorType EAS_HEX -> c
    com.batch.android.core.CryptorFactory$CryptorType EAS -> b
    com.batch.android.core.CryptorFactory$CryptorType EAS_BASE64_GZIP -> e
    com.batch.android.core.CryptorFactory$CryptorType EAS_BASE64 -> d
    com.batch.android.core.CryptorFactory$CryptorType[] $VALUES -> f
    int value -> a
    1:13:void <clinit>():134:146 -> <clinit>
    14:14:void <clinit>():129:129 -> <clinit>
    1:2:void <init>(java.lang.String,int,int):153:154 -> <init>
    1:1:int getValue():161:161 -> a
    2:2:com.batch.android.core.CryptorFactory$CryptorType fromString(java.lang.String):175:175 -> a
    3:4:com.batch.android.core.CryptorFactory$CryptorType fromValue(int):189:190 -> a
    1:1:com.batch.android.core.CryptorFactory$CryptorType valueOf(java.lang.String):129:129 -> valueOf
    1:1:com.batch.android.core.CryptorFactory$CryptorType[] values():129:129 -> values
com.batch.android.core.DateProvider -> com.batch.android.g0.e:
    com.batch.android.date.BatchDate getCurrentDate() -> a
com.batch.android.core.DeeplinkHelper -> com.batch.android.g0.f:
    1:1:void <init>():19:19 -> <init>
    1:4:boolean customTabSupportsURI(android.net.Uri):50:53 -> a
    5:19:android.content.Intent getIntent(java.lang.String,boolean,boolean):73:87 -> a
    20:24:android.content.Intent getFallbackIntent(android.content.Context):101:105 -> a
    1:13:android.content.Intent getCustomTabIntent(android.net.Uri):28:40 -> b
com.batch.android.core.DiscoveryServiceHelper -> com.batch.android.g0.g:
    java.lang.String TAG -> a
    1:1:void <init>():14:14 -> <init>
    1:10:java.util.List getComponentNames(android.content.Context,java.lang.Class,java.lang.String,java.lang.String):23:32 -> a
    11:26:android.os.Bundle getMetadata(android.content.Context,java.lang.Class):42:57 -> a
com.batch.android.core.EASBase64Cryptor -> com.batch.android.g0.h:
    java.lang.String TAG -> d
    1:1:void <init>(java.lang.String):19:19 -> <init>
    1:3:byte[] encrypt(byte[]):28:30 -> a
    4:6:java.lang.String encrypt(java.lang.String):39:41 -> a
    1:3:byte[] decrypt(byte[]):50:52 -> b
    4:6:java.lang.String decrypt(java.lang.String):61:63 -> b
    1:3:byte[] decryptToByte(java.lang.String):72:74 -> c
com.batch.android.core.EASBase64GzipCryptor -> com.batch.android.g0.i:
    java.lang.String TAG -> d
    1:1:void <init>(java.lang.String):25:25 -> <init>
    1:3:byte[] encrypt(byte[]):64:66 -> a
    4:6:java.lang.String encrypt(java.lang.String):75:77 -> a
    1:3:byte[] decrypt(byte[]):86:88 -> b
    4:6:java.lang.String decrypt(java.lang.String):97:99 -> b
    1:3:byte[] decryptToByte(java.lang.String):108:110 -> c
    1:10:byte[] gzip(byte[]):32:32 -> e
    18:18:byte[] gzip(byte[]):40:40 -> e
    19:27:byte[] gzip(byte[]):32:40 -> e
    1:14:byte[] ungzip(byte[]):45:45 -> f
    26:26:byte[] ungzip(byte[]):57:57 -> f
    27:40:byte[] ungzip(byte[]):45:45 -> f
    52:52:byte[] ungzip(byte[]):57:57 -> f
com.batch.android.core.EASCryptor -> com.batch.android.g0.j:
    java.lang.String cipherAlgorithm -> a
    java.lang.String TAG -> c
    javax.crypto.spec.SecretKeySpec privateKey -> b
    1:25:void <init>(java.lang.String):35:59 -> <init>
    26:26:void <init>(java.lang.String):41:41 -> <init>
    27:27:void <init>(java.lang.String):37:37 -> <init>
    1:3:byte[] encrypt(byte[]):68:70 -> a
    4:4:java.lang.String encrypt(java.lang.String):78:78 -> a
    1:3:byte[] decrypt(byte[]):85:87 -> b
    4:4:java.lang.String decrypt(java.lang.String):95:95 -> b
    1:1:byte[] decryptToByte(java.lang.String):101:101 -> c
    2:5:byte[] decryptAES(byte[]):128:131 -> c
    1:4:byte[] encryptAES(byte[]):114:117 -> d
com.batch.android.core.EASHexCryptor -> com.batch.android.g0.k:
    java.lang.String TAG -> d
    1:1:void <init>(java.lang.String):18:18 -> <init>
    1:3:byte[] encrypt(byte[]):27:29 -> a
    4:6:java.lang.String encrypt(java.lang.String):38:40 -> a
    1:3:byte[] decrypt(byte[]):49:51 -> b
    4:6:java.lang.String decrypt(java.lang.String):60:62 -> b
    1:3:byte[] decryptToByte(java.lang.String):71:73 -> c
com.batch.android.core.FixedSizeArrayList -> com.batch.android.g0.l:
    int maxSize -> a
    1:2:void <init>(int):27:28 -> <init>
    1:5:boolean add(java.lang.Object):33:37 -> add
com.batch.android.core.ForwardReadableInputStream -> com.batch.android.g0.m:
    int maxReadPosition -> d
    int[] firstBytes -> a
    java.io.InputStream wrappedInputStream -> b
    int readPosition -> c
    1:1:void <init>(java.io.InputStream,int):28:28 -> <init>
    2:10:void <init>(java.io.InputStream,int):24:32 -> <init>
    1:1:int[] getFirstBytes():62:62 -> a
    1:5:void readFirstBytes(int):38:42 -> c
    6:6:void readFirstBytes(int):40:40 -> c
    1:6:int read():49:54 -> read
com.batch.android.core.GenericHelper -> com.batch.android.g0.n:
    1:1:void <init>():18:18 -> <init>
    1:1:boolean checkPermission(java.lang.String,android.content.Context):29:29 -> a
    2:14:java.lang.String readMD5(byte[]):42:54 -> a
    15:24:java.lang.String readMD5(java.lang.String):65:74 -> a
    25:29:java.lang.Float getScreenDensity(android.content.Context):86:90 -> a
    30:32:int DPtoPixel(int,android.content.Context):136:138 -> a
    33:33:int DPtoPixel(int,android.content.Context):129:129 -> a
    1:3:float pixelToDP(int,android.content.Context):113:115 -> b
    4:4:float pixelToDP(int,android.content.Context):106:106 -> b
com.batch.android.core.GooglePlayServicesHelper -> com.batch.android.g0.o:
    java.lang.Integer libVersionCached -> f
    boolean versionChecked -> e
    int FCM_ID_VERSION -> d
    int PUSH_ID_VERSION -> b
    int INSTANCE_ID_VERSION -> c
    int ADVERTISING_ID_VERSION -> a
    1:1:void <init>():16:16 -> <init>
    1:15:java.lang.String getGooglePlayServicesAvailabilityString(java.lang.Integer):63:77 -> a
    16:25:java.lang.Integer getGooglePlayServicesAvailabilityInteger(android.content.Context):86:95 -> a
    26:54:java.lang.String getInstancePushToken(android.content.Context,java.lang.String):245:273 -> a
    55:57:boolean isInvalidSenderException(java.lang.Exception):288:288 -> a
    1:23:java.lang.Integer getGooglePlayServicesLibVersion(android.content.Context):114:136 -> b
    24:30:java.lang.Integer getGooglePlayServicesLibVersion(android.content.Context):131:137 -> b
    31:31:java.lang.Integer getGooglePlayServicesLibVersion(android.content.Context):136:136 -> b
    32:54:java.lang.String getPushToken(android.content.Context,java.lang.String):190:212 -> b
    55:60:java.lang.String getPushToken(android.content.Context,java.lang.String):211:216 -> b
    1:11:boolean isAdvertisingIDAvailable(android.content.Context):150:160 -> c
    1:6:java.lang.Integer isFCMAvailable(android.content.Context):302:307 -> d
    1:6:java.lang.Integer isInstanceIdPushAvailable(android.content.Context):231:236 -> e
    1:6:java.lang.Integer isPushAvailable(android.content.Context):173:178 -> f
com.batch.android.core.InternalPushData -> com.batch.android.g0.p:
    java.lang.String IS_LOCAL_CAMPAIGNS_REFRESH_KEY -> g
    java.lang.String IS_SILENT_KEY -> f
    java.lang.String CUSTOM_BIG_ICON_KEY -> i
    java.lang.String LANDING_KEY -> h
    java.lang.String ACTION_KEY -> k
    java.lang.String CUSTOM_BIG_IMAGE_KEY -> j
    java.lang.String GROUP_NAME_KEY -> m
    java.lang.String PRIORITY_KEY -> l
    java.lang.String OPEN_DATA_KEY -> o
    java.lang.String IS_GROUP_SUMMARY_KEY -> n
    java.lang.String EXPERIMENT_KEY -> q
    java.lang.String TYPE_KEY -> p
    java.lang.String CHANNEL_KEY -> s
    java.lang.String VARIANT_KEY -> r
    java.lang.String FORMAT_KEY -> u
    java.lang.String VISIBILITY_KEY -> t
    java.lang.String OLD_BIG_PICTURE_ICON_BEHAVIOUR -> w
    java.lang.String RECEIPT_KEY -> v
    com.batch.android.json.JSONObject payload -> b
    java.lang.String BATCH_BUNDLE_KEY -> x
    java.lang.String jsonPayload -> a
    java.lang.String SCHEME_KEY -> c
    java.lang.String INSTALL_ID_KEY -> e
    java.lang.String ID_KEY -> d
    1:10:void <init>(java.lang.String):142:151 -> <init>
    11:11:void <init>(java.lang.String):144:144 -> <init>
    12:18:void <init>(com.batch.android.json.JSONObject):156:162 -> <init>
    19:19:void <init>(com.batch.android.json.JSONObject):158:158 -> <init>
    1:1:boolean isGroupSummary():516:516 -> A
    1:1:boolean isLocalCampainsRefresh():224:224 -> B
    1:2:boolean isSchemeEmpty():238:239 -> C
    1:1:boolean isSilent():215:215 -> D
    1:1:boolean shouldUseLegacyBigPictureIconBehaviour():610:610 -> E
    1:1:com.batch.android.core.InternalPushData getPushDataForReceiverIntent(android.content.Intent):172:172 -> a
    2:2:com.batch.android.core.InternalPushData getPushDataForReceiverIntent(android.content.Intent):169:169 -> a
    3:6:com.batch.android.core.InternalPushData getPushDataForReceiverBundle(android.os.Bundle):178:181 -> a
    7:11:com.batch.android.core.InternalPushData getPushDataForFirebaseMessage(com.google.firebase.messaging.RemoteMessage):194:198 -> a
    12:47:java.util.List getActions():363:398 -> a
    48:48:java.lang.String nullSafeGetString(com.batch.android.json.JSONObject,java.lang.String):621:621 -> a
    49:49:com.batch.android.json.JSONArray nullSafeGetJSONArray(java.lang.String):639:639 -> a
    1:1:java.lang.String getChannel():478:478 -> b
    2:2:com.batch.android.json.JSONObject nullSafeGetJSONObject(java.lang.String):630:630 -> b
    1:15:java.util.List getCustomBigIconAvailableDensity():291:305 -> c
    16:16:java.lang.String nullSafeGetString(java.lang.String):615:615 -> c
    1:6:java.lang.String getCustomBigIconURL():281:286 -> d
    1:15:java.util.List getCustomBigImageAvailableDensity():338:352 -> e
    1:6:java.lang.String getCustomBigImageURL():328:333 -> f
    1:6:java.util.Map getExtraParameters():553:558 -> g
    1:2:java.lang.String getGroup():502:503 -> h
    1:1:java.lang.String getInstallId():254:254 -> i
    1:1:java.lang.String getJsonPayload():207:207 -> j
    1:1:com.batch.android.json.JSONObject getLandingMessage():264:264 -> k
    1:1:com.batch.android.core.InternalPushData$Format getNotificationFormat():546:546 -> l
    1:5:java.util.Map getOpenData():574:578 -> m
    1:17:com.batch.android.core.InternalPushData$Priority getPriority():445:461 -> n
    18:18:com.batch.android.core.InternalPushData$Priority getPriority():459:459 -> n
    19:19:com.batch.android.core.InternalPushData$Priority getPriority():457:457 -> n
    20:35:com.batch.android.core.InternalPushData$Priority getPriority():455:470 -> n
    1:1:java.lang.String getPushId():249:249 -> o
    1:5:java.util.Map getReceiptEventData():592:596 -> p
    1:6:long getReceiptMaxDelay():435:440 -> q
    1:6:long getReceiptMinDelay():425:430 -> r
    1:13:com.batch.android.core.InternalPushData$ReceiptMode getReceiptMode():407:419 -> s
    14:14:com.batch.android.core.InternalPushData$ReceiptMode getReceiptMode():416:416 -> s
    15:15:com.batch.android.core.InternalPushData$ReceiptMode getReceiptMode():414:414 -> s
    1:1:java.lang.String getScheme():244:244 -> t
    1:10:com.batch.android.BatchNotificationSource getSource():483:492 -> u
    1:1:int getVisibility():529:529 -> v
    1:8:boolean hasCustomBigIcon():269:276 -> w
    1:8:boolean hasCustomBigImage():316:323 -> x
    1:1:boolean hasLandingMessage():259:259 -> y
    1:1:boolean hasScheme():233:233 -> z
com.batch.android.core.InternalPushData$1 -> com.batch.android.g0.p$a:
    int[] $SwitchMap$com$batch$android$core$InternalPushData$Priority -> a
    1:1:void <clinit>():664:664 -> <clinit>
com.batch.android.core.InternalPushData$Format -> com.batch.android.g0.p$b:
    com.batch.android.core.InternalPushData$Format DEFAULT -> a
    com.batch.android.core.InternalPushData$Format NEWS -> b
    com.batch.android.core.InternalPushData$Format[] $VALUES -> c
    1:2:void <clinit>():701:702 -> <clinit>
    3:3:void <clinit>():699:699 -> <clinit>
    1:1:void <init>(java.lang.String,int):699:699 -> <init>
    1:4:com.batch.android.core.InternalPushData$Format fromString(java.lang.String):706:709 -> a
    5:5:com.batch.android.core.InternalPushData$Format fromString(java.lang.String):707:707 -> a
    1:1:com.batch.android.core.InternalPushData$Format valueOf(java.lang.String):699:699 -> valueOf
    1:1:com.batch.android.core.InternalPushData$Format[] values():699:699 -> values
com.batch.android.core.InternalPushData$Priority -> com.batch.android.g0.p$c:
    com.batch.android.core.InternalPushData$Priority HIGH -> e
    com.batch.android.core.InternalPushData$Priority MAX -> f
    com.batch.android.core.InternalPushData$Priority UNDEFINED -> a
    com.batch.android.core.InternalPushData$Priority DEFAULT -> b
    com.batch.android.core.InternalPushData$Priority MIN -> c
    com.batch.android.core.InternalPushData$Priority LOW -> d
    com.batch.android.core.InternalPushData$Priority[] $VALUES -> g
    1:6:void <clinit>():650:655 -> <clinit>
    7:7:void <clinit>():648:648 -> <clinit>
    1:1:void <init>(java.lang.String,int):648:648 -> <init>
    1:5:int toAndroidPriority():660:664 -> a
    1:1:int toSupportPriority():682:682 -> b
    1:1:com.batch.android.core.InternalPushData$Priority valueOf(java.lang.String):648:648 -> valueOf
    1:1:com.batch.android.core.InternalPushData$Priority[] values():648:648 -> values
com.batch.android.core.InternalPushData$ReceiptMode -> com.batch.android.g0.p$d:
    com.batch.android.core.InternalPushData$ReceiptMode DISPLAY -> b
    com.batch.android.core.InternalPushData$ReceiptMode FORCE -> c
    com.batch.android.core.InternalPushData$ReceiptMode DEFAULT -> a
    com.batch.android.core.InternalPushData$ReceiptMode[] $VALUES -> d
    1:3:void <clinit>():715:717 -> <clinit>
    4:4:void <clinit>():713:713 -> <clinit>
    1:1:void <init>(java.lang.String,int):713:713 -> <init>
    1:1:com.batch.android.core.InternalPushData$ReceiptMode valueOf(java.lang.String):713:713 -> valueOf
    1:1:com.batch.android.core.InternalPushData$ReceiptMode[] values():713:713 -> values
com.batch.android.core.JobHelper -> com.batch.android.g0.q:
    int MAX_GENERATION_ATTEMPTS -> a
    1:1:void <init>():17:17 -> <init>
    1:8:int generateUniqueJobId(android.app.job.JobScheduler):27:34 -> a
    9:14:boolean jobListContainsJobId(java.util.List,int):39:44 -> a
com.batch.android.core.JobHelper$GenerationException -> com.batch.android.g0.q$a:
    1:1:void <init>(java.lang.String):56:56 -> <init>
com.batch.android.core.KVUserPreferencesStorage -> com.batch.android.g0.r:
    com.batch.android.core.Cryptor cryptor -> b
    android.content.SharedPreferences preferences -> a
    java.lang.String TAG -> c
    java.lang.String SHARED_PREFERENCES_FILENAME -> d
    1:9:void <init>(android.content.Context):42:50 -> <init>
    10:10:void <init>(android.content.Context):44:44 -> <init>
    1:6:java.lang.String get(java.lang.String,java.lang.String):73:78 -> a
    7:7:boolean contains(java.lang.String):83:83 -> a
    1:4:boolean persist(java.lang.String,java.lang.String):58:61 -> b
    5:5:java.lang.String get(java.lang.String):68:68 -> b
    1:1:void remove(java.lang.String):89:89 -> c
com.batch.android.core.Logger -> com.batch.android.g0.s:
    com.batch.android.LoggerDelegate loggerDelegate -> c
    java.lang.String PUBLIC_TAG -> a
    java.lang.String INTERNAL_TAG -> b
    boolean dev -> d
    1:1:void <clinit>():37:37 -> <clinit>
    1:1:void <init>():16:16 -> <init>
    1:1:boolean shouldEnableDevLogs():44:44 -> a
    2:2:boolean shouldLogForLevel(com.batch.android.LoggerLevel):51:51 -> a
    3:11:void error(java.lang.String,java.lang.String,java.lang.Throwable):261:269 -> a
    12:12:void error(java.lang.String,java.lang.Throwable):282:282 -> a
    13:21:void error(java.lang.String,java.lang.String):293:301 -> a
    22:22:void error(java.lang.String):313:313 -> a
    1:9:void info(java.lang.String,java.lang.String,java.lang.Throwable):129:137 -> b
    10:10:void info(java.lang.String,java.lang.Throwable):150:150 -> b
    11:19:void info(java.lang.String,java.lang.String):161:169 -> b
    20:20:void info(java.lang.String):181:181 -> b
    1:9:void internal(java.lang.String,java.lang.String,java.lang.Throwable):327:335 -> c
    10:10:void internal(java.lang.String,java.lang.Throwable):348:348 -> c
    11:19:void internal(java.lang.String,java.lang.String):359:367 -> c
    20:20:void internal(java.lang.String):379:379 -> c
    1:9:void verbose(java.lang.String,java.lang.String,java.lang.Throwable):63:71 -> d
    10:10:void verbose(java.lang.String,java.lang.Throwable):84:84 -> d
    11:19:void verbose(java.lang.String,java.lang.String):95:103 -> d
    20:20:void verbose(java.lang.String):115:115 -> d
    1:9:void warning(java.lang.String,java.lang.String,java.lang.Throwable):195:203 -> e
    10:10:void warning(java.lang.String,java.lang.Throwable):216:216 -> e
    11:19:void warning(java.lang.String,java.lang.String):227:235 -> e
    20:20:void warning(java.lang.String):247:247 -> e
com.batch.android.core.NamedThreadFactory -> com.batch.android.g0.t:
    java.util.concurrent.ThreadFactory defaultFactory -> b
    java.lang.String suffix -> a
    1:1:void <clinit>():14:14 -> <clinit>
    1:1:void <init>():19:19 -> <init>
    2:2:void <init>():16:16 -> <init>
    3:3:void <init>(java.lang.String):24:24 -> <init>
    4:13:void <init>(java.lang.String):16:25 -> <init>
    1:5:java.lang.Thread newThread(java.lang.Runnable):31:35 -> newThread
com.batch.android.core.NotificationAuthorizationStatus -> com.batch.android.g0.u:
    java.lang.String TAG -> a
    1:1:void <init>():23:23 -> <init>
    1:9:boolean canAppShowNotifications(android.content.Context,com.batch.android.BatchNotificationChannelsManager):34:42 -> a
    10:27:boolean canAppShowNotificationsForChannel(android.content.Context,java.lang.String):49:66 -> a
    28:31:boolean areAppNotificationsEnabled(android.content.Context,android.app.NotificationManager):74:77 -> a
    32:47:boolean areBatchNotificationsEnabled(android.content.Context):87:102 -> a
    48:50:boolean isDefaultChannelEnabled(android.app.NotificationManager,com.batch.android.BatchNotificationChannelsManager):114:116 -> a
    51:51:boolean isDefaultChannelEnabled(android.app.NotificationManager,com.batch.android.BatchNotificationChannelsManager):115:115 -> a
    52:74:boolean canChannelShowNotifications(android.app.NotificationManager,java.lang.String,boolean):130:152 -> a
com.batch.android.core.ObjectUserPreferencesStorage -> com.batch.android.g0.v:
    com.batch.android.core.Cryptor cryptor -> b
    android.content.SharedPreferences preferences -> a
    java.lang.String TAG -> c
    java.lang.String SHARED_PREFERENCES_FILENAME -> d
    1:9:void <init>(android.content.Context):51:59 -> <init>
    10:10:void <init>(android.content.Context):53:53 -> <init>
    1:3:boolean persist(java.lang.String,java.io.Serializable):67:69 -> a
    4:4:boolean contains(java.lang.String):85:85 -> a
    5:22:java.lang.String serialize(java.io.Serializable):112:129 -> a
    23:36:java.lang.String serialize(java.io.Serializable):119:132 -> a
    37:37:java.lang.String serialize(java.io.Serializable):106:106 -> a
    1:19:java.lang.Object deserialize(java.lang.String):153:171 -> b
    20:33:java.lang.Object deserialize(java.lang.String):161:174 -> b
    1:3:java.lang.Object get(java.lang.String):77:79 -> c
    1:1:void remove(java.lang.String):91:91 -> d
com.batch.android.core.ParameterKeys -> com.batch.android.g0.w:
    java.lang.String TASK_EXECUTOR_MIN_POOL -> I0
    java.lang.String IMAGE_WS_READ_TIMEOUT_KEY -> I
    java.lang.String TRACKER_WS_PROPERTY_KEY -> j
    java.lang.String WEBSERVICE_IDS_ADVANCED_PARAMETERS -> E0
    java.lang.String DEFAULT_RETRY_NUMBER_KEY -> A0
    java.lang.String USER_PROFILE_LANGUAGE_KEY -> b1
    java.lang.String ATTR_SEND_WS_CONNECT_TIMEOUT_KEY -> Q
    java.lang.String TRACKER_WS_READ_TIMEOUT_KEY -> r
    java.lang.String ATTR_CHECK_WS_RETRYCOUNT_KEY -> Y
    java.lang.String DISPLAY_RECEIPT_WS_RETRYCOUNT_KEY -> v0
    java.lang.String PUSH_WS_CONNECT_TIMEOUT_KEY -> z
    java.lang.String DISPLAY_RECEIPT_WS_CRYPTORTYPE_KEY -> r0
    java.lang.String START_WS_PROPERTY_KEY -> a
    java.lang.String INBOX_WS_RETRYCOUNT_KEY -> n0
    java.lang.String ATTR_LOCAL_CAMPAIGNS_WS_READ_TIMEOUT_KEY -> j0
    java.lang.String START_WS_READ_TIMEOUT_KEY -> i
    java.lang.String IMAGE_WS_CONNECT_TIMEOUT_KEY -> H
    java.lang.String ATTR_LOCAL_CAMPAIGNS_WS_POST_CRYPTORTYPE_KEY -> f0
    java.lang.String ATTR_LOCAL_CAMPAIGNS_WS_PROPERTY_KEY -> b0
    java.lang.String TRACKER_WS_CONNECT_TIMEOUT_KEY -> q
    java.lang.String ATTR_SEND_WS_RETRYCOUNT_KEY -> P
    java.lang.String LOCAL_CAMPAIGNS_WS_INITIAL_DELAY -> y0
    java.lang.String USER_DATA_CHANGESET -> Z0
    java.lang.String PUSH_WS_RETRYCOUNT_KEY -> y
    java.lang.String ATTR_CHECK_WS_READ_CRYPTORTYPE_KEY -> X
    java.lang.String PUSH_REGISTRATION_PROVIDER_KEY -> V0
    java.lang.String EVENT_TRACKER_BATCH_QUANTITY -> R0
    java.lang.String USER_DATA_VERSION -> N0
    java.lang.String SERVER_ID_KEY -> H0
    java.lang.String ATTR_SEND_WS_URLSORTER_PATTERN_KEY -> K
    java.lang.String WEBSERVICE_IDS_PARAMETERS -> D0
    java.lang.String LIB_PREVIOUSVERSION_KEY -> e1
    java.lang.String TRACKER_WS_CRYPTORTYPE_KEY -> l
    java.lang.String USER_DATA_TRANSACTION_ID -> a1
    java.lang.String ATTR_CHECK_WS_PROPERTY_KEY -> S
    java.lang.String PUSH_WS_URLSORTER_PATTERN_KEY -> t
    java.lang.String DISPLAY_RECEIPT_WS_READ_CRYPTORTYPE_KEY -> u0
    java.lang.String DISPLAY_RECEIPT_WS_URLSORTER_PATTERN_KEY -> q0
    java.lang.String START_WS_CRYPTORTYPE_KEY -> c
    java.lang.String IMAGE_WS_URLSORTER_PATTERN_KEY -> B
    java.lang.String INBOX_WS_POST_CRYPTORTYPE_KEY -> m0
    java.lang.String ATTR_LOCAL_CAMPAIGNS_WS_CONNECT_TIMEOUT_KEY -> i0
    java.lang.String TRACKER_WS_URLSORTER_PATTERN_KEY -> k
    java.lang.String ATTR_SEND_WS_PROPERTY_KEY -> J
    java.lang.String ATTR_LOCAL_CAMPAIGNS_WS_CRYPTORMODE_KEY -> e0
    java.lang.String ATTR_CHECK_WS_READ_TIMEOUT_KEY -> a0
    java.lang.String PUSH_WS_PROPERTY_KEY -> s
    java.lang.String ATTR_SEND_WS_READ_TIMEOUT_KEY -> R
    java.lang.String WS_CIPHERV2_LAST_FAILURE_KEY -> z0
    java.lang.String PUSH_NOTIF_TYPE -> Y0
    java.lang.String ATTR_CHECK_WS_CONNECT_TIMEOUT_KEY -> Z
    java.lang.String PUSH_REGISTRATION_ID_KEY -> U0
    java.lang.String EVENT_TRACKER_MAX_DELAY -> Q0
    java.lang.String PUSH_WS_READ_TIMEOUT_KEY -> A
    java.lang.String START_WS_URLSORTER_PATTERN_KEY -> b
    java.lang.String CUSTOM_ID -> M0
    java.lang.String START_WS_READ_CRYPTORTYPE_KEY -> f
    java.lang.String INSTALL_TIMESTAMP_KEY -> G0
    java.lang.String ATTR_SEND_WS_CRYPTORMODE_KEY -> M
    java.lang.String DEFAULT_READ_TIMEOUT_KEY -> C0
    java.lang.String LIB_CURRENTVERSION_KEY -> d1
    java.lang.String TRACKER_WS_POST_CRYPTORTYPE_KEY -> n
    java.lang.String ATTR_CHECK_WS_CRYPTORTYPE_KEY -> U
    java.lang.String PUSH_WS_CRYPTORMODE_KEY -> v
    java.lang.String DISPLAY_RECEIPT_WS_READ_TIMEOUT_KEY -> x0
    java.lang.String DISPLAY_RECEIPT_WS_POST_CRYPTORTYPE_KEY -> t0
    java.lang.String INBOX_WS_READ_TIMEOUT_KEY -> p0
    java.lang.String START_WS_POST_CRYPTORTYPE_KEY -> e
    java.lang.String INBOX_WS_READ_CRYPTORTYPE_KEY -> l0
    java.lang.String IMAGE_WS_CRYPTORMODE_KEY -> D
    java.lang.String ATTR_LOCAL_CAMPAIGNS_WS_RETRYCOUNT_KEY -> h0
    java.lang.String TRACKER_WS_CRYPTORMODE_KEY -> m
    java.lang.String ATTR_LOCAL_CAMPAIGNS_WS_CRYPTORTYPE_KEY -> d0
    java.lang.String ATTR_SEND_WS_CRYPTORTYPE_KEY -> L
    java.lang.String PUSH_WS_CRYPTORTYPE_KEY -> u
    java.lang.String ATTR_CHECK_WS_URLSORTER_PATTERN_KEY -> T
    java.lang.String PUSH_APP_VERSION_KEY -> X0
    java.lang.String EVENT_TRACKER_STATE -> T0
    java.lang.String EVENT_TRACKER_INITIAL_DELAY -> P0
    java.lang.String IMAGE_WS_CRYPTORTYPE_KEY -> C
    java.lang.String SCHEME_CODE_PATTERN -> L0
    java.lang.String START_WS_CRYPTORMODE_KEY -> d
    java.lang.String IMAGE_WS_RETRYCOUNT_KEY -> G
    java.lang.String TASK_EXECUTOR_MAX_POOL -> J0
    java.lang.String START_WS_CONNECT_TIMEOUT_KEY -> h
    java.lang.String INSTALL_ID_KEY -> F0
    java.lang.String ATTR_SEND_WS_READ_CRYPTORTYPE_KEY -> O
    java.lang.String DEFAULT_CONNECT_TIMEOUT_KEY -> B0
    java.lang.String USER_PROFILE_REGION_KEY -> c1
    java.lang.String TRACKER_WS_RETRYCOUNT_KEY -> p
    java.lang.String ATTR_CHECK_WS_POST_CRYPTORTYPE_KEY -> W
    java.lang.String PUSH_WS_READ_CRYPTORTYPE_KEY -> x
    java.lang.String DISPLAY_RECEIPT_WS_CONNECT_TIMEOUT_KEY -> w0
    java.lang.String DISPLAY_RECEIPT_WS_CRYPTORMODE_KEY -> s0
    java.lang.String INBOX_WS_CONNECT_TIMEOUT_KEY -> o0
    java.lang.String INBOX_WS_URLSORTER_PATTERN_KEY -> k0
    java.lang.String START_WS_RETRYCOUNT_KEY -> g
    java.lang.String IMAGE_WS_READ_CRYPTORTYPE_KEY -> F
    java.lang.String ATTR_LOCAL_CAMPAIGNS_WS_READ_CRYPTORTYPE_KEY -> g0
    java.lang.String ATTR_LOCAL_CAMPAIGNS_WS_URLSORTER_PATTERN_KEY -> c0
    java.lang.String TRACKER_WS_READ_CRYPTORTYPE_KEY -> o
    java.lang.String ATTR_SEND_WS_POST_CRYPTORTYPE_KEY -> N
    java.lang.String PUSH_WS_POST_CRYPTORTYPE_KEY -> w
    java.lang.String ATTR_CHECK_WS_CRYPTORMODE_KEY -> V
    java.lang.String PUSH_REGISTRATION_SENDERID_KEY -> W0
    java.lang.String EVENT_TRACKER_EVENTS_LIMIT -> S0
    java.lang.String SERVER_TIMESTAMP -> O0
    java.lang.String IMAGE_WS_POST_CRYPTORTYPE_KEY -> E
    java.lang.String TASK_EXECUTOR_THREADTTL -> K0
    1:1:void <init>():10:10 -> <init>
com.batch.android.core.Parameters -> com.batch.android.g0.x:
    android.content.Context applicationContext -> a
    java.lang.String COMMON_EXTERNAL_CRYPT_BASE_KEY_V2 -> f
    int API_LEVEL -> j
    java.lang.String LIBRARY_BUNDLE -> l
    java.lang.String PLUGIN_VERSION_ENVIRONEMENT_VAR -> n
    java.lang.String BASE_WS_URL -> p
    java.lang.String TRACKER_WS_URL -> r
    java.lang.String ATTR_SEND_WS_URL -> t
    java.lang.String LOCAL_CAMPAIGNS_WS_URL -> v
    java.lang.String INBOX_SYNC_WS_URL -> x
    boolean ENABLE_WS_INTERCEPTOR -> h
    java.lang.String COMMON_INTERNAL_CRYPT_BASE_KEY -> c
    java.lang.String COMMON_EXTERNAL_CRYPT_BASE_KEY -> e
    java.lang.String SDK_VERSION -> i
    int MESSAGING_API_LEVEL -> k
    java.lang.String DOMAIN_URL -> m
    java.lang.String BRIDGE_VERSION_ENVIRONEMENT_VAR -> o
    java.util.Map appParameters -> z
    java.lang.String START_WS_URL -> q
    java.lang.String PUSH_WS_URL -> s
    java.lang.String ATTR_CHECK_WS_URL -> u
    java.lang.String INBOX_FETCH_WS_URL -> w
    java.util.Map cacheParameters -> b
    java.lang.String DISPLAY_RECEIPT_WS_URL -> y
    boolean ENABLE_DEV_LOGS -> g
    java.lang.String PARAMETERS_KEY_PREFIX -> A
    java.lang.String COMMON_EXTERNAL_CRYPT_SIGNATURE_KEY -> d
    1:115:void <clinit>():63:177 -> <clinit>
    1:10:void <init>(android.content.Context):207:216 -> <init>
    11:11:void <init>(android.content.Context):209:209 -> <init>
    1:14:java.lang.String get(java.lang.String):233:246 -> a
    15:15:java.lang.String get(java.lang.String):238:238 -> a
    16:16:java.lang.String get(java.lang.String):230:230 -> a
    17:18:java.lang.String get(java.lang.String,java.lang.String):263:264 -> a
    19:24:void set(java.lang.String,java.lang.String,boolean):288:293 -> a
    25:25:void set(java.lang.String,java.lang.String,boolean):290:290 -> a
    26:26:void set(java.lang.String,java.lang.String,boolean):285:285 -> a
    27:27:void set(java.lang.String,java.lang.String,boolean):281:281 -> a
    1:5:void remove(java.lang.String):310:314 -> b
    6:6:void remove(java.lang.String):312:312 -> b
    7:7:void remove(java.lang.String):307:307 -> b
com.batch.android.core.PatternURLSorter -> com.batch.android.g0.y:
    java.util.List pattern -> a
    1:1:void <init>():30:30 -> <init>
    2:2:void <init>():22:22 -> <init>
    3:3:void <init>(java.util.List):39:39 -> <init>
    4:23:void <init>(java.util.List):22:41 -> <init>
    24:24:void <init>(java.lang.String):51:51 -> <init>
    25:56:void <init>(java.lang.String):22:53 -> <init>
    1:1:java.util.List getKeysOrdered(java.util.List):67:67 -> a
    2:2:java.util.List getKeysOrdered(java.util.Set):78:78 -> a
    3:3:java.util.List getKeysOrdered(java.util.Map):89:89 -> a
    4:27:java.util.List order(java.util.Collection):102:125 -> a
    28:28:java.util.List order(java.util.Collection):103:103 -> a
com.batch.android.core.Promise -> com.batch.android.g0.z:
    java.lang.Object resolvedValue -> b
    java.util.ArrayDeque thenQueue -> d
    java.util.ArrayDeque catchQueue -> e
    com.batch.android.core.Promise$Status status -> a
    java.lang.Exception rejectException -> c
    1:1:void <init>():22:22 -> <init>
    2:7:void <init>():14:19 -> <init>
    8:8:void <init>(com.batch.android.core.Promise$ExecutorRunnable):26:26 -> <init>
    9:22:void <init>(com.batch.android.core.Promise$ExecutorRunnable):14:27 -> <init>
    23:23:void <init>(com.batch.android.core.Promise$DeferredResultExecutorRunnable):31:31 -> <init>
    24:42:void <init>(com.batch.android.core.Promise$DeferredResultExecutorRunnable):14:32 -> <init>
    1:11:void resolve(java.lang.Object):51:61 -> a
    12:22:void reject(java.lang.Exception):67:77 -> a
    23:28:com.batch.android.core.Promise then(com.batch.android.core.Promise$ThenRunnable):83:88 -> a
    29:29:com.batch.android.core.Promise then(com.batch.android.core.Promise$ThenRunnable):85:85 -> a
    30:35:com.batch.android.core.Promise catchException(com.batch.android.core.Promise$CatchRunnable):97:102 -> a
    36:36:com.batch.android.core.Promise catchException(com.batch.android.core.Promise$CatchRunnable):99:99 -> a
    37:37:com.batch.android.core.Promise$Status getStatus():111:111 -> a
    1:2:com.batch.android.core.Promise resolved(java.lang.Object):37:38 -> b
    3:4:com.batch.android.core.Promise rejected(java.lang.Exception):44:45 -> b
com.batch.android.core.Promise$1 -> com.batch.android.g0.z$a:
    int[] $SwitchMap$com$batch$android$core$Promise$Status -> a
    1:1:void <clinit>():83:83 -> <clinit>
com.batch.android.core.Promise$CatchRunnable -> com.batch.android.g0.z$b:
    void run(java.lang.Exception) -> a
com.batch.android.core.Promise$DeferredResultExecutorRunnable -> com.batch.android.g0.z$c:
    void run(com.batch.android.core.Promise) -> a
com.batch.android.core.Promise$ExecutorRunnable -> com.batch.android.g0.z$d:
com.batch.android.core.Promise$Status -> com.batch.android.g0.z$e:
    com.batch.android.core.Promise$Status[] $VALUES -> d
    com.batch.android.core.Promise$Status REJECTED -> c
    com.batch.android.core.Promise$Status PENDING -> a
    com.batch.android.core.Promise$Status RESOLVED -> b
    1:3:void <clinit>():143:145 -> <clinit>
    4:4:void <clinit>():141:141 -> <clinit>
    1:1:void <init>(java.lang.String,int):141:141 -> <init>
    1:1:com.batch.android.core.Promise$Status valueOf(java.lang.String):141:141 -> valueOf
    1:1:com.batch.android.core.Promise$Status[] values():141:141 -> values
com.batch.android.core.Promise$ThenRunnable -> com.batch.android.g0.z$f:
    void run(java.lang.Object) -> a
com.batch.android.core.PushImageCache -> com.batch.android.g0.a0:
    java.lang.String TAG -> a
    int MAX_IMAGES_STORED -> b
    java.lang.String IMAGES_CACHE_FOLDER -> c
    1:1:void <init>():16:16 -> <init>
    1:1:java.lang.String getFilePathForIdentifier(android.content.Context,java.lang.String):50:50 -> a
    2:12:void storeImageInCache(android.content.Context,java.lang.String,android.graphics.Bitmap):65:75 -> a
    13:16:void storeImageInCache(android.content.Context,java.lang.String,android.graphics.Bitmap):73:76 -> a
    17:19:java.lang.String buildIdentifierForURL(java.lang.String):102:104 -> a
    20:39:void clearImagesIfNeeded(android.content.Context):119:138 -> a
    40:42:void clearImagesIfNeeded(android.content.Context):137:139 -> a
    43:43:int lambda$clearImagesIfNeeded$0(java.io.File,java.io.File):130:130 -> a
    1:1:java.lang.String getPushImageCacheFolder(android.content.Context):38:38 -> b
    2:3:android.graphics.Bitmap getImageFromCache(android.content.Context,java.lang.String):89:90 -> b
com.batch.android.core.Reachability -> com.batch.android.g0.b0:
    android.content.Context context -> c
    java.util.concurrent.atomic.AtomicBoolean isConnected -> a
    android.content.BroadcastReceiver networkStateReceiver -> b
    java.lang.String IS_CONNECTED_KEY -> e
    java.lang.String CONNECTIVITY_CHANGED_EVENT -> d
    1:31:void <init>(android.content.Context):58:88 -> <init>
    32:32:void <init>(android.content.Context):60:60 -> <init>
    1:1:boolean access$000(com.batch.android.core.Reachability):21:21 -> a
    2:2:boolean isConnected():109:109 -> a
    1:1:java.util.concurrent.atomic.AtomicBoolean access$100(com.batch.android.core.Reachability):21:21 -> b
    2:4:boolean isConnectedNow():133:135 -> b
    1:1:void access$200(com.batch.android.core.Reachability):21:21 -> c
    2:5:void onConnectivityChange():117:120 -> c
    1:1:void stop():98:98 -> d
com.batch.android.core.Reachability$1 -> com.batch.android.g0.b0$a:
    com.batch.android.core.Reachability this$0 -> a
    1:1:void <init>(com.batch.android.core.Reachability):74:74 -> <init>
    1:4:void onReceive(android.content.Context,android.content.Intent):79:82 -> onReceive
com.batch.android.core.ReflectionHelper -> com.batch.android.g0.c0:
    1:1:void <init>():17:17 -> <init>
    1:1:boolean isAndroidXAppCompatActivityPresent():34:34 -> a
    2:4:boolean isInstanceOfCoordinatorLayout(java.lang.Object):47:49 -> a
    5:7:boolean optOutOfSmartReply(androidx.core.app.NotificationCompat$Builder):58:60 -> a
    8:10:boolean optOutOfDarkMode(android.view.View):70:72 -> a
    1:1:boolean isAndroidXFragmentPresent():24:24 -> b
    1:1:boolean isGMSGoogleCloudMessagingPresent():86:86 -> c
    1:1:boolean isGMSInstanceIDPresent():96:96 -> d
com.batch.android.core.ResponseHelper -> com.batch.android.g0.d0:
    java.lang.String TAG -> a
    1:1:void <init>():10:10 -> <init>
    1:3:com.batch.android.json.JSONObject asJson(byte[]):27:29 -> a
    4:4:com.batch.android.json.JSONObject asJson(byte[]):23:23 -> a
    1:3:java.lang.String asString(byte[]):47:49 -> b
    4:4:java.lang.String asString(byte[]):43:43 -> b
com.batch.android.core.SecureDateProvider -> com.batch.android.g0.e0:
    java.util.Date mServerDate -> a
    long mElapsedRealtime -> b
    1:1:void <init>():20:20 -> <init>
    1:2:void initServerDate(java.util.Date):70:71 -> a
    3:3:com.batch.android.date.BatchDate getCurrentDate():77:77 -> a
    1:6:java.util.Date getDate():42:47 -> b
    1:1:boolean isSyncDate():60:60 -> c
com.batch.android.core.SystemDateProvider -> com.batch.android.g0.f0:
    1:1:void <init>():6:6 -> <init>
    1:1:com.batch.android.date.BatchDate getCurrentDate():11:11 -> a
com.batch.android.core.SystemParameterHelper -> com.batch.android.g0.g0:
    java.lang.String TAG -> a
    1:1:void <init>():27:27 -> <init>
    1:3:java.lang.String getAppVersion(android.content.Context):156:158 -> a
    4:4:java.lang.String getBridgeVersion():379:379 -> a
    5:98:java.lang.String getValue(java.lang.String,android.content.Context):518:611 -> a
    99:99:java.lang.String getValue(java.lang.String,android.content.Context):597:597 -> a
    100:100:java.lang.String getValue(java.lang.String,android.content.Context):594:594 -> a
    101:101:java.lang.String getValue(java.lang.String,android.content.Context):591:591 -> a
    102:102:java.lang.String getValue(java.lang.String,android.content.Context):588:588 -> a
    103:103:java.lang.String getValue(java.lang.String,android.content.Context):585:585 -> a
    104:104:java.lang.String getValue(java.lang.String,android.content.Context):582:582 -> a
    105:105:java.lang.String getValue(java.lang.String,android.content.Context):579:579 -> a
    106:106:java.lang.String getValue(java.lang.String,android.content.Context):576:576 -> a
    107:107:java.lang.String getValue(java.lang.String,android.content.Context):573:573 -> a
    108:108:java.lang.String getValue(java.lang.String,android.content.Context):570:570 -> a
    109:109:java.lang.String getValue(java.lang.String,android.content.Context):567:567 -> a
    110:110:java.lang.String getValue(java.lang.String,android.content.Context):564:564 -> a
    111:111:java.lang.String getValue(java.lang.String,android.content.Context):561:561 -> a
    112:112:java.lang.String getValue(java.lang.String,android.content.Context):558:558 -> a
    113:113:java.lang.String getValue(java.lang.String,android.content.Context):555:555 -> a
    114:114:java.lang.String getValue(java.lang.String,android.content.Context):552:552 -> a
    115:115:java.lang.String getValue(java.lang.String,android.content.Context):549:549 -> a
    116:116:java.lang.String getValue(java.lang.String,android.content.Context):546:546 -> a
    117:117:java.lang.String getValue(java.lang.String,android.content.Context):543:543 -> a
    118:118:java.lang.String getValue(java.lang.String,android.content.Context):540:540 -> a
    119:119:java.lang.String getValue(java.lang.String,android.content.Context):537:537 -> a
    120:120:java.lang.String getValue(java.lang.String,android.content.Context):534:534 -> a
    121:121:java.lang.String getValue(java.lang.String,android.content.Context):531:531 -> a
    122:122:java.lang.String getValue(java.lang.String,android.content.Context):528:528 -> a
    123:123:java.lang.String getValue(java.lang.String,android.content.Context):520:520 -> a
    1:1:java.lang.String getDeviceBrand():125:125 -> b
    2:6:java.lang.Integer getAppVersionCode(android.content.Context):173:177 -> b
    1:1:java.lang.String getBundleName(android.content.Context):39:39 -> c
    2:2:java.lang.String getDeviceDate():73:73 -> c
    1:1:java.util.Locale getDeviceLocale():63:63 -> d
    2:8:android.net.ConnectivityManager getConnectivityManager(android.content.Context):196:202 -> d
    1:5:java.lang.Long getFirstInstallDate(android.content.Context):85:89 -> e
    6:6:java.lang.String getDeviceModel():140:140 -> e
    1:1:java.lang.String getDeviceTimezone():50:50 -> f
    2:6:java.lang.Long getLastUpdateDate(android.content.Context):106:110 -> f
    1:1:java.lang.String getOSVersion():191:191 -> g
    2:9:java.lang.String getNetworkCountryIso(android.content.Context):312:319 -> g
    1:11:android.net.NetworkInfo getNetworkInfos(android.content.Context):332:342 -> h
    12:12:java.lang.String getPluginVersion():389:389 -> h
    1:22:java.lang.Integer getNetworkKind(android.content.Context):478:499 -> i
    23:23:java.lang.Integer getNetworkKind(android.content.Context):496:496 -> i
    1:8:java.lang.String getNetworkOperatorName(android.content.Context):288:295 -> j
    1:1:int getScreenHeight(android.content.Context):405:405 -> k
    1:1:int getScreenOrientation(android.content.Context):463:463 -> l
    1:13:android.graphics.Point getScreenSize(android.content.Context):436:448 -> m
    1:1:int getScreenWidth(android.content.Context):420:420 -> n
    1:8:java.lang.String getSimCountryIso(android.content.Context):264:271 -> o
    1:1:java.lang.String getSimOperator(android.content.Context):247:247 -> p
    1:8:java.lang.String getSimOperatorName(android.content.Context):225:232 -> q
    1:1:android.telephony.TelephonyManager getTelephonyManager(android.content.Context):207:207 -> r
    1:8:java.lang.Boolean isNetRoaming(android.content.Context):359:366 -> s
com.batch.android.core.SystemParameterHelper$1 -> com.batch.android.g0.g0$a:
    int[] $SwitchMap$com$batch$android$core$SystemParameterShortName -> a
    1:1:void <clinit>():526:526 -> <clinit>
com.batch.android.core.SystemParameterShortName -> com.batch.android.g0.h0:
    com.batch.android.core.SystemParameterShortName DEVICE_TYPE -> h
    com.batch.android.core.SystemParameterShortName SCREEN_HEIGHT -> G
    com.batch.android.core.SystemParameterShortName BRAND -> f
    com.batch.android.core.SystemParameterShortName PLUGIN_VERSION -> E
    com.batch.android.core.SystemParameterShortName INSTALL_ID -> l
    com.batch.android.core.SystemParameterShortName DEVICE_REGION -> j
    com.batch.android.core.SystemParameterShortName NETWORK_KIND -> I
    com.batch.android.core.SystemParameterShortName[] $VALUES -> J
    com.batch.android.core.SystemParameterShortName FIRST_INSTALL_DATE -> d
    com.batch.android.core.SystemParameterShortName CUSTOM_USER_ID -> C
    com.batch.android.core.SystemParameterShortName BUNDLE_NAME -> b
    com.batch.android.core.SystemParameterShortName API_LEVEL -> A
    com.batch.android.core.SystemParameterShortName NETWORK_NAME -> x
    com.batch.android.core.SystemParameterShortName SIM_OPERATOR -> v
    com.batch.android.core.SystemParameterShortName ROAMING -> z
    com.batch.android.core.SystemParameterShortName SESSION_ID -> p
    com.batch.android.core.SystemParameterShortName SERVER_ID -> n
    java.lang.String shortName -> a
    com.batch.android.core.SystemParameterShortName OS_VERSION -> t
    com.batch.android.core.SystemParameterShortName APPLICATION_VERSION -> r
    com.batch.android.core.SystemParameterShortName SCREEN_ORIENTATION -> H
    com.batch.android.core.SystemParameterShortName SDK_LEVEL -> g
    com.batch.android.core.SystemParameterShortName SCREEN_WIDTH -> F
    com.batch.android.core.SystemParameterShortName LAST_UPDATE_DATE -> e
    com.batch.android.core.SystemParameterShortName DEVICE_DATE -> k
    com.batch.android.core.SystemParameterShortName DEVICE_LANGUAGE -> i
    com.batch.android.core.SystemParameterShortName BRIDGE_VERSION -> D
    com.batch.android.core.SystemParameterShortName DEVICE_TIMEZONE -> c
    com.batch.android.core.SystemParameterShortName MESSAGING_API_LEVEL -> B
    com.batch.android.core.SystemParameterShortName SIM_COUNTRY -> w
    com.batch.android.core.SystemParameterShortName SIM_OPERATOR_NAME -> u
    com.batch.android.core.SystemParameterShortName NETWORK_COUNTRY -> y
    com.batch.android.core.SystemParameterShortName ADVERTISING_ID -> o
    com.batch.android.core.SystemParameterShortName DEVICE_INSTALL_DATE -> m
    com.batch.android.core.SystemParameterShortName APPLICATION_CODE -> s
    com.batch.android.core.SystemParameterShortName ADVERTISING_ID_OPTIN -> q
    1:84:void <clinit>():10:93 -> <clinit>
    85:85:void <clinit>():8:8 -> <clinit>
    1:2:void <init>(java.lang.String,int,java.lang.String):106:107 -> <init>
    1:7:com.batch.android.core.SystemParameterShortName fromShortValue(java.lang.String):123:129 -> a
    8:8:com.batch.android.core.SystemParameterShortName fromShortValue(java.lang.String):120:120 -> a
    1:1:com.batch.android.core.SystemParameterShortName valueOf(java.lang.String):8:8 -> valueOf
    1:1:com.batch.android.core.SystemParameterShortName[] values():8:8 -> values
com.batch.android.core.TLSSocketFactory -> com.batch.android.g0.i0:
    java.util.List enabledProtocols -> c
    javax.net.ssl.SSLSocketFactory internalSSLSocketFactory -> a
    java.lang.String[] protocols -> b
    1:10:void <clinit>():27:36 -> <clinit>
    1:9:void <init>():41:49 -> <init>
    1:2:java.net.Socket enableTLSOnSocket(java.net.Socket):117:118 -> a
    1:1:java.net.Socket createSocket():67:67 -> createSocket
    2:2:java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean):76:76 -> createSocket
    3:3:java.net.Socket createSocket(java.lang.String,int):82:82 -> createSocket
    4:4:java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int):91:91 -> createSocket
    5:5:java.net.Socket createSocket(java.net.InetAddress,int):100:100 -> createSocket
    6:6:java.net.Socket createSocket(java.net.InetAddress,int,java.net.InetAddress,int):109:109 -> createSocket
    1:1:java.lang.String[] getDefaultCipherSuites():55:55 -> getDefaultCipherSuites
    1:1:java.lang.String[] getSupportedCipherSuites():61:61 -> getSupportedCipherSuites
com.batch.android.core.TaskExecutor -> com.batch.android.g0.j0:
    java.util.Map futures -> a
    android.content.Context context -> b
    java.lang.String INTENT_WORK_FINISHED -> c
    1:1:void <init>(android.content.Context,int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue):65:65 -> <init>
    2:37:void <init>(android.content.Context,int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue):41:76 -> <init>
    38:38:void <init>(android.content.Context,int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue):73:73 -> <init>
    1:11:com.batch.android.core.TaskExecutor provide(android.content.Context):82:92 -> a
    12:53:java.util.concurrent.Future submit(com.batch.android.core.TaskRunnable):114:155 -> a
    54:54:java.util.concurrent.Future submit(com.batch.android.core.TaskRunnable):111:111 -> a
    55:57:boolean isBusy():165:167 -> a
    1:16:void afterExecute(java.lang.Runnable,java.lang.Throwable):182:197 -> afterExecute
    17:25:void afterExecute(java.lang.Runnable,java.lang.Throwable):189:197 -> afterExecute
    26:29:void afterExecute(java.lang.Runnable,java.lang.Throwable):195:198 -> afterExecute
    1:1:void execute(java.lang.Runnable):173:173 -> execute
com.batch.android.core.TaskRunnable -> com.batch.android.g0.k0:
    java.lang.String getTaskIdentifier() -> a
com.batch.android.core.URLBuilder -> com.batch.android.g0.l0:
    com.batch.android.core.URLBuilder$CryptorMode cryptorMode -> c
    java.util.Map getParameters -> b
    java.lang.String baseURL -> a
    java.lang.String TAG -> d
    1:8:void <init>(java.lang.String,com.batch.android.core.URLBuilder$CryptorMode,java.lang.String[]):48:55 -> <init>
    9:9:void <init>(java.lang.String,com.batch.android.core.URLBuilder$CryptorMode,java.lang.String[]):50:50 -> <init>
    1:34:void parseURL(java.lang.String,java.lang.String[]):76:109 -> a
    35:36:void parseURL(java.lang.String,java.lang.String[]):96:97 -> a
    37:46:java.util.Map parseQuery(java.lang.String):121:130 -> a
    47:55:void addGETParameter(java.lang.String,java.lang.String):147:155 -> a
    56:56:void addGETParameter(java.lang.String,java.lang.String):152:152 -> a
    57:57:void addGETParameter(java.lang.String,java.lang.String):148:148 -> a
    58:58:java.net.URL build():181:181 -> a
    59:72:java.net.URL build(com.batch.android.core.PatternURLSorter,com.batch.android.core.Cryptor):193:206 -> a
    73:77:void buildRawQuery(com.batch.android.core.PatternURLSorter,java.lang.StringBuilder):281:285 -> a
    78:78:void addParameter(java.lang.StringBuilder,java.lang.String,java.lang.String):297:297 -> a
    79:79:void cleanURL(java.lang.StringBuilder):307:307 -> a
    1:1:void removeGETParameter(java.lang.String):169:169 -> b
    2:2:void removeGETParameter(java.lang.String):166:166 -> b
    3:46:java.lang.String buildQuery(com.batch.android.core.PatternURLSorter,com.batch.android.core.Cryptor):223:266 -> b
    47:50:java.lang.String buildQuery(com.batch.android.core.PatternURLSorter,com.batch.android.core.Cryptor):254:257 -> b
    51:58:java.lang.String buildQuery(com.batch.android.core.PatternURLSorter,com.batch.android.core.Cryptor):255:262 -> b
    59:65:java.lang.String buildQuery(com.batch.android.core.PatternURLSorter,com.batch.android.core.Cryptor):244:250 -> b
    66:68:java.lang.String buildQuery(com.batch.android.core.PatternURLSorter,com.batch.android.core.Cryptor):238:240 -> b
    69:69:java.lang.String buildQuery(com.batch.android.core.PatternURLSorter,com.batch.android.core.Cryptor):220:220 -> b
com.batch.android.core.URLBuilder$1 -> com.batch.android.g0.l0$a:
    int[] $SwitchMap$com$batch$android$core$URLBuilder$CryptorMode -> a
    1:1:void <clinit>():235:235 -> <clinit>
com.batch.android.core.URLBuilder$CryptorMode -> com.batch.android.g0.l0$b:
    com.batch.android.core.URLBuilder$CryptorMode VALUE -> c
    com.batch.android.core.URLBuilder$CryptorMode ALL -> b
    com.batch.android.core.URLBuilder$CryptorMode[] $VALUES -> e
    com.batch.android.core.URLBuilder$CryptorMode EACH -> d
    int value -> a
    1:11:void <clinit>():322:332 -> <clinit>
    12:12:void <clinit>():317:317 -> <clinit>
    1:2:void <init>(java.lang.String,int,int):345:346 -> <init>
    1:1:int getValue():356:356 -> a
    2:3:com.batch.android.core.URLBuilder$CryptorMode fromValue(int):367:368 -> a
    1:1:com.batch.android.core.URLBuilder$CryptorMode valueOf(java.lang.String):317:317 -> valueOf
    1:1:com.batch.android.core.URLBuilder$CryptorMode[] values():317:317 -> values
com.batch.android.core.Webservice -> com.batch.android.g0.m0:
    java.lang.String WEBSERVICE_SUCCEED_EVENT -> i
    java.util.Map headers -> c
    java.lang.String TAG -> h
    int WEBSERVICE_ERROR_INVALID_CIPHER -> j
    com.batch.android.core.URLBuilder builder -> b
    boolean isDowngradedCipher -> f
    com.batch.android.module.OptOutModule optOutModule -> g
    com.batch.android.core.Webservice$Interceptor wsInterceptor -> k
    java.lang.String id -> a
    com.batch.android.core.Webservice$RequestType type -> e
    android.content.Context applicationContext -> d
    1:1:void <init>(android.content.Context,com.batch.android.core.Webservice$RequestType,java.lang.String,java.lang.String[]):119:119 -> <init>
    2:33:void <init>(android.content.Context,com.batch.android.core.Webservice$RequestType,java.lang.String,java.lang.String[]):106:137 -> <init>
    34:34:void <init>(android.content.Context,com.batch.android.core.Webservice$RequestType,java.lang.String,java.lang.String[]):129:129 -> <init>
    35:35:void <init>(android.content.Context,com.batch.android.core.Webservice$RequestType,java.lang.String,java.lang.String[]):125:125 -> <init>
    36:36:void <init>(android.content.Context,com.batch.android.core.Webservice$RequestType,java.lang.String,java.lang.String[]):121:121 -> <init>
    java.lang.String getSpecificConnectTimeoutKey() -> A
    java.lang.String getSpecificReadTimeoutKey() -> B
    java.lang.String getSpecificRetryCountKey() -> C
    1:35:com.batch.android.json.JSONObject getStandardResponseBodyIfValid():647:681 -> D
    36:57:com.batch.android.json.JSONObject getStandardResponseBodyIfValid():677:698 -> D
    58:66:com.batch.android.json.JSONObject getStandardResponseBodyIfValid():697:705 -> D
    67:75:com.batch.android.json.JSONObject getStandardResponseBodyIfValid():704:712 -> D
    76:76:com.batch.android.json.JSONObject getStandardResponseBodyIfValid():667:667 -> D
    77:77:com.batch.android.json.JSONObject getStandardResponseBodyIfValid():659:659 -> D
    78:78:com.batch.android.json.JSONObject getStandardResponseBodyIfValid():655:655 -> D
    79:79:com.batch.android.json.JSONObject getStandardResponseBodyIfValid():651:651 -> D
    1:11:com.batch.android.core.PatternURLSorter getURLSorter():271:281 -> E
    java.lang.String getURLSorterPatternParameterKey() -> F
    void setWsInterceptor(com.batch.android.core.Webservice$Interceptor) -> a
    1:8:void addGetParameter(java.lang.String,java.lang.String):176:183 -> a
    9:27:void sendRetrySignal(com.batch.android.core.Webservice$WebserviceError):591:609 -> a
    28:28:void sendRetrySignal(com.batch.android.core.Webservice$WebserviceError):606:606 -> a
    29:53:void sendRetrySignal(com.batch.android.core.Webservice$WebserviceError):596:620 -> a
    54:54:void onRetry(com.batch.android.core.WebserviceErrorCause):631:631 -> a
    55:67:com.batch.android.core.Webservice$WebserviceError$Reason getResponseErrorCause(int):757:769 -> a
    68:70:java.lang.String encode(java.lang.String):782:784 -> a
    71:78:byte[] buildPostParameters(com.batch.android.post.PostDataProvider):915:922 -> a
    79:106:void addRequestSignatures(java.net.HttpURLConnection,byte[]):939:966 -> a
    107:141:java.lang.String getSignatureBody(java.net.HttpURLConnection,java.util.List):971:1005 -> a
    142:146:java.lang.String formatDate(java.util.Date):1233:1237 -> a
    boolean isResponseValid(int) -> b
    1:14:void addDefaultHeaders():214:227 -> b
    void addDefaultParameters() -> c
    boolean shouldRetry(int) -> c
    1:3:void addHeaders():236:238 -> d
    1:7:void addParameters():156:162 -> e
    1:75:java.net.HttpURLConnection buildConnection():816:890 -> f
    76:78:java.net.HttpURLConnection buildConnection():888:890 -> f
    1:5:void buildParameters():900:904 -> g
    1:3:java.net.URL buildURL():795:797 -> h
    boolean canBypassOptOut() -> i
    1:4:void enabledDowngradedMode():930:933 -> j
    1:118:byte[] executeRequest():432:549 -> k
    119:144:byte[] executeRequest():518:543 -> k
    145:219:byte[] executeRequest():469:543 -> k
    220:220:byte[] executeRequest():463:463 -> k
    221:306:byte[] executeRequest():458:543 -> k
    307:343:byte[] executeRequest():526:562 -> k
    344:366:byte[] executeRequest():530:552 -> k
    1:5:com.batch.android.json.JSONObject getBasicJsonResponseBody():724:728 -> l
    1:9:int getConnectTimeout():1018:1026 -> m
    1:15:com.batch.android.core.Cryptor getCryptor():300:314 -> n
    java.lang.String getCryptorModeParameterKey() -> o
    java.lang.String getCryptorTypeParameterKey() -> p
    1:19:com.batch.android.core.URLBuilder$CryptorMode getGetCryptorMode():331:349 -> q
    java.util.Map getHeaders() -> r
    1:9:int getMaxRetryCount():1072:1080 -> s
    java.util.Map getParameters() -> t
    1:15:com.batch.android.core.WebserviceCryptor getPostCryptor():366:380 -> u
    java.lang.String getPostCryptorTypeParameterKey() -> v
    com.batch.android.post.PostDataProvider getPostDataProvider() -> w
    1:15:com.batch.android.core.WebserviceCryptor getReadCryptor():398:412 -> x
    java.lang.String getReadCryptorTypeParameterKey() -> y
    1:9:int getReadTimeout():1045:1053 -> z
com.batch.android.core.Webservice$1 -> com.batch.android.g0.m0$a:
    int[] $SwitchMap$com$batch$android$core$Webservice$WebserviceError$Reason -> a
    1:1:void <clinit>():594:594 -> <clinit>
com.batch.android.core.Webservice$Interceptor -> com.batch.android.g0.m0$b:
    java.net.HttpURLConnection onBuildHttpConnection(java.net.HttpURLConnection) -> a
    java.net.URL onBuildURL(java.net.URL) -> a
    void onError(java.lang.String,java.net.HttpURLConnection,com.batch.android.core.Webservice$WebserviceError) -> a
    void onPreConnect(java.lang.String,java.net.HttpURLConnection,byte[],long) -> a
    void onSuccess(java.lang.String,java.net.HttpURLConnection,byte[],long) -> b
com.batch.android.core.Webservice$RequestType -> com.batch.android.g0.m0$c:
    com.batch.android.core.Webservice$RequestType[] $VALUES -> c
    com.batch.android.core.Webservice$RequestType POST -> b
    com.batch.android.core.Webservice$RequestType GET -> a
    1:6:void <clinit>():1103:1108 -> <clinit>
    7:7:void <clinit>():1098:1098 -> <clinit>
    1:1:void <init>(java.lang.String,int):1098:1098 -> <init>
    1:1:com.batch.android.core.Webservice$RequestType valueOf(java.lang.String):1098:1098 -> valueOf
    1:1:com.batch.android.core.Webservice$RequestType[] values():1098:1098 -> values
com.batch.android.core.Webservice$WebserviceError -> com.batch.android.g0.m0$d:
    com.batch.android.core.Webservice$WebserviceError$Reason reason -> a
    1:7:void <init>(com.batch.android.core.Webservice$WebserviceError$Reason,java.lang.Throwable):1136:1142 -> <init>
    8:8:void <init>(com.batch.android.core.Webservice$WebserviceError$Reason,java.lang.Throwable):1139:1139 -> <init>
    9:15:void <init>(com.batch.android.core.Webservice$WebserviceError$Reason):1150:1156 -> <init>
    16:16:void <init>(com.batch.android.core.Webservice$WebserviceError$Reason):1153:1153 -> <init>
    1:1:com.batch.android.core.Webservice$WebserviceError$Reason access$000(com.batch.android.core.Webservice$WebserviceError):1116:1116 -> a
    2:2:com.batch.android.core.Webservice$WebserviceError$Reason getReason():1168:1168 -> a
com.batch.android.core.Webservice$WebserviceError$Reason -> com.batch.android.g0.m0$d$a:
    com.batch.android.core.Webservice$WebserviceError$Reason NETWORK_ERROR -> a
    com.batch.android.core.Webservice$WebserviceError$Reason INVALID_API_KEY -> d
    com.batch.android.core.Webservice$WebserviceError$Reason DEACTIVATED_API_KEY -> e
    com.batch.android.core.Webservice$WebserviceError$Reason SERVER_ERROR -> b
    com.batch.android.core.Webservice$WebserviceError$Reason NOT_FOUND_ERROR -> c
    com.batch.android.core.Webservice$WebserviceError$Reason SDK_OPTED_OUT -> h
    com.batch.android.core.Webservice$WebserviceError$Reason UNEXPECTED_ERROR -> f
    com.batch.android.core.Webservice$WebserviceError$Reason FORBIDDEN -> g
    com.batch.android.core.Webservice$WebserviceError$Reason[] $VALUES -> i
    1:36:void <clinit>():1183:1218 -> <clinit>
    37:37:void <clinit>():1178:1178 -> <clinit>
    1:1:void <init>(java.lang.String,int):1178:1178 -> <init>
    1:1:com.batch.android.core.Webservice$WebserviceError$Reason valueOf(java.lang.String):1178:1178 -> valueOf
    1:1:com.batch.android.core.Webservice$WebserviceError$Reason[] values():1178:1178 -> values
com.batch.android.core.WebserviceCryptor -> com.batch.android.g0.n0:
    com.batch.android.core.CryptorFactory$CryptorType cryptorType -> a
    java.lang.String PRIVATE_KEY_PART_V2 -> c
    java.lang.String PRIVATE_KEY_PART -> b
    java.lang.String VERSION -> d
    1:1:void <init>(int):44:44 -> <init>
    2:7:void <init>(com.batch.android.core.CryptorFactory$CryptorType):51:56 -> <init>
    8:8:void <init>(com.batch.android.core.CryptorFactory$CryptorType):53:53 -> <init>
    1:9:byte[] decryptData(byte[],com.batch.android.core.Webservice,java.net.HttpURLConnection):76:84 -> a
    10:10:byte[] decryptData(byte[],com.batch.android.core.Webservice,java.net.HttpURLConnection):82:82 -> a
    11:11:byte[] decryptData(byte[],com.batch.android.core.Webservice,java.net.HttpURLConnection):78:78 -> a
    12:12:byte[] decryptData(byte[],com.batch.android.core.Webservice,java.net.HttpURLConnection):73:73 -> a
    13:15:byte[] decryptDataForVersion(java.lang.String,java.lang.String,java.lang.String,com.batch.android.core.Webservice):102:104 -> a
    16:21:byte[] decryptDataForVersion(java.lang.String,java.lang.String,java.lang.String,com.batch.android.core.Webservice):103:108 -> a
    22:24:byte[] decryptDataForVersion(java.lang.String,java.lang.String,java.lang.String,com.batch.android.core.Webservice):107:109 -> a
    25:34:byte[] encryptData(byte[],com.batch.android.core.Webservice):125:134 -> a
    35:39:byte[] buildPrivateKey(com.batch.android.core.Webservice):150:154 -> a
    40:40:java.lang.String buildKey(java.lang.String,com.batch.android.core.Webservice):184:184 -> a
    41:49:java.lang.String randomChars(int):217:225 -> a
    1:5:byte[] buildPrivateKeyV2(com.batch.android.core.Webservice):168:172 -> b
    6:6:java.lang.String buildKeyV2(java.lang.String,com.batch.android.core.Webservice):196:196 -> b
    1:1:java.lang.String generatePublicKey(java.lang.String,com.batch.android.core.Webservice):206:206 -> c
com.batch.android.core.WebserviceErrorCause -> com.batch.android.g0.o0:
    com.batch.android.core.WebserviceErrorCause PARSING_ERROR -> a
    com.batch.android.core.WebserviceErrorCause[] $VALUES -> f
    com.batch.android.core.WebserviceErrorCause SSL_HANDSHAKE_FAILURE -> d
    com.batch.android.core.WebserviceErrorCause OTHER -> e
    com.batch.android.core.WebserviceErrorCause SERVER_ERROR -> b
    com.batch.android.core.WebserviceErrorCause NETWORK_TIMEOUT -> c
    1:21:void <clinit>():13:33 -> <clinit>
    22:22:void <clinit>():8:8 -> <clinit>
    1:1:void <init>(java.lang.String,int):8:8 -> <init>
    1:1:com.batch.android.core.WebserviceErrorCause valueOf(java.lang.String):8:8 -> valueOf
    1:1:com.batch.android.core.WebserviceErrorCause[] values():8:8 -> values
com.batch.android.core.WebserviceSignature -> com.batch.android.g0.p0:
    java.lang.String TAG -> a
    java.lang.String PRIVATE_SIGNATURE_KEY_PART -> b
    1:1:void <init>():11:11 -> <init>
    1:3:java.lang.String encryptSignatureData(java.lang.String):23:25 -> a
    4:9:java.lang.String encryptSignatureData(java.lang.String):24:29 -> a
    10:14:byte[] buildPrivateSignatureKey():44:48 -> a
    15:17:byte[] encryptHMAC(java.security.Key,byte[]):60:62 -> a
com.batch.android.date.BatchDate -> com.batch.android.h0.a:
    long timestamp -> a
    1:2:void <init>(long):10:11 -> <init>
    1:1:void setTime(long):16:16 -> a
    2:2:long getTime():21:21 -> a
    3:4:int compareTo(com.batch.android.date.BatchDate):44:45 -> a
    1:1:int compareTo(java.lang.Object):5:5 -> compareTo
    1:5:boolean equals(java.lang.Object):28:32 -> equals
    1:1:int hashCode():38:38 -> hashCode
com.batch.android.date.TimezoneAwareDate -> com.batch.android.h0.b:
    1:1:void <init>():9:9 -> <init>
    2:2:void <init>(long):14:14 -> <init>
    1:1:long getTime():20:20 -> a
com.batch.android.date.UTCDate -> com.batch.android.h0.c:
    1:1:void <init>():7:7 -> <init>
    2:2:void <init>(long):12:12 -> <init>
com.batch.android.debug.BatchDebugActivity -> com.batch.android.debug.BatchDebugActivity:
    int LOCAL_CAMPAIGN_DEBUG_FRAGMENT -> f
    int USER_DATA_DEBUG_FRAGMENT -> d
    int LOCAL_CAMPAIGNS_DEBUG_FRAGMENT -> e
    int MAIN_DEBUG_FRAGMENT -> b
    int IDENTIFIER_DEBUG_FRAGMENT -> c
    androidx.fragment.app.Fragment[] fragments -> a
    1:9:void <init>():24:32 -> <init>
    1:19:void switchFragment(int,boolean,java.lang.String):36:54 -> a
    20:20:void switchFragment(int,boolean,java.lang.String):53:53 -> a
    21:21:void switchFragment(int,boolean,java.lang.String):50:50 -> a
    22:22:void switchFragment(int,boolean,java.lang.String):49:49 -> a
    23:23:void switchFragment(int,boolean,java.lang.String):46:46 -> a
    24:24:void switchFragment(int,boolean,java.lang.String):43:43 -> a
    25:51:void switchFragment(int,boolean,java.lang.String):40:66 -> a
    52:52:void switchFragment(int,boolean):73:73 -> a
    53:53:void onMenuSelected(int):79:79 -> a
    54:54:void onCampaignMenuSelected(java.lang.String):85:85 -> a
    1:7:void onCreate(android.os.Bundle):91:97 -> onCreate
    1:2:void onDestroy():117:118 -> onDestroy
    1:2:void onStart():103:104 -> onStart
    1:2:void onStop():110:111 -> onStop
com.batch.android.debug.OnMenuSelectedListener -> com.batch.android.debug.a:
    void onCampaignMenuSelected(java.lang.String) -> a
    void onMenuSelected(int) -> a
com.batch.android.debug.adapter.CollectionAdapter -> com.batch.android.debug.b.a:
    android.content.Context context -> b
    android.view.LayoutInflater inflater -> a
    java.util.List tagCollections -> c
    1:4:void <init>(android.content.Context):30:33 -> <init>
    1:1:com.batch.android.debug.adapter.CollectionAdapter$TagCollection getItem(int):45:45 -> a
    2:13:void add(java.lang.String,java.util.Set):79:90 -> a
    14:15:void clear():95:96 -> a
    1:1:int getCount():39:39 -> getCount
    1:1:java.lang.Object getItem(int):21:21 -> getItem
    1:12:android.view.View getView(int,android.view.View,android.view.ViewGroup):62:73 -> getView
com.batch.android.debug.adapter.CollectionAdapter$TagCollection -> com.batch.android.debug.b.a$a:
    java.lang.String name -> a
    com.batch.android.debug.adapter.CollectionAdapter this$0 -> c
    android.widget.ArrayAdapter tagAdapter -> b
    1:4:void <init>(com.batch.android.debug.adapter.CollectionAdapter,java.lang.String,android.widget.ArrayAdapter):105:108 -> <init>
    1:1:java.lang.String getName():113:113 -> a
    1:1:android.widget.ArrayAdapter getTagAdapter():118:118 -> b
com.batch.android.debug.fragment.IdentifierDebugFragment -> com.batch.android.debug.c.a:
    android.widget.TextView sdkVersion -> a
    android.widget.TextView advertisingId -> c
    android.widget.TextView installId -> b
    android.widget.TextView pushToken -> d
    1:1:void <init>():20:20 -> <init>
    1:5:java.lang.String getShareString():35:39 -> a
    6:6:java.lang.String getShareString():37:37 -> a
    7:18:java.lang.String getShareString():36:47 -> a
    19:19:java.lang.String getShareString():45:45 -> a
    20:29:java.lang.String getShareString():44:53 -> a
    30:30:java.lang.String getShareString():51:51 -> a
    31:42:java.lang.String getShareString():50:61 -> a
    43:43:java.lang.String getShareString():60:60 -> a
    44:53:java.lang.String getShareString():59:68 -> a
    54:54:java.lang.String getShareString():66:66 -> a
    55:55:java.lang.String getShareString():65:65 -> a
    1:1:com.batch.android.debug.fragment.IdentifierDebugFragment newInstance():29:29 -> b
    1:17:void onActivityCreated(android.os.Bundle):96:112 -> onActivityCreated
    1:5:void onClick(android.view.View):119:123 -> onClick
    6:10:void onClick(android.view.View):122:126 -> onClick
    11:11:void onClick(android.view.View):125:125 -> onClick
    1:9:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle):81:89 -> onCreateView
com.batch.android.debug.fragment.LocalCampaignDebugFragment -> com.batch.android.debug.c.b:
    android.widget.TextView token -> a
    java.lang.String CAMPAIGN_TOKEN_KEY -> h
    android.widget.TextView endDate -> c
    android.widget.TextView startDate -> b
    android.widget.TextView gracePeriod -> e
    android.widget.TextView capping -> d
    android.widget.TextView trigger -> f
    com.batch.android.localcampaigns.CampaignManager campaignManager -> g
    1:1:void <init>():24:24 -> <init>
    1:6:com.batch.android.debug.fragment.LocalCampaignDebugFragment newInstance(java.lang.String,com.batch.android.localcampaigns.CampaignManager):40:45 -> a
    7:7:void setCampaignManager(com.batch.android.localcampaigns.CampaignManager):51:51 -> a
    8:11:com.batch.android.localcampaigns.model.LocalCampaign getCurrentCampaign():57:60 -> a
    12:14:java.lang.String formatDate(com.batch.android.date.BatchDate):70:72 -> a
    15:40:void displayCampaign(com.batch.android.localcampaigns.model.LocalCampaign):164:189 -> a
    41:50:void displayCampaign(com.batch.android.localcampaigns.model.LocalCampaign):188:197 -> a
    1:4:java.lang.String getShareString(com.batch.android.localcampaigns.model.LocalCampaign):79:82 -> b
    5:5:java.lang.String getShareString(com.batch.android.localcampaigns.model.LocalCampaign):81:81 -> b
    6:15:java.lang.String getShareString(com.batch.android.localcampaigns.model.LocalCampaign):80:89 -> b
    16:16:java.lang.String getShareString(com.batch.android.localcampaigns.model.LocalCampaign):87:87 -> b
    17:28:java.lang.String getShareString(com.batch.android.localcampaigns.model.LocalCampaign):86:97 -> b
    29:29:java.lang.String getShareString(com.batch.android.localcampaigns.model.LocalCampaign):95:95 -> b
    30:39:java.lang.String getShareString(com.batch.android.localcampaigns.model.LocalCampaign):94:103 -> b
    40:40:java.lang.String getShareString(com.batch.android.localcampaigns.model.LocalCampaign):101:101 -> b
    41:52:java.lang.String getShareString(com.batch.android.localcampaigns.model.LocalCampaign):100:111 -> b
    53:53:java.lang.String getShareString(com.batch.android.localcampaigns.model.LocalCampaign):109:109 -> b
    54:63:java.lang.String getShareString(com.batch.android.localcampaigns.model.LocalCampaign):108:117 -> b
    64:64:java.lang.String getShareString(com.batch.android.localcampaigns.model.LocalCampaign):115:115 -> b
    65:75:java.lang.String getShareString(com.batch.android.localcampaigns.model.LocalCampaign):114:124 -> b
    76:76:java.lang.String getShareString(com.batch.android.localcampaigns.model.LocalCampaign):123:123 -> b
    77:86:java.lang.String getShareString(com.batch.android.localcampaigns.model.LocalCampaign):122:131 -> b
    87:87:java.lang.String getShareString(com.batch.android.localcampaigns.model.LocalCampaign):129:129 -> b
    88:98:java.lang.String getShareString(com.batch.android.localcampaigns.model.LocalCampaign):128:138 -> b
    99:99:java.lang.String getShareString(com.batch.android.localcampaigns.model.LocalCampaign):136:136 -> b
    100:115:java.lang.String getShareString(com.batch.android.localcampaigns.model.LocalCampaign):135:150 -> b
    116:116:java.lang.String getShareString(com.batch.android.localcampaigns.model.LocalCampaign):148:148 -> b
    117:126:java.lang.String getShareString(com.batch.android.localcampaigns.model.LocalCampaign):147:156 -> b
    127:127:java.lang.String getShareString(com.batch.android.localcampaigns.model.LocalCampaign):154:154 -> b
    128:128:java.lang.String getShareString(com.batch.android.localcampaigns.model.LocalCampaign):153:153 -> b
    1:5:void onActivityCreated(android.os.Bundle):222:226 -> onActivityCreated
    1:7:void onClick(android.view.View):233:239 -> onClick
    8:12:void onClick(android.view.View):238:242 -> onClick
    13:13:void onClick(android.view.View):241:241 -> onClick
    1:10:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle):206:215 -> onCreateView
com.batch.android.debug.fragment.LocalCampaignsDebugFragment -> com.batch.android.debug.c.c:
    java.lang.String TAG -> g
    com.batch.android.webservice.listener.LocalCampaignsWebserviceListener webserviceListener -> f
    android.widget.TextView title -> a
    com.batch.android.debug.OnMenuSelectedListener listener -> d
    android.widget.ListView campaignList -> b
    android.widget.ArrayAdapter campaignAdapter -> c
    com.batch.android.localcampaigns.CampaignManager campaignManager -> e
    1:13:void <init>():35:47 -> <init>
    1:1:void access$000(com.batch.android.debug.fragment.LocalCampaignsDebugFragment):35:35 -> a
    2:3:com.batch.android.debug.fragment.LocalCampaignsDebugFragment newInstance(com.batch.android.localcampaigns.CampaignManager):76:77 -> a
    4:23:void loadLocalCampaigns():103:122 -> a
    24:24:void loadLocalCampaigns():121:121 -> a
    25:25:void lambda$onCreateView$0(android.widget.AdapterView,android.view.View,int,long):152:152 -> a
    26:26:void lambda$onCreateView$1(android.view.View):157:157 -> a
    1:1:void setCampaignManager(com.batch.android.localcampaigns.CampaignManager):83:83 -> b
    2:8:void refreshLocalCampaigns():88:94 -> b
    9:13:void refreshLocalCampaigns():93:97 -> b
    1:2:void onActivityCreated(android.os.Bundle):165:166 -> onActivityCreated
    1:5:void onAttach(android.content.Context):128:132 -> onAttach
    1:15:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle):142:156 -> onCreateView
com.batch.android.debug.fragment.LocalCampaignsDebugFragment$1 -> com.batch.android.debug.c.c$a:
    com.batch.android.debug.fragment.LocalCampaignsDebugFragment this$0 -> b
    com.batch.android.webservice.listener.LocalCampaignsWebserviceListener sdkImpl -> a
    1:3:void <init>(com.batch.android.debug.fragment.LocalCampaignsDebugFragment):49:51 -> <init>
    1:4:void onSuccess(java.util.List):56:59 -> a
    5:8:void onError(com.batch.android.FailReason):66:69 -> a
    9:9:void lambda$onError$1():69:69 -> a
    1:1:void lambda$onSuccess$0():59:59 -> b
com.batch.android.debug.fragment.MainDebugFragment -> com.batch.android.debug.c.d:
    com.batch.android.debug.OnMenuSelectedListener listener -> a
    1:1:void <init>():17:17 -> <init>
    1:1:com.batch.android.debug.fragment.MainDebugFragment newInstance():23:23 -> a
    2:2:void lambda$onCreateView$0(android.view.View):47:47 -> a
    1:1:void lambda$onCreateView$1(android.view.View):52:52 -> b
    1:1:void lambda$onCreateView$2(android.view.View):57:57 -> c
    1:5:void onAttach(android.content.Context):29:33 -> onAttach
    1:14:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle):43:56 -> onCreateView
com.batch.android.debug.fragment.UserDataDebugFragment -> com.batch.android.debug.c.e:
    android.widget.TextView customUserId -> a
    com.batch.android.debug.adapter.CollectionAdapter collectionAdapter -> e
    android.widget.ListView attributeList -> b
    android.widget.ArrayAdapter attributeAdapter -> d
    android.widget.ListView collectionList -> c
    1:1:void <init>():28:28 -> <init>
    1:1:android.widget.ArrayAdapter access$000(com.batch.android.debug.fragment.UserDataDebugFragment):28:28 -> a
    2:2:java.lang.String access$100(com.batch.android.debug.fragment.UserDataDebugFragment,com.batch.android.BatchUserAttribute):28:28 -> a
    3:8:java.lang.String formatAttribute(com.batch.android.BatchUserAttribute):44:49 -> a
    9:20:void loadAttributes():54:65 -> a
    1:1:com.batch.android.debug.adapter.CollectionAdapter access$200(com.batch.android.debug.fragment.UserDataDebugFragment):28:28 -> b
    2:10:void loadCollections():89:97 -> b
    1:1:com.batch.android.debug.fragment.UserDataDebugFragment newInstance():39:39 -> c
    1:11:void onActivityCreated(android.os.Bundle):134:144 -> onActivityCreated
    1:5:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle):123:127 -> onCreateView
com.batch.android.debug.fragment.UserDataDebugFragment$1 -> com.batch.android.debug.c.e$a:
    com.batch.android.debug.fragment.UserDataDebugFragment this$0 -> a
    1:1:void <init>(com.batch.android.debug.fragment.UserDataDebugFragment):66:66 -> <init>
    1:2:void onError():80:81 -> onError
    1:5:void onSuccess(java.util.Map):70:74 -> onSuccess
com.batch.android.debug.fragment.UserDataDebugFragment$2 -> com.batch.android.debug.c.e$b:
    com.batch.android.debug.fragment.UserDataDebugFragment this$0 -> a
    1:1:void <init>(com.batch.android.debug.fragment.UserDataDebugFragment):98:98 -> <init>
    1:2:void onError():111:112 -> onError
    1:4:void onSuccess(java.util.Map):102:105 -> onSuccess
com.batch.android.debug.view.NestedListView -> com.batch.android.debug.view.NestedListView:
    android.view.ViewGroup$LayoutParams layoutParams -> b
    int MAXIMUM_LIST_ITEMS_VIEWABLE -> c
    int listViewTouchAction -> a
    1:6:void <init>(android.content.Context,android.util.AttributeSet):21:26 -> <init>
    1:30:void onMeasure(int,int):48:77 -> onMeasure
    1:3:void onScroll(android.widget.AbsListView,int,int,int):33:35 -> onScroll
    1:3:boolean onTouch(android.view.View,android.view.MotionEvent):83:85 -> onTouch
com.batch.android.di.DI -> com.batch.android.i0.a:
    java.util.Map singletonInstances -> a
    com.batch.android.di.DI instance -> c
    java.lang.String TAG -> b
    1:2:void <init>():33:34 -> <init>
    1:1:void clear():39:39 -> a
    2:3:java.lang.Object getSingletonInstance(java.lang.Class):52:53 -> a
    4:4:void addSingletonInstance(java.lang.Class,java.lang.Object):68:68 -> a
    1:4:com.batch.android.di.DI getInstance():17:20 -> b
    1:2:void reset():25:26 -> c
com.batch.android.di.providers.ActionModuleProvider -> com.batch.android.i0.b.a:
    1:1:void <init>():11:11 -> <init>
    1:6:com.batch.android.module.ActionModule get():14:19 -> a
    1:1:com.batch.android.module.ActionModule getSingleton():25:25 -> b
com.batch.android.di.providers.BatchModuleMasterProvider -> com.batch.android.i0.b.b:
    1:1:void <init>():11:11 -> <init>
    1:6:com.batch.android.module.BatchModuleMaster get():14:19 -> a
    1:1:com.batch.android.module.BatchModuleMaster getSingleton():25:25 -> b
com.batch.android.di.providers.BatchNotificationChannelsManagerProvider -> com.batch.android.i0.b.c:
    1:1:void <init>():11:11 -> <init>
    1:6:com.batch.android.BatchNotificationChannelsManager get():14:19 -> a
    1:1:com.batch.android.BatchNotificationChannelsManager getSingleton():25:25 -> b
com.batch.android.di.providers.CampaignManagerProvider -> com.batch.android.i0.b.d:
    1:1:void <init>():11:11 -> <init>
    1:6:com.batch.android.localcampaigns.CampaignManager get():14:19 -> a
    1:1:com.batch.android.localcampaigns.CampaignManager getSingleton():25:25 -> b
com.batch.android.di.providers.DeviceProvider -> com.batch.android.i0.b.e:
    1:1:void <init>():11:11 -> <init>
    1:6:com.batch.android.Device get():14:19 -> a
    1:1:com.batch.android.Device getSingleton():25:25 -> b
com.batch.android.di.providers.DisplayReceiptModuleProvider -> com.batch.android.i0.b.f:
    1:1:void <init>():11:11 -> <init>
    1:6:com.batch.android.module.DisplayReceiptModule get():14:19 -> a
    1:1:com.batch.android.module.DisplayReceiptModule getSingleton():25:25 -> b
com.batch.android.di.providers.EmbeddedBannerContainerProvider -> com.batch.android.i0.b.g:
    1:1:void <init>():13:13 -> <init>
    1:1:com.batch.android.messaging.view.formats.EmbeddedBannerContainer get(android.view.View,com.batch.android.BatchMessage,com.batch.android.messaging.model.BannerMessage,com.batch.android.MessagingAnalyticsDelegate,boolean):18:18 -> a
com.batch.android.di.providers.EventDispatcherModuleProvider -> com.batch.android.i0.b.h:
    1:1:void <init>():11:11 -> <init>
    1:6:com.batch.android.module.EventDispatcherModule get():14:19 -> a
    1:1:com.batch.android.module.EventDispatcherModule getSingleton():25:25 -> b
com.batch.android.di.providers.InboxDatasourceProvider -> com.batch.android.i0.b.i:
    1:1:void <init>():12:12 -> <init>
    1:6:com.batch.android.inbox.InboxDatasource get(android.content.Context):15:20 -> a
    7:7:com.batch.android.inbox.InboxDatasource getSingleton():26:26 -> a
com.batch.android.di.providers.InboxFetcherInternalProvider -> com.batch.android.i0.b.j:
    1:1:void <init>():11:11 -> <init>
    1:1:com.batch.android.inbox.InboxFetcherInternal get(android.content.Context,java.lang.String):14:14 -> a
    2:2:com.batch.android.inbox.InboxFetcherInternal get(android.content.Context,java.lang.String,boolean):20:20 -> a
    3:3:com.batch.android.inbox.InboxFetcherInternal get(android.content.Context,java.lang.String,java.lang.String):26:26 -> a
    4:4:com.batch.android.inbox.InboxFetcherInternal get(android.content.Context,java.lang.String,java.lang.String,boolean):32:32 -> a
com.batch.android.di.providers.KVUserPreferencesStorageProvider -> com.batch.android.i0.b.k:
    1:1:void <init>():12:12 -> <init>
    1:6:com.batch.android.core.KVUserPreferencesStorage get(android.content.Context):15:20 -> a
    7:7:com.batch.android.core.KVUserPreferencesStorage getSingleton():26:26 -> a
com.batch.android.di.providers.LandingOutputProvider -> com.batch.android.i0.b.l:
    1:1:void <init>():10:10 -> <init>
    1:1:com.batch.android.localcampaigns.output.LandingOutput get(com.batch.android.json.JSONObject):13:13 -> a
com.batch.android.di.providers.LocalBroadcastManagerProvider -> com.batch.android.i0.b.m:
    1:1:void <init>():12:12 -> <init>
    1:6:com.batch.android.compat.LocalBroadcastManager get(android.content.Context):15:20 -> a
    7:7:com.batch.android.compat.LocalBroadcastManager getSingleton():26:26 -> a
com.batch.android.di.providers.LocalCampaignsModuleProvider -> com.batch.android.i0.b.n:
    1:1:void <init>():11:11 -> <init>
    1:6:com.batch.android.module.LocalCampaignsModule get():14:19 -> a
    1:1:com.batch.android.module.LocalCampaignsModule getSingleton():25:25 -> b
com.batch.android.di.providers.LocalCampaignsWebserviceListenerImplProvider -> com.batch.android.i0.b.o:
    1:1:void <init>():9:9 -> <init>
    1:1:com.batch.android.webservice.listener.impl.LocalCampaignsWebserviceListenerImpl get():12:12 -> a
com.batch.android.di.providers.MessagingAnalyticsDelegateProvider -> com.batch.android.i0.b.p:
    1:1:void <init>():11:11 -> <init>
    1:1:com.batch.android.MessagingAnalyticsDelegate get(com.batch.android.messaging.model.Message,com.batch.android.BatchMessage):14:14 -> a
com.batch.android.di.providers.MessagingModuleProvider -> com.batch.android.i0.b.q:
    1:1:void <init>():11:11 -> <init>
    1:6:com.batch.android.module.MessagingModule get():14:19 -> a
    1:1:com.batch.android.module.MessagingModule getSingleton():25:25 -> b
com.batch.android.di.providers.ObjectUserPreferencesStorageProvider -> com.batch.android.i0.b.r:
    1:1:void <init>():12:12 -> <init>
    1:6:com.batch.android.core.ObjectUserPreferencesStorage get(android.content.Context):15:20 -> a
    7:7:com.batch.android.core.ObjectUserPreferencesStorage getSingleton():26:26 -> a
com.batch.android.di.providers.OptOutModuleProvider -> com.batch.android.i0.b.s:
    1:1:void <init>():11:11 -> <init>
    1:6:com.batch.android.module.OptOutModule get():14:19 -> a
    1:1:com.batch.android.module.OptOutModule getSingleton():25:25 -> b
com.batch.android.di.providers.ParametersProvider -> com.batch.android.i0.b.t:
    1:1:void <init>():12:12 -> <init>
    1:6:com.batch.android.core.Parameters get(android.content.Context):15:20 -> a
    7:7:com.batch.android.core.Parameters getSingleton():26:26 -> a
com.batch.android.di.providers.PushModuleProvider -> com.batch.android.i0.b.u:
    1:1:void <init>():11:11 -> <init>
    1:6:com.batch.android.module.PushModule get():14:19 -> a
    1:1:com.batch.android.module.PushModule getSingleton():25:25 -> b
com.batch.android.di.providers.RuntimeManagerProvider -> com.batch.android.i0.b.v:
    1:1:void <init>():11:11 -> <init>
    1:6:com.batch.android.runtime.RuntimeManager get():14:19 -> a
    1:1:com.batch.android.runtime.RuntimeManager getSingleton():25:25 -> b
com.batch.android.di.providers.SQLUserDatasourceProvider -> com.batch.android.i0.b.w:
    1:1:void <init>():12:12 -> <init>
    1:6:com.batch.android.user.SQLUserDatasource get(android.content.Context):15:20 -> a
    7:7:com.batch.android.user.SQLUserDatasource getSingleton():26:26 -> a
com.batch.android.di.providers.SecureDateProviderProvider -> com.batch.android.i0.b.x:
    1:1:void <init>():11:11 -> <init>
    1:6:com.batch.android.core.SecureDateProvider get():14:19 -> a
    1:1:com.batch.android.core.SecureDateProvider getSingleton():25:25 -> b
com.batch.android.di.providers.TaskExecutorProvider -> com.batch.android.i0.b.y:
    1:1:void <init>():12:12 -> <init>
    1:6:com.batch.android.core.TaskExecutor get(android.content.Context):15:20 -> a
    7:7:com.batch.android.core.TaskExecutor getSingleton():26:26 -> a
com.batch.android.di.providers.TrackerModuleProvider -> com.batch.android.i0.b.z:
    1:1:void <init>():11:11 -> <init>
    1:6:com.batch.android.module.TrackerModule get():14:19 -> a
    1:1:com.batch.android.module.TrackerModule getSingleton():25:25 -> b
com.batch.android.di.providers.UserModuleProvider -> com.batch.android.i0.b.a0:
    1:1:void <init>():11:11 -> <init>
    1:6:com.batch.android.module.UserModule get():14:19 -> a
    1:1:com.batch.android.module.UserModule getSingleton():25:25 -> b
com.batch.android.di.providers.WebserviceMetricsProvider -> com.batch.android.i0.b.b0:
    1:1:void <init>():11:11 -> <init>
    1:6:com.batch.android.WebserviceMetrics get():14:19 -> a
    1:1:com.batch.android.WebserviceMetrics getSingleton():25:25 -> b
com.batch.android.displayreceipt.CacheHelper -> com.batch.android.j0.a:
    long MAX_AGE_FROM_CACHE -> e
    java.lang.String TAG -> a
    int MAX_READ_RECEIPT_FROM_CACHE -> d
    java.lang.String CACHE_FILE_FORMAT -> c
    java.lang.String CACHE_DIR -> b
    1:1:void <init>():24:24 -> <init>
    1:4:java.lang.String generateNewFilename(long):53:56 -> a
    5:5:java.lang.String generateNewFilename(long):54:54 -> a
    6:10:java.lang.Long getTimestampFromFilename(java.lang.String):63:67 -> a
    11:17:java.io.File write(android.content.Context,long,byte[]):95:101 -> a
    18:26:boolean write(java.io.File,byte[]):110:110 -> a
    28:29:boolean write(java.io.File,byte[]):112:113 -> a
    30:42:boolean deleteDirectory(java.io.File):129:141 -> a
    43:44:boolean deleteAll(android.content.Context):152:153 -> a
    45:58:java.util.List getCachedFiles(android.content.Context,boolean):167:180 -> a
    59:81:java.util.List filterCachedFiles(java.io.File[]):189:211 -> a
    82:82:int lambda$filterCachedFiles$0(java.util.Map$Entry,java.util.Map$Entry):207:207 -> a
    1:3:java.io.File getCacheDir(android.content.Context):42:44 -> b
    4:9:byte[] read(java.io.File):78:83 -> b
    10:13:byte[] read(java.io.File):81:84 -> b
com.batch.android.displayreceipt.DisplayReceipt -> com.batch.android.j0.b:
    java.lang.String TAG -> f
    java.util.Map od -> d
    long timestamp -> a
    java.util.Map ed -> e
    boolean replay -> b
    int sendAttempt -> c
    1:6:void <init>(long,boolean,int,java.util.Map,java.util.Map):28:33 -> <init>
    1:1:void setReplay(boolean):38:38 -> a
    2:2:java.util.Map getEd():53:53 -> a
    3:4:byte[] packAndWrite(java.io.File):73:74 -> a
    5:5:void writeTo(com.batch.android.msgpack.core.MessageBufferPacker):82:82 -> a
    6:20:void pack(com.batch.android.msgpack.core.MessageBufferPacker,long,boolean,int,java.util.Map,java.util.Map):92:106 -> a
    21:26:byte[] pack(long,boolean,int,java.util.Map,java.util.Map):115:115 -> a
    30:31:byte[] pack(long,boolean,int,java.util.Map,java.util.Map):119:120 -> a
    32:63:com.batch.android.displayreceipt.DisplayReceipt unpack(byte[]):128:128 -> a
    93:94:com.batch.android.displayreceipt.DisplayReceipt unpack(byte[]):158:159 -> a
    1:1:java.util.Map getOd():48:48 -> b
    1:1:int getSendAttempt():68:68 -> c
    1:1:long getTimestamp():58:58 -> d
    1:1:void incrementSendAttempt():43:43 -> e
    1:1:boolean isReplay():63:63 -> f
com.batch.android.event.CollapsibleEvent -> com.batch.android.k0.a:
    1:1:void <init>(android.content.Context,long,java.lang.String,com.batch.android.json.JSONObject):21:21 -> <init>
    2:2:void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.TimeZone,java.lang.String,com.batch.android.event.Event$State,java.lang.Long,java.util.Date,java.lang.String):34:34 -> <init>
com.batch.android.event.Event -> com.batch.android.k0.b:
    java.util.Date secureDate -> f
    java.lang.String parameters -> g
    java.lang.String session -> i
    java.util.Date date -> c
    long servertime -> e
    com.batch.android.event.Event$State state -> h
    java.lang.String id -> a
    java.util.TimeZone timezone -> d
    java.lang.String name -> b
    1:32:void <init>(android.content.Context,long,java.lang.String,com.batch.android.json.JSONObject):77:108 -> <init>
    33:38:void <init>(android.content.Context,long,java.lang.String,com.batch.android.json.JSONObject):106:111 -> <init>
    39:39:void <init>(android.content.Context,long,java.lang.String,com.batch.android.json.JSONObject):79:79 -> <init>
    40:49:void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.TimeZone,java.lang.String,com.batch.android.event.Event$State,java.lang.Long,java.util.Date,java.lang.String):134:143 -> <init>
    1:1:java.util.Date getDate():160:160 -> a
    1:1:java.lang.String getId():150:150 -> b
    1:1:java.lang.String getName():155:155 -> c
    1:1:java.lang.String getParameters():175:175 -> d
    1:1:java.util.Date getSecureDate():165:165 -> e
    1:1:long getServerTimestamp():185:185 -> f
    1:1:java.lang.String getSessionID():195:195 -> g
    1:1:com.batch.android.event.Event$State getState():180:180 -> h
    1:1:java.util.TimeZone getTimezone():170:170 -> i
    1:1:boolean isOld():190:190 -> j
com.batch.android.event.Event$State -> com.batch.android.k0.b$a:
    com.batch.android.event.Event$State OLD -> d
    com.batch.android.event.Event$State[] $VALUES -> e
    com.batch.android.event.Event$State SENDING -> c
    com.batch.android.event.Event$State NEW -> b
    int value -> a
    1:11:void <clinit>():210:220 -> <clinit>
    12:12:void <clinit>():205:205 -> <clinit>
    1:2:void <init>(java.lang.String,int,int):227:228 -> <init>
    1:1:int getValue():233:233 -> a
    2:3:com.batch.android.event.Event$State fromValue(int):240:241 -> a
    1:1:com.batch.android.event.Event$State valueOf(java.lang.String):205:205 -> valueOf
    1:1:com.batch.android.event.Event$State[] values():205:205 -> values
com.batch.android.event.EventSender -> com.batch.android.k0.c:
    java.util.concurrent.ExecutorService sendExecutor -> f
    java.lang.String TAG -> h
    java.util.concurrent.atomic.AtomicBoolean hasNewEvents -> e
    java.util.concurrent.atomic.AtomicBoolean isSending -> d
    com.batch.android.event.RetryTimer retryTimer -> g
    com.batch.android.event.EventSender$EventSenderListener listener -> c
    com.batch.android.runtime.RuntimeManager runtimeManager -> b
    android.content.BroadcastReceiver receiver -> a
    1:1:void <init>(com.batch.android.runtime.RuntimeManager,com.batch.android.event.EventSender$EventSenderListener):70:70 -> <init>
    2:60:void <init>(com.batch.android.runtime.RuntimeManager,com.batch.android.event.EventSender$EventSenderListener):49:107 -> <init>
    61:61:void <init>(com.batch.android.runtime.RuntimeManager,com.batch.android.event.EventSender$EventSenderListener):76:76 -> <init>
    62:62:void <init>(com.batch.android.runtime.RuntimeManager,com.batch.android.event.EventSender$EventSenderListener):72:72 -> <init>
    com.batch.android.core.TaskRunnable getWebserviceTask(java.util.List,com.batch.android.webservice.listener.TrackerWebserviceListener) -> a
    1:1:void access$000(com.batch.android.event.EventSender):30:30 -> a
    2:11:void send(boolean):129:138 -> a
    12:12:void retry():246:246 -> a
    java.lang.String getWebserviceFinishedEvent() -> b
    1:1:void access$100(com.batch.android.event.EventSender):30:30 -> b
    1:1:com.batch.android.event.RetryTimer access$200(com.batch.android.event.EventSender):30:30 -> c
    2:3:void hasNewEvents():215:216 -> c
    1:1:java.util.concurrent.atomic.AtomicBoolean access$300(com.batch.android.event.EventSender):30:30 -> d
    2:60:void lambda$null$0():145:203 -> d
    1:1:com.batch.android.event.EventSender$EventSenderListener access$400(com.batch.android.event.EventSender):30:30 -> e
    2:3:void lambda$send$1():140:141 -> e
    1:1:java.util.concurrent.atomic.AtomicBoolean access$500(com.batch.android.event.EventSender):30:30 -> f
    2:5:void onConnectionReady():234:237 -> f
    1:1:void send():119:119 -> g
    1:2:void webserviceFinished():224:225 -> h
com.batch.android.event.EventSender$1 -> com.batch.android.k0.c$a:
    com.batch.android.event.EventSender this$0 -> a
    1:1:void <init>(com.batch.android.event.EventSender):84:84 -> <init>
    1:9:void onReceive(android.content.Context,android.content.Intent):88:96 -> onReceive
com.batch.android.event.EventSender$2 -> com.batch.android.k0.c$b:
    com.batch.android.event.EventSender this$0 -> a
    1:1:void <init>(com.batch.android.event.EventSender):157:157 -> <init>
    1:4:void onSuccess(java.util.List):162:165 -> a
    5:8:void onFailure(com.batch.android.FailReason,java.util.List):177:180 -> a
    9:11:void lambda$onFailure$1(java.util.List,com.batch.android.runtime.State):181:183 -> a
    12:15:void onFinish():192:195 -> a
    16:19:void lambda$onFinish$2(com.batch.android.runtime.State):196:199 -> a
    20:20:void lambda$onFinish$2(com.batch.android.runtime.State):198:198 -> a
    1:2:void lambda$onSuccess$0(java.util.List,com.batch.android.runtime.State):166:167 -> b
com.batch.android.event.EventSender$EventSenderListener -> com.batch.android.k0.c$c:
    java.util.List getEventsToSend() -> a
    void onEventsSendFailure(java.util.List) -> a
    void onEventsSendSuccess(java.util.List) -> b
com.batch.android.event.InternalEvents -> com.batch.android.k0.d:
    java.lang.String INSTALL_DATA_CHANGED -> g
    java.lang.String PROFILE_CHANGED -> f
    java.lang.String LOCATION_CHANGED -> i
    java.lang.String INSTALL_DATA_CHANGED_TRACK_FAILURE -> h
    java.lang.String INBOX_MARK_AS_DELETED -> k
    java.lang.String INBOX_MARK_AS_READ -> j
    java.lang.String OPT_IN -> m
    java.lang.String INBOX_MARK_ALL_AS_READ -> l
    java.lang.String OPT_OUT_AND_WIPE_DATA -> o
    java.lang.String OPT_OUT -> n
    java.lang.String START -> a
    java.lang.String OPEN_FROM_PUSH -> c
    java.lang.String STOP -> b
    java.lang.String LOCAL_CAMPAIGN_VIEWED -> e
    java.lang.String MESSAGING -> d
    1:1:void <init>():8:8 -> <init>
com.batch.android.event.RetryTimer -> com.batch.android.k0.e:
    java.util.TimerTask retryTask -> e
    com.batch.android.event.RetryTimer$RetryTimerListener listener -> f
    int maxRetryDelay -> b
    int nextRetryDelay -> c
    java.util.Timer retryTimer -> d
    com.batch.android.FailReason reason -> g
    int initialRetryDelay -> a
    1:1:void <init>(android.content.Context,com.batch.android.event.RetryTimer$RetryTimerListener):55:55 -> <init>
    2:37:void <init>(android.content.Context,com.batch.android.event.RetryTimer$RetryTimerListener):34:69 -> <init>
    38:38:void <init>(android.content.Context,com.batch.android.event.RetryTimer$RetryTimerListener):61:61 -> <init>
    39:39:void <init>(android.content.Context,com.batch.android.event.RetryTimer$RetryTimerListener):57:57 -> <init>
    1:1:com.batch.android.event.RetryTimer$RetryTimerListener access$000(com.batch.android.event.RetryTimer):17:17 -> a
    2:18:void onSendFail(com.batch.android.FailReason):92:108 -> a
    19:26:void incrementDelay():141:148 -> a
    1:1:boolean isWaiting():82:82 -> b
    1:3:void onInternetRetrieved():130:132 -> c
    1:7:void onSendSuccess():116:122 -> d
com.batch.android.event.RetryTimer$1 -> com.batch.android.k0.e$a:
    com.batch.android.event.RetryTimer this$0 -> a
    1:1:void <init>(com.batch.android.event.RetryTimer):100:100 -> <init>
    1:1:void run():104:104 -> run
com.batch.android.event.RetryTimer$RetryTimerListener -> com.batch.android.k0.e$b:
    void retry() -> a
com.batch.android.eventdispatcher.DispatcherDiscoveryService -> com.batch.android.eventdispatcher.DispatcherDiscoveryService:
    1:1:void <init>():12:12 -> <init>
com.batch.android.eventdispatcher.MessagingEventPayload -> com.batch.android.eventdispatcher.a:
    com.batch.android.messaging.model.Action action -> d
    com.batch.android.json.JSONObject payload -> b
    com.batch.android.json.JSONObject customPayload -> c
    com.batch.android.BatchMessage message -> a
    1:1:void <init>(com.batch.android.BatchMessage,com.batch.android.json.JSONObject,com.batch.android.json.JSONObject):27:27 -> <init>
    2:6:void <init>(com.batch.android.BatchMessage,com.batch.android.json.JSONObject,com.batch.android.json.JSONObject,com.batch.android.messaging.model.Action):34:38 -> <init>
    1:9:java.lang.String getCustomValue(java.lang.String):74:82 -> getCustomValue
    1:2:java.lang.String getDeeplink():55:56 -> getDeeplink
    1:1:com.batch.android.BatchMessage getMessagingPayload():92:92 -> getMessagingPayload
    1:2:java.lang.String getTrackingId():45:46 -> getTrackingId
    1:1:boolean isPositiveAction():64:64 -> isPositiveAction
com.batch.android.eventdispatcher.PushEventPayload -> com.batch.android.eventdispatcher.b:
    com.batch.android.BatchPushPayload payload -> a
    boolean isOpening -> b
    1:1:void <init>(com.batch.android.BatchPushPayload):22:22 -> <init>
    2:4:void <init>(com.batch.android.BatchPushPayload,boolean):26:28 -> <init>
    1:5:java.lang.String getCustomValue(java.lang.String):56:60 -> getCustomValue
    1:1:java.lang.String getDeeplink():43:43 -> getDeeplink
    1:1:com.batch.android.BatchPushPayload getPushPayload():74:74 -> getPushPayload
    1:1:boolean isPositiveAction():49:49 -> isPositiveAction
com.batch.android.inbox.FetcherType -> com.batch.android.l0.a:
    com.batch.android.inbox.FetcherType[] $VALUES -> d
    com.batch.android.inbox.FetcherType INSTALLATION -> b
    com.batch.android.inbox.FetcherType USER_IDENTIFIER -> c
    int value -> a
    1:2:void <clinit>():5:6 -> <clinit>
    3:3:void <clinit>() -> <clinit>
    1:2:void <init>(java.lang.String,int,int):11:12 -> <init>
    1:1:int getValue():17:17 -> a
    1:1:java.lang.String toWSPathElement():22:22 -> b
    1:1:com.batch.android.inbox.FetcherType valueOf(java.lang.String):3:3 -> valueOf
    1:1:com.batch.android.inbox.FetcherType[] values():3:3 -> values
com.batch.android.inbox.FetcherType$1 -> com.batch.android.l0.a$a:
    int[] $SwitchMap$com$batch$android$inbox$FetcherType -> a
    1:1:void <clinit>():22:22 -> <clinit>
com.batch.android.inbox.InboxCandidateNotificationInternal -> com.batch.android.l0.b:
    java.lang.String identifier -> a
    boolean isUnread -> b
    1:3:void <init>(java.lang.String,boolean):16:18 -> <init>
com.batch.android.inbox.InboxDatabaseHelper -> com.batch.android.l0.c:
    java.lang.String COLUMN_INSTALL_ID -> g
    java.lang.String COLUMN_FETCHER_ID -> f
    java.lang.String TABLE_NOTIFICATIONS -> i
    java.lang.String COLUMN_CUSTOM_ID -> h
    java.lang.String COLUMN_SEND_ID -> k
    java.lang.String COLUMN_NOTIFICATION_ID -> j
    java.lang.String COLUMN_BODY -> m
    java.lang.String COLUMN_TITLE -> l
    java.lang.String COLUMN_DATE -> o
    java.lang.String COLUMN_UNREAD -> n
    java.lang.String DATABASE_NAME -> q
    java.lang.String COLUMN_PAYLOAD -> p
    java.lang.String COLUMN_DB_ID -> a
    java.lang.String COLUMN_FETCHER_TYPE -> c
    int DATABASE_VERSION -> r
    java.lang.String TABLE_FETCHERS -> b
    java.lang.String TABLE_FETCHERS_NOTIFICATIONS -> e
    java.lang.String COLUMN_FETCHER_IDENTIFIER -> d
    1:1:void <init>(android.content.Context):43:43 -> <init>
    1:20:void onCreate(android.database.sqlite.SQLiteDatabase):49:68 -> onCreate
com.batch.android.inbox.InboxDatasource -> com.batch.android.l0.d:
    android.content.Context context -> a
    com.batch.android.inbox.InboxDatabaseHelper databaseHelper -> c
    android.database.sqlite.SQLiteDatabase database -> b
    java.lang.String TAG -> d
    1:8:void <init>(android.content.Context):54:61 -> <init>
    9:9:void <init>(android.content.Context):56:56 -> <init>
    1:28:java.util.List getNotifications(java.util.List,long):103:130 -> a
    29:37:java.util.List getNotifications(java.util.List,long):123:131 -> a
    38:51:long getNotificationTime(java.lang.String):139:139 -> a
    63:64:long getNotificationTime(java.lang.String):151:152 -> a
    65:92:long getFetcherID(com.batch.android.inbox.FetcherType,java.lang.String):167:194 -> a
    93:116:long getFetcherID(com.batch.android.inbox.FetcherType,java.lang.String):189:189 -> a
    132:133:long getFetcherID(com.batch.android.inbox.FetcherType,java.lang.String):205:206 -> a
    134:153:java.util.List getCandidateNotifications(java.lang.String,int,long):226:245 -> a
    154:163:java.util.List getCandidateNotifications(java.lang.String,int,long):244:244 -> a
    171:189:java.util.List getCandidateNotifications(java.lang.String,int,long):252:270 -> a
    190:198:java.util.List getCandidateNotifications(java.lang.String,int,long):269:269 -> a
    205:206:java.util.List getCandidateNotifications(java.lang.String,int,long):276:277 -> a
    207:209:boolean insertResponse(com.batch.android.inbox.InboxWebserviceResponse,long):295:297 -> a
    210:230:boolean insert(com.batch.android.inbox.InboxNotificationContentInternal,long):312:332 -> a
    231:259:boolean insert(com.batch.android.inbox.InboxNotificationContentInternal,long):331:359 -> a
    260:267:boolean insert(com.batch.android.inbox.InboxNotificationContentInternal,long):356:363 -> a
    268:268:boolean insert(com.batch.android.inbox.InboxNotificationContentInternal,long):318:318 -> a
    269:308:java.lang.String updateNotification(com.batch.android.json.JSONObject,long):380:419 -> a
    309:310:java.lang.String updateNotification(com.batch.android.json.JSONObject,long):414:415 -> a
    311:313:java.lang.String updateNotification(com.batch.android.json.JSONObject,long):409:411 -> a
    314:314:java.lang.String updateNotification(com.batch.android.json.JSONObject,long):410:410 -> a
    315:316:java.lang.String updateNotification(com.batch.android.json.JSONObject,long):405:406 -> a
    317:319:java.lang.String updateNotification(com.batch.android.json.JSONObject,long):400:402 -> a
    320:321:java.lang.String updateNotification(com.batch.android.json.JSONObject,long):396:397 -> a
    322:323:java.lang.String updateNotification(com.batch.android.json.JSONObject,long):392:393 -> a
    324:382:java.lang.String updateNotification(com.batch.android.json.JSONObject,long):388:446 -> a
    383:402:java.lang.String updateNotification(com.batch.android.json.JSONObject,long):439:458 -> a
    403:418:int markAllAsRead(long,long):472:487 -> a
    419:419:int markAllAsRead(long,long):475:475 -> a
    420:429:boolean deleteNotifications(java.util.List):500:509 -> a
    430:436:boolean deleteNotifications(java.util.List):508:514 -> a
    437:447:boolean deleteNotifications(java.util.List):513:523 -> a
    448:452:boolean deleteNotifications(java.util.List):520:524 -> a
    453:458:boolean cleanDatabase():535:540 -> a
    459:478:boolean cleanDatabase():537:537 -> a
    496:497:boolean cleanDatabase():555:556 -> a
    498:500:com.batch.android.inbox.InboxCandidateNotificationInternal parseCandidateNotification(android.database.Cursor):623:625 -> a
    501:506:java.lang.String createInClause(int):641:646 -> a
    1:3:void close():84:86 -> b
    4:41:com.batch.android.inbox.InboxNotificationContentInternal parseNotification(android.database.Cursor):570:607 -> b
    1:1:android.database.sqlite.SQLiteDatabase getDatabase():97:97 -> c
    1:8:void wipeData():69:76 -> d
com.batch.android.inbox.InboxFetchWebserviceClient -> com.batch.android.l0.e:
    com.batch.android.webservice.listener.InboxWebserviceListener listener -> q
    java.lang.String authentication -> p
    java.lang.String TAG -> r
    long fetcherId -> o
    1:5:void <init>(android.content.Context,com.batch.android.inbox.FetcherType,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,long,com.batch.android.webservice.listener.InboxWebserviceListener):55:55 -> <init>
    10:19:void <init>(android.content.Context,com.batch.android.inbox.FetcherType,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,long,com.batch.android.webservice.listener.InboxWebserviceListener):60:69 -> <init>
    java.lang.String getSpecificConnectTimeoutKey() -> A
    java.lang.String getSpecificReadTimeoutKey() -> B
    java.lang.String getSpecificRetryCountKey() -> C
    java.lang.String getURLSorterPatternParameterKey() -> F
    java.lang.String getPropertyParameterKey() -> H
    java.lang.String getTaskIdentifier() -> a
    1:43:com.batch.android.inbox.InboxNotificationContentInternal parseNotification(com.batch.android.json.JSONObject):165:207 -> c
    1:23:com.batch.android.inbox.InboxWebserviceResponse parseResponse(com.batch.android.json.JSONObject):128:150 -> d
    24:30:com.batch.android.inbox.InboxWebserviceResponse parseResponse(com.batch.android.json.JSONObject):149:155 -> d
    java.lang.String getCryptorModeParameterKey() -> o
    java.lang.String getCryptorTypeParameterKey() -> p
    1:3:java.util.Map getHeaders():76:78 -> r
    1:28:void run():95:122 -> run
    29:30:void run():118:119 -> run
    31:40:void run():106:115 -> run
    java.lang.String getPostCryptorTypeParameterKey() -> v
    com.batch.android.post.PostDataProvider getPostDataProvider() -> w
    java.lang.String getReadCryptorTypeParameterKey() -> y
com.batch.android.inbox.InboxFetcherInternal -> com.batch.android.l0.f:
    java.lang.String authKey -> g
    java.lang.String identifier -> f
    boolean isDatabaseCleaned -> o
    android.content.Context context -> b
    int fetchLimit -> j
    int maxPageSize -> i
    boolean endReached -> l
    java.lang.String TAG -> n
    long fetcherId -> d
    java.util.concurrent.Executor fetchExecutor -> k
    com.batch.android.module.TrackerModule trackerModule -> a
    com.batch.android.inbox.FetcherType fetcherType -> e
    java.util.List fetchedNotifications -> h
    java.lang.String cursor -> c
    com.batch.android.inbox.InboxDatasource datasource -> m
    1:1:void <init>(com.batch.android.module.TrackerModule,com.batch.android.inbox.InboxDatasource,android.content.Context,java.lang.String):73:73 -> <init>
    2:38:void <init>(com.batch.android.module.TrackerModule,com.batch.android.inbox.InboxDatasource,android.content.Context,java.lang.String):46:82 -> <init>
    39:39:void <init>(com.batch.android.module.TrackerModule,com.batch.android.inbox.InboxDatasource,android.content.Context,java.lang.String,java.lang.String):123:123 -> <init>
    40:127:void <init>(com.batch.android.module.TrackerModule,com.batch.android.inbox.InboxDatasource,android.content.Context,java.lang.String,java.lang.String):46:133 -> <init>
    1:1:java.util.List access$000(com.batch.android.inbox.InboxFetcherInternal,com.batch.android.inbox.InboxWebserviceResponse,boolean):36:36 -> a
    2:2:java.util.List access$100(java.util.List):36:36 -> a
    3:3:java.lang.String access$200(com.batch.android.inbox.InboxFetcherInternal):36:36 -> a
    4:6:com.batch.android.inbox.InboxFetcherInternal provide(android.content.Context,java.lang.String):89:91 -> a
    7:11:com.batch.android.inbox.InboxFetcherInternal provide(android.content.Context,java.lang.String,boolean):107:111 -> a
    12:14:com.batch.android.inbox.InboxFetcherInternal provide(android.content.Context,java.lang.String,java.lang.String):142:144 -> a
    15:19:com.batch.android.inbox.InboxFetcherInternal provide(android.content.Context,java.lang.String,java.lang.String,boolean):158:162 -> a
    20:20:void setFetchLimit(int):177:177 -> a
    21:46:void markAsDeleted(com.batch.android.BatchInboxNotificationContent):232:257 -> a
    47:50:java.util.List convertInternalModelsToPublic(java.util.List,boolean):270:273 -> a
    51:96:void fetchNewNotifications(com.batch.android.BatchInboxFetcher$OnNewNotificationsFetchedListener):282:327 -> a
    97:151:void fetchNextPage(com.batch.android.BatchInboxFetcher$OnNextPageFetchedListener):332:386 -> a
    152:169:void fetch(java.lang.String,com.batch.android.webservice.listener.InboxWebserviceListener):392:409 -> a
    170:196:void lambda$fetch$0(com.batch.android.webservice.listener.InboxWebserviceListener,java.lang.String):410:436 -> a
    197:224:void lambda$sync$1(com.batch.android.webservice.listener.InboxWebserviceListener,java.lang.String,java.util.List):452:479 -> a
    225:261:java.util.List getEventDatas(com.batch.android.inbox.InboxNotificationContentInternal):492:528 -> a
    262:264:java.util.List getPublicFetchedNotifications():539:541 -> a
    265:271:java.util.List handleFetchSuccess(com.batch.android.inbox.InboxWebserviceResponse,boolean):547:553 -> a
    272:334:java.util.List handleFetchSuccess(com.batch.android.inbox.InboxWebserviceResponse,boolean):549:611 -> a
    1:1:void setMaxPageSize(int):172:172 -> b
    2:2:boolean isEndReached():182:182 -> b
    3:27:void markAsRead(com.batch.android.BatchInboxNotificationContent):187:211 -> b
    28:28:java.util.List convertInternalModelsToPublic(java.util.List):263:263 -> b
    29:36:boolean sync(java.lang.String,com.batch.android.webservice.listener.InboxWebserviceListener):444:451 -> b
    1:12:void markAllAsRead():216:227 -> c
com.batch.android.inbox.InboxFetcherInternal$1 -> com.batch.android.l0.f$a:
    com.batch.android.inbox.InboxFetcherInternal this$0 -> a
    1:1:void <init>(com.batch.android.inbox.InboxFetcherInternal):283:283 -> <init>
com.batch.android.inbox.InboxFetcherInternal$2 -> com.batch.android.l0.f$b:
    com.batch.android.inbox.InboxFetcherInternal this$0 -> b
    com.batch.android.BatchInboxFetcher$OnNewNotificationsFetchedListener val$userListener -> a
    1:1:void <init>(com.batch.android.inbox.InboxFetcherInternal,com.batch.android.BatchInboxFetcher$OnNewNotificationsFetchedListener):301:301 -> <init>
    1:3:void onSuccess(com.batch.android.inbox.InboxWebserviceResponse):305:305 -> a
    6:10:void onSuccess(com.batch.android.inbox.InboxWebserviceResponse):308:312 -> a
    11:16:void onSuccess(com.batch.android.inbox.InboxWebserviceResponse):311:316 -> a
    17:17:void onFailure(java.lang.String):324:324 -> a
com.batch.android.inbox.InboxFetcherInternal$3 -> com.batch.android.l0.f$c:
    com.batch.android.inbox.InboxFetcherInternal this$0 -> a
    1:1:void <init>(com.batch.android.inbox.InboxFetcherInternal):342:342 -> <init>
com.batch.android.inbox.InboxFetcherInternal$4 -> com.batch.android.l0.f$d:
    com.batch.android.inbox.InboxFetcherInternal this$0 -> b
    com.batch.android.BatchInboxFetcher$OnNextPageFetchedListener val$finalListener -> a
    1:1:void <init>(com.batch.android.inbox.InboxFetcherInternal,com.batch.android.BatchInboxFetcher$OnNextPageFetchedListener):358:358 -> <init>
    1:3:void onSuccess(com.batch.android.inbox.InboxWebserviceResponse):362:362 -> a
    8:11:void onSuccess(com.batch.android.inbox.InboxWebserviceResponse):367:367 -> a
    14:19:void onSuccess(com.batch.android.inbox.InboxWebserviceResponse):370:375 -> a
    20:20:void onFailure(java.lang.String):383:383 -> a
com.batch.android.inbox.InboxFetcherInternal$ResultHandlingError -> com.batch.android.l0.f$e:
    com.batch.android.inbox.InboxFetcherInternal this$0 -> b
    java.lang.String publicMesssage -> a
    1:3:void <init>(com.batch.android.inbox.InboxFetcherInternal,java.lang.String,java.lang.String):620:622 -> <init>
    1:1:java.lang.String getPublicMessage():627:627 -> a
com.batch.android.inbox.InboxNotificationContentInternal -> com.batch.android.l0.g:
    java.util.Date date -> f
    boolean isDeleted -> e
    java.util.List duplicateIdentifiers -> i
    java.lang.String title -> a
    com.batch.android.BatchNotificationSource source -> c
    java.lang.String body -> b
    java.util.Map payload -> g
    com.batch.android.inbox.NotificationIdentifiers identifiers -> h
    boolean isUnread -> d
    1:5:void <init>(com.batch.android.BatchNotificationSource,java.util.Date,java.util.Map,com.batch.android.inbox.NotificationIdentifiers):50:54 -> <init>
    1:3:android.os.Bundle getReceiverLikePayload():60:62 -> a
    4:7:void addDuplicateIdentifiers(com.batch.android.inbox.NotificationIdentifiers):69:72 -> a
    1:3:boolean isValid():77:79 -> b
com.batch.android.inbox.InboxSyncWebserviceClient -> com.batch.android.l0.h:
    com.batch.android.post.InboxSyncPostDataProvider dataProvider -> r
    java.util.List candidates -> q
    java.lang.String authentication -> p
    com.batch.android.webservice.listener.InboxWebserviceListener listener -> s
    java.lang.String TAG -> t
    long fetcherId -> o
    1:5:void <init>(android.content.Context,com.batch.android.inbox.FetcherType,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,long,java.util.List,com.batch.android.webservice.listener.InboxWebserviceListener):62:62 -> <init>
    10:21:void <init>(android.content.Context,com.batch.android.inbox.FetcherType,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,long,java.util.List,com.batch.android.webservice.listener.InboxWebserviceListener):67:78 -> <init>
    java.lang.String getSpecificConnectTimeoutKey() -> A
    java.lang.String getSpecificReadTimeoutKey() -> B
    java.lang.String getSpecificRetryCountKey() -> C
    java.lang.String getURLSorterPatternParameterKey() -> F
    java.lang.String getPropertyParameterKey() -> H
    java.lang.String getTaskIdentifier() -> a
    1:2:boolean isCandidates(java.lang.String):222:223 -> b
    1:72:com.batch.android.inbox.InboxWebserviceResponse computeResponse(com.batch.android.json.JSONObject):131:202 -> c
    73:78:com.batch.android.inbox.InboxWebserviceResponse computeResponse(com.batch.android.json.JSONObject):201:206 -> c
    79:88:com.batch.android.inbox.InboxWebserviceResponse computeResponse(com.batch.android.json.JSONObject):205:214 -> c
    java.lang.String getCryptorModeParameterKey() -> o
    java.lang.String getCryptorTypeParameterKey() -> p
    1:3:java.util.Map getHeaders():85:87 -> r
    1:21:void run():104:124 -> run
    22:23:void run():120:121 -> run
    24:33:void run():108:117 -> run
    java.lang.String getPostCryptorTypeParameterKey() -> v
    1:1:com.batch.android.post.PostDataProvider getPostDataProvider():233:233 -> w
    java.lang.String getReadCryptorTypeParameterKey() -> y
com.batch.android.inbox.InboxWebserviceResponse -> com.batch.android.l0.i:
    java.util.List notifications -> d
    boolean hasMore -> a
    java.lang.String cursor -> c
    boolean didTimeout -> b
    1:10:void <init>():12:21 -> <init>
com.batch.android.inbox.NotificationIdentifiers -> com.batch.android.l0.j:
    java.lang.String identifier -> a
    java.lang.String installID -> c
    java.util.Map additionalData -> e
    java.lang.String sendID -> b
    java.lang.String customID -> d
    1:3:void <init>(java.lang.String,java.lang.String):34:36 -> <init>
    1:1:boolean isValid():41:41 -> a
com.batch.android.inbox.ResponseParsingException -> com.batch.android.l0.k:
    1:1:void <init>():6:6 -> <init>
    2:2:void <init>(java.lang.String):11:11 -> <init>
    3:3:void <init>(java.lang.String,java.lang.Throwable):16:16 -> <init>
    4:4:void <init>(java.lang.Throwable):21:21 -> <init>
com.batch.android.json.JSON -> com.batch.android.json.JSON:
    1:1:void <init>():22:22 -> <init>
    1:2:double checkDouble(double):29:30 -> checkDouble
    1:8:java.lang.Boolean toBoolean(java.lang.Object):37:44 -> toBoolean
    1:7:java.lang.Double toDouble(java.lang.Object):52:58 -> toDouble
    1:7:java.lang.Integer toInteger(java.lang.Object):67:73 -> toInteger
    1:7:java.lang.Long toLong(java.lang.Object):82:88 -> toLong
    1:4:java.lang.String toString(java.lang.Object):97:100 -> toString
    1:4:com.batch.android.json.JSONException typeMismatch(java.lang.Object,java.lang.Object,java.lang.String):109:112 -> typeMismatch
    5:8:com.batch.android.json.JSONException typeMismatch(java.lang.Object,java.lang.String):121:124 -> typeMismatch
com.batch.android.json.JSONArray -> com.batch.android.json.JSONArray:
    1:2:void <init>():61:62 -> <init>
    3:6:void <init>(java.util.Collection):76:79 -> <init>
    7:16:void <init>(com.batch.android.json.JSONTokener):94:103 -> <init>
    17:17:void <init>(java.lang.String):116:116 -> <init>
    18:25:void <init>(java.lang.Object):123:130 -> <init>
    26:26:void <init>(java.lang.Object):125:125 -> <init>
    1:5:void checkedPut(java.lang.Object):209:213 -> checkedPut
    1:1:boolean equals(java.lang.Object):671:671 -> equals
    1:7:java.lang.Object get(int):310:316 -> get
    1:6:boolean getBoolean(int):353:358 -> getBoolean
    7:7:boolean getBoolean(int):356:356 -> getBoolean
    1:6:double getDouble(int):390:395 -> getDouble
    7:7:double getDouble(int):393:393 -> getDouble
    1:6:int getInt(int):427:432 -> getInt
    7:7:int getInt(int):430:430 -> getInt
    1:5:com.batch.android.json.JSONArray getJSONArray(int):537:541 -> getJSONArray
    1:5:com.batch.android.json.JSONObject getJSONObject(int):564:568 -> getJSONObject
    1:6:long getLong(int):464:469 -> getLong
    7:7:long getLong(int):467:467 -> getLong
    1:4:java.lang.String getString(int):500:503 -> getString
    1:1:int hashCode():678:678 -> hashCode
    1:2:boolean isNull(int):296:297 -> isNull
    1:10:java.lang.String join(java.lang.String):612:621 -> join
    1:1:int length():139:139 -> length
    1:4:java.lang.Object opt(int):326:329 -> opt
    1:1:boolean optBoolean(int):367:367 -> optBoolean
    2:4:boolean optBoolean(int,boolean):376:378 -> optBoolean
    1:1:double optDouble(int):404:404 -> optDouble
    2:4:double optDouble(int,double):413:415 -> optDouble
    1:1:int optInt(int):441:441 -> optInt
    2:4:int optInt(int,int):450:452 -> optInt
    1:2:com.batch.android.json.JSONArray optJSONArray(int):551:552 -> optJSONArray
    1:2:com.batch.android.json.JSONObject optJSONObject(int):578:579 -> optJSONObject
    1:1:long optLong(int):478:478 -> optLong
    2:4:long optLong(int,long):487:489 -> optLong
    1:1:java.lang.String optString(int):514:514 -> optString
    2:3:java.lang.String optString(int,java.lang.String):523:524 -> optString
    1:1:com.batch.android.json.JSONArray put(boolean):149:149 -> put
    2:2:com.batch.android.json.JSONArray put(double):162:162 -> put
    3:3:com.batch.android.json.JSONArray put(int):173:173 -> put
    4:4:com.batch.android.json.JSONArray put(long):184:184 -> put
    5:5:com.batch.android.json.JSONArray put(java.lang.Object):200:200 -> put
    6:6:com.batch.android.json.JSONArray put(int,boolean):225:225 -> put
    7:7:com.batch.android.json.JSONArray put(int,double):239:239 -> put
    8:8:com.batch.android.json.JSONArray put(int,int):251:251 -> put
    9:9:com.batch.android.json.JSONArray put(int,long):263:263 -> put
    10:17:com.batch.android.json.JSONArray put(int,java.lang.Object):279:286 -> put
    1:4:java.lang.Object remove(int):338:341 -> remove
    1:8:com.batch.android.json.JSONObject toJSONObject(com.batch.android.json.JSONArray):591:598 -> toJSONObject
    1:3:java.lang.String toString():632:634 -> toString
    4:6:java.lang.String toString(int):654:656 -> toString
    1:5:void writeTo(com.batch.android.json.JSONStringer):661:665 -> writeTo
com.batch.android.json.JSONException -> com.batch.android.json.JSONException:
    1:1:void <init>(java.lang.String):52:52 -> <init>
com.batch.android.json.JSONHelper -> com.batch.android.json.JSONHelper:
    1:1:void <init>():19:19 -> <init>
    1:3:java.util.List jsonArrayToArray(com.batch.android.json.JSONArray):54:56 -> jsonArrayToArray
    1:5:java.util.Map jsonObjectToMap(com.batch.android.json.JSONObject):43:47 -> jsonObjectToMap
    1:4:java.lang.Object jsonObjectToObject(java.lang.Object):32:35 -> jsonObjectToObject
com.batch.android.json.JSONObject -> com.batch.android.json.JSONObject:
    1:18:void <clinit>():89:106 -> <clinit>
    1:2:void <init>():127:128 -> <init>
    3:14:void <init>(java.util.Map):142:153 -> <init>
    15:15:void <init>(java.util.Map):151:151 -> <init>
    16:17:void <init>(com.batch.android.json.JSONTokener):167:168 -> <init>
    18:18:void <init>(java.lang.String):181:181 -> <init>
    19:23:void <init>(com.batch.android.json.JSONObject,java.lang.String[]):191:195 -> <init>
    24:28:void <init>(com.batch.android.json.JSONObject):205:209 -> <init>
    1:13:com.batch.android.json.JSONObject accumulate(java.lang.String,java.lang.Object):354:366 -> accumulate
    1:14:com.batch.android.json.JSONObject append(java.lang.String,java.lang.Object):383:396 -> append
    15:15:com.batch.android.json.JSONObject append(java.lang.String,java.lang.Object):393:393 -> append
    1:1:java.lang.String checkName(java.lang.String):404:404 -> checkName
    1:3:java.lang.Object get(java.lang.String):446:448 -> get
    1:6:boolean getBoolean(java.lang.String):471:476 -> getBoolean
    7:7:boolean getBoolean(java.lang.String):474:474 -> getBoolean
    1:6:double getDouble(java.lang.String):520:525 -> getDouble
    7:7:double getDouble(java.lang.String):523:523 -> getDouble
    1:6:int getInt(java.lang.String):569:574 -> getInt
    7:7:int getInt(java.lang.String):572:572 -> getInt
    1:5:com.batch.android.json.JSONArray getJSONArray(java.lang.String):720:724 -> getJSONArray
    1:5:com.batch.android.json.JSONObject getJSONObject(java.lang.String):747:751 -> getJSONObject
    1:6:long getLong(java.lang.String):620:625 -> getLong
    7:7:long getLong(java.lang.String):623:623 -> getLong
    1:4:java.lang.String getString(java.lang.String):671:674 -> getString
    1:1:boolean has(java.lang.String):436:436 -> has
    1:2:boolean isNull(java.lang.String):426:427 -> isNull
    1:1:java.util.Set keySet():811:811 -> keySet
    1:1:java.util.Iterator keys():796:796 -> keys
    1:1:int length():244:244 -> length
    1:3:com.batch.android.json.JSONArray names():820:822 -> names
    1:14:java.lang.String numberToString(java.lang.Number):884:897 -> numberToString
    15:15:java.lang.String numberToString(java.lang.Number):881:881 -> numberToString
    1:1:java.lang.Object opt(java.lang.String):459:459 -> opt
    1:1:boolean optBoolean(java.lang.String):485:485 -> optBoolean
    2:4:boolean optBoolean(java.lang.String,boolean):494:496 -> optBoolean
    1:1:double optDouble(java.lang.String):534:534 -> optDouble
    2:4:double optDouble(java.lang.String,double):543:545 -> optDouble
    1:1:int optInt(java.lang.String):583:583 -> optInt
    2:4:int optInt(java.lang.String,int):592:594 -> optInt
    1:2:com.batch.android.json.JSONArray optJSONArray(java.lang.String):734:735 -> optJSONArray
    1:2:com.batch.android.json.JSONObject optJSONObject(java.lang.String):761:762 -> optJSONObject
    1:1:long optLong(java.lang.String):647:647 -> optLong
    2:4:long optLong(java.lang.String,long):658:660 -> optLong
    1:1:java.lang.String optString(java.lang.String):685:685 -> optString
    2:3:java.lang.String optString(java.lang.String,java.lang.String):694:695 -> optString
    1:1:com.batch.android.json.JSONObject put(java.lang.String,boolean):255:255 -> put
    2:2:com.batch.android.json.JSONObject put(java.lang.String,double):269:269 -> put
    3:3:com.batch.android.json.JSONObject put(java.lang.String,int):281:281 -> put
    4:4:com.batch.android.json.JSONObject put(java.lang.String,long):293:293 -> put
    5:12:com.batch.android.json.JSONObject put(java.lang.String,java.lang.Object):311:318 -> put
    1:1:com.batch.android.json.JSONObject putOpt(java.lang.String,java.lang.Object):331:331 -> putOpt
    1:7:java.lang.String quote(java.lang.String):913:919 -> quote
    1:5:void readFromTokener(com.batch.android.json.JSONTokener):231:235 -> readFromTokener
    1:9:void readObject(java.io.ObjectInputStream):989:997 -> readObject
    1:3:java.lang.Boolean reallyOptBoolean(java.lang.String,java.lang.Boolean):505:507 -> reallyOptBoolean
    1:3:java.lang.Double reallyOptDouble(java.lang.String,java.lang.Double):554:556 -> reallyOptDouble
    1:3:java.lang.Integer reallyOptInteger(java.lang.String,java.lang.Integer):603:605 -> reallyOptInteger
    1:3:java.lang.Long reallyOptLong(java.lang.String,java.lang.Long):634:636 -> reallyOptLong
    1:3:java.lang.String reallyOptString(java.lang.String,java.lang.String):705:707 -> reallyOptString
    1:1:java.lang.Object remove(java.lang.String):417:417 -> remove
    1:11:com.batch.android.json.JSONArray toJSONArray(com.batch.android.json.JSONArray):772:782 -> toJSONArray
    1:3:java.lang.String toString():833:835 -> toString
    4:6:java.lang.String toString(int):858:860 -> toString
    1:31:java.lang.Object wrap(java.lang.Object):938:968 -> wrap
    1:6:void writeObject(java.io.ObjectOutputStream):979:984 -> writeObject
    7:7:void writeObject(java.io.ObjectOutputStream):981:981 -> writeObject
    1:5:void writeTo(com.batch.android.json.JSONStringer):865:869 -> writeTo
com.batch.android.json.JSONObject$1 -> com.batch.android.json.JSONObject$a:
    1:1:void <init>():107:107 -> <init>
com.batch.android.json.JSONStringer -> com.batch.android.json.JSONStringer:
    1:1:void <init>():130:130 -> <init>
    2:63:void <init>():70:131 -> <init>
    64:64:void <init>(int):135:135 -> <init>
    65:133:void <init>(int):70:138 -> <init>
    1:1:com.batch.android.json.JSONStringer array():149:149 -> array
    1:8:void beforeKey():410:417 -> beforeKey
    9:9:void beforeKey():414:414 -> beforeKey
    1:16:void beforeValue():427:442 -> beforeValue
    1:10:com.batch.android.json.JSONStringer close(com.batch.android.json.JSONStringer$Scope,com.batch.android.json.JSONStringer$Scope,java.lang.String):204:213 -> close
    1:1:com.batch.android.json.JSONStringer endArray():159:159 -> endArray
    1:1:com.batch.android.json.JSONStringer endObject():180:180 -> endObject
    1:2:com.batch.android.json.JSONStringer key(java.lang.String):399:400 -> key
    3:3:com.batch.android.json.JSONStringer key(java.lang.String):397:397 -> key
    1:7:void newline():378:384 -> newline
    1:1:com.batch.android.json.JSONStringer object():170:170 -> object
    1:6:com.batch.android.json.JSONStringer open(com.batch.android.json.JSONStringer$Scope,java.lang.String):189:194 -> open
    1:4:com.batch.android.json.JSONStringer$Scope peek():222:225 -> peek
    5:5:com.batch.android.json.JSONStringer$Scope peek():223:223 -> peek
    1:1:void replaceTop(com.batch.android.json.JSONStringer$Scope):233:233 -> replaceTop
    1:40:void string(java.lang.String):326:365 -> string
    41:61:void string(java.lang.String):340:360 -> string
    62:62:void string(java.lang.String):352:352 -> string
    63:92:void string(java.lang.String):344:373 -> string
    1:1:java.lang.String toString():459:459 -> toString
    1:26:com.batch.android.json.JSONStringer value(java.lang.Object):246:271 -> value
    27:27:com.batch.android.json.JSONStringer value(java.lang.Object):265:265 -> value
    28:28:com.batch.android.json.JSONStringer value(java.lang.Object):247:247 -> value
    29:33:com.batch.android.json.JSONStringer value(boolean):284:288 -> value
    34:34:com.batch.android.json.JSONStringer value(boolean):285:285 -> value
    35:39:com.batch.android.json.JSONStringer value(double):301:305 -> value
    40:40:com.batch.android.json.JSONStringer value(double):302:302 -> value
    41:45:com.batch.android.json.JSONStringer value(long):316:320 -> value
    46:46:com.batch.android.json.JSONStringer value(long):317:317 -> value
com.batch.android.json.JSONStringer$Scope -> com.batch.android.json.JSONStringer$a:
    com.batch.android.json.JSONStringer$Scope NONEMPTY_OBJECT -> e
    com.batch.android.json.JSONStringer$Scope NULL -> f
    com.batch.android.json.JSONStringer$Scope[] $VALUES -> g
    com.batch.android.json.JSONStringer$Scope EMPTY_OBJECT -> c
    com.batch.android.json.JSONStringer$Scope DANGLING_KEY -> d
    com.batch.android.json.JSONStringer$Scope EMPTY_ARRAY -> a
    com.batch.android.json.JSONStringer$Scope NONEMPTY_ARRAY -> b
    1:31:void <clinit>():84:114 -> <clinit>
    32:32:void <clinit>():77:77 -> <clinit>
    1:1:void <init>(java.lang.String,int):77:77 -> <init>
    1:1:com.batch.android.json.JSONStringer$Scope valueOf(java.lang.String):77:77 -> valueOf
    1:1:com.batch.android.json.JSONStringer$Scope[] values():77:77 -> values
com.batch.android.json.JSONTokener -> com.batch.android.json.JSONTokener:
    1:6:void <init>(java.lang.String):85:90 -> <init>
    1:2:void back():618:619 -> back
    1:1:boolean more():494:494 -> more
    1:1:char next():504:504 -> next
    2:4:char next(char):513:515 -> next
    5:9:java.lang.String next(int):545:549 -> next
    10:10:java.lang.String next(int):546:546 -> next
    1:1:char nextClean():528:528 -> nextClean
    1:30:int nextCleanInternal():125:154 -> nextCleanInternal
    31:36:int nextCleanInternal():143:148 -> nextCleanInternal
    37:58:int nextCleanInternal():146:167 -> nextCleanInternal
    1:25:java.lang.String nextString(char):212:236 -> nextString
    26:37:java.lang.String nextString(char):229:240 -> nextString
    1:1:java.lang.String nextTo(java.lang.String):574:574 -> nextTo
    2:2:java.lang.String nextTo(java.lang.String):572:572 -> nextTo
    3:3:java.lang.String nextTo(char):582:582 -> nextTo
    1:4:java.lang.String nextToInternal(java.lang.String):351:354 -> nextToInternal
    5:11:java.lang.String nextToInternal(java.lang.String):352:358 -> nextToInternal
    1:18:java.lang.Object nextValue():102:119 -> nextValue
    19:26:java.lang.Object nextValue():108:115 -> nextValue
    27:27:java.lang.Object nextValue():105:105 -> nextValue
    1:35:com.batch.android.json.JSONArray readArray():423:457 -> readArray
    36:42:com.batch.android.json.JSONArray readArray():434:440 -> readArray
    43:43:com.batch.android.json.JSONArray readArray():431:431 -> readArray
    1:12:char readEscapeCharacter():251:262 -> readEscapeCharacter
    13:13:char readEscapeCharacter():255:255 -> readEscapeCharacter
    1:21:java.lang.Object readLiteral():295:315 -> readLiteral
    22:52:java.lang.Object readLiteral():312:342 -> readLiteral
    53:53:java.lang.Object readLiteral():298:298 -> readLiteral
    1:18:com.batch.android.json.JSONObject readObject():367:384 -> readObject
    19:46:com.batch.android.json.JSONObject readObject():383:410 -> readObject
    1:2:void skipPast(java.lang.String):592:593 -> skipPast
    1:3:char skipTo(char):603:605 -> skipTo
    1:3:void skipToEndOfLine():185:185 -> skipToEndOfLine
    6:6:void skipToEndOfLine():188:188 -> skipToEndOfLine
    1:1:com.batch.android.json.JSONException syntaxError(java.lang.String):468:468 -> syntaxError
    1:1:java.lang.String toString():478:478 -> toString
com.batch.android.lisp.AndOperatorHandler -> com.batch.android.m0.a:
    1:1:void <init>():239:239 -> <init>
    1:17:com.batch.android.lisp.Value run(com.batch.android.lisp.EvaluationContext,java.util.ArrayList):244:260 -> a
    18:26:com.batch.android.lisp.Value run(com.batch.android.lisp.EvaluationContext,java.util.ArrayList):255:263 -> a
com.batch.android.lisp.CachingContext -> com.batch.android.m0.b:
    com.batch.android.lisp.EvaluationContext context -> a
    java.util.Map cache -> b
    com.batch.android.lisp.Value NULL_VALUE -> c
    1:1:void <clinit>():17:17 -> <clinit>
    1:3:void <init>(com.batch.android.lisp.EvaluationContext):20:22 -> <init>
    1:15:com.batch.android.lisp.Value resolveVariableNamed(java.lang.String):28:42 -> a
com.batch.android.lisp.ContainsAllOperatorHandler -> com.batch.android.m0.c:
    1:1:void <init>():433:433 -> <init>
    1:1:com.batch.android.lisp.Value run(com.batch.android.lisp.EvaluationContext,java.util.ArrayList):438:438 -> a
    2:2:boolean lambda$run$0(java.util.Set,java.util.Set):440:440 -> a
com.batch.android.lisp.ContainsOperatorHandler -> com.batch.android.m0.d:
    1:1:void <init>():409:409 -> <init>
    1:1:com.batch.android.lisp.Value run(com.batch.android.lisp.EvaluationContext,java.util.ArrayList):414:414 -> a
    2:3:boolean lambda$run$0(java.util.Set,java.util.Set):417:418 -> a
com.batch.android.lisp.EqualOperatorHandler -> com.batch.android.m0.e:
    1:1:void <init>():295:295 -> <init>
    1:35:com.batch.android.lisp.Value run(com.batch.android.lisp.EvaluationContext,java.util.ArrayList):300:334 -> a
com.batch.android.lisp.ErrorValue -> com.batch.android.m0.f:
    com.batch.android.lisp.ErrorValue$Type type -> a
    java.lang.String message -> b
    1:3:void <init>(com.batch.android.lisp.ErrorValue$Type,java.lang.String):32:34 -> <init>
    1:5:boolean equals(java.lang.Object):42:46 -> equals
    1:1:java.lang.String toString():53:53 -> toString
com.batch.android.lisp.ErrorValue$1 -> com.batch.android.m0.f$a:
    int[] $SwitchMap$com$batch$android$lisp$ErrorValue$Type -> a
    1:1:void <clinit>():15:15 -> <clinit>
com.batch.android.lisp.ErrorValue$Type -> com.batch.android.m0.f$b:
    com.batch.android.lisp.ErrorValue$Type Internal -> a
    com.batch.android.lisp.ErrorValue$Type Parser -> c
    com.batch.android.lisp.ErrorValue$Type Error -> b
    com.batch.android.lisp.ErrorValue$Type[] $VALUES -> d
    1:3:void <clinit>():8:10 -> <clinit>
    4:4:void <clinit>():6:6 -> <clinit>
    1:1:void <init>(java.lang.String,int):6:6 -> <init>
    1:1:java.lang.String toString():15:15 -> toString
    1:1:com.batch.android.lisp.ErrorValue$Type valueOf(java.lang.String):6:6 -> valueOf
    1:1:com.batch.android.lisp.ErrorValue$Type[] values():6:6 -> values
com.batch.android.lisp.EvaluationContext -> com.batch.android.m0.g:
    com.batch.android.lisp.Value resolveVariableNamed(java.lang.String) -> a
com.batch.android.lisp.EventContext -> com.batch.android.m0.h:
    java.lang.String eventName -> a
    com.batch.android.BatchEventData data -> c
    java.lang.String eventLabel -> b
    boolean isPublicEvent -> d
    1:9:void <init>(java.lang.String,java.lang.String,com.batch.android.BatchEventData):19:27 -> <init>
    1:16:com.batch.android.lisp.Value resolveVariableNamed(java.lang.String):33:48 -> a
    17:19:com.batch.android.lisp.Value resolveVariableNamed(java.lang.String):41:43 -> a
    20:26:com.batch.android.lisp.Value resolveVariableNamed(java.lang.String):39:45 -> a
    27:32:com.batch.android.lisp.Value converted():79:84 -> a
    1:5:com.batch.android.lisp.Value label():57:61 -> b
    6:20:com.batch.android.lisp.Value dataForRawVariableName(java.lang.String):89:103 -> b
    21:36:com.batch.android.lisp.Value dataForRawVariableName(java.lang.String):94:109 -> b
    1:9:com.batch.android.lisp.Value tags():66:74 -> c
    10:12:java.lang.String extractAttributeFromVariableName(java.lang.String):117:119 -> c
com.batch.android.lisp.GreaterThanOperatorHandler -> com.batch.android.m0.i:
    1:1:void <init>():357:357 -> <init>
    1:1:com.batch.android.lisp.Value run(com.batch.android.lisp.EvaluationContext,java.util.ArrayList):362:362 -> a
    2:2:boolean lambda$run$0(java.lang.Number,java.lang.Number):364:364 -> a
com.batch.android.lisp.GreaterThanOrEqualOperatorHandler -> com.batch.android.m0.j:
    1:1:void <init>():369:369 -> <init>
    1:1:com.batch.android.lisp.Value run(com.batch.android.lisp.EvaluationContext,java.util.ArrayList):374:374 -> a
    2:2:boolean lambda$run$0(java.lang.Number,java.lang.Number):375:375 -> a
com.batch.android.lisp.IfOperatorHandler -> com.batch.android.m0.k:
    1:1:void <init>():204:204 -> <init>
    1:25:com.batch.android.lisp.Value run(com.batch.android.lisp.EvaluationContext,java.util.ArrayList):209:233 -> a
    26:26:com.batch.android.lisp.Value run(com.batch.android.lisp.EvaluationContext,java.util.ArrayList):211:211 -> a
com.batch.android.lisp.LessThanOperatorHandler -> com.batch.android.m0.l:
    1:1:void <init>():380:380 -> <init>
    1:1:com.batch.android.lisp.Value run(com.batch.android.lisp.EvaluationContext,java.util.ArrayList):385:385 -> a
    2:2:boolean lambda$run$0(java.lang.Number,java.lang.Number):387:387 -> a
com.batch.android.lisp.LessThanOrEqualOperatorHandler -> com.batch.android.m0.m:
    1:1:void <init>():392:392 -> <init>
    1:1:com.batch.android.lisp.Value run(com.batch.android.lisp.EvaluationContext,java.util.ArrayList):397:397 -> a
    2:2:boolean lambda$run$0(java.lang.Number,java.lang.Number):398:398 -> a
com.batch.android.lisp.LowerOperatorHandler -> com.batch.android.m0.n:
    1:1:void <init>():444:444 -> <init>
    1:1:com.batch.android.lisp.Value run(com.batch.android.lisp.EvaluationContext,java.util.ArrayList):449:449 -> a
    2:2:java.lang.String lambda$run$0(java.lang.String):451:451 -> a
com.batch.android.lisp.MetaContext -> com.batch.android.m0.o:
    java.util.ArrayList contexts -> a
    1:2:void <init>(java.util.ArrayList):17:18 -> <init>
    1:2:com.batch.android.lisp.Value resolveVariableNamed(java.lang.String):25:26 -> a
com.batch.android.lisp.NativeAttributeContext -> com.batch.android.m0.p:
    android.content.Context context -> a
    1:2:void <init>(android.content.Context):12:13 -> <init>
    1:7:com.batch.android.lisp.Value resolveVariableNamed(java.lang.String):19:25 -> a
com.batch.android.lisp.NotOperatorHandler -> com.batch.android.m0.q:
    1:1:void <init>():338:338 -> <init>
    1:11:com.batch.android.lisp.Value run(com.batch.android.lisp.EvaluationContext,java.util.ArrayList):343:353 -> a
    12:12:com.batch.android.lisp.Value run(com.batch.android.lisp.EvaluationContext,java.util.ArrayList):350:350 -> a
com.batch.android.lisp.NumberOperation -> com.batch.android.m0.r:
    boolean performOperation(java.lang.Number,java.lang.Number) -> a
com.batch.android.lisp.Operator -> com.batch.android.m0.s:
    com.batch.android.lisp.OperatorHandler handler -> b
    java.lang.String symbol -> a
    1:3:void <init>(java.lang.String,com.batch.android.lisp.OperatorHandler):10:12 -> <init>
com.batch.android.lisp.OperatorHandler -> com.batch.android.m0.t:
    com.batch.android.lisp.Value run(com.batch.android.lisp.EvaluationContext,java.util.ArrayList) -> a
com.batch.android.lisp.OperatorProvider -> com.batch.android.m0.u:
    java.util.HashMap _operators -> a
    java.text.NumberFormat numberFormatter -> b
    1:3:void <init>():19:21 -> <init>
    1:1:com.batch.android.lisp.Operator operatorForSymbol(java.lang.String):27:27 -> a
    2:16:void setupOperators():32:46 -> a
    17:17:void addOperator(com.batch.android.lisp.Operator):51:51 -> a
    18:23:java.lang.String numberToString(java.lang.Number):56:61 -> a
    24:64:com.batch.android.lisp.Value performNumberOperationOnValues(java.util.ArrayList,java.lang.String,com.batch.android.lisp.NumberOperation):68:108 -> a
    65:106:com.batch.android.lisp.Value performSetOperationOnValues(java.util.ArrayList,java.lang.String,com.batch.android.lisp.SetOperation):115:156 -> a
    107:107:com.batch.android.lisp.Value performSetOperationOnValues(java.util.ArrayList,java.lang.String,com.batch.android.lisp.SetOperation):143:143 -> a
    108:108:com.batch.android.lisp.Value performSetOperationOnValues(java.util.ArrayList,java.lang.String,com.batch.android.lisp.SetOperation):138:138 -> a
    109:141:com.batch.android.lisp.Value performStringOperationOnValues(java.util.ArrayList,java.lang.String,com.batch.android.lisp.StringOperation):167:199 -> a
com.batch.android.lisp.OperatorValue -> com.batch.android.m0.v:
    com.batch.android.lisp.Operator operator -> a
    1:2:void <init>(com.batch.android.lisp.Operator):9:10 -> <init>
    1:4:boolean equals(java.lang.Object):18:21 -> equals
    1:1:java.lang.String toString():28:28 -> toString
com.batch.android.lisp.OrOperatorHandler -> com.batch.android.m0.w:
    1:1:void <init>():267:267 -> <init>
    1:17:com.batch.android.lisp.Value run(com.batch.android.lisp.EvaluationContext,java.util.ArrayList):272:288 -> a
    18:26:com.batch.android.lisp.Value run(com.batch.android.lisp.EvaluationContext,java.util.ArrayList):283:291 -> a
com.batch.android.lisp.ParseStringOperatorHandler -> com.batch.android.m0.x:
    1:1:void <init>():469:469 -> <init>
    1:18:com.batch.android.lisp.Value run(com.batch.android.lisp.EvaluationContext,java.util.ArrayList):474:491 -> a
com.batch.android.lisp.Parser -> com.batch.android.m0.y:
    char TOKEN_DELIMITER_VARIABLE -> h
    com.batch.android.lisp.OperatorProvider operators -> f
    char TOKEN_DELIMITER_LIST_START -> j
    java.text.NumberFormat numberFormatter -> g
    char TOKEN_DELIMITER_STRING -> i
    char TOKEN_DELIMITER_STRING_ARRAY_START -> k
    boolean endReached -> e
    boolean isConsumed -> a
    int _pos -> b
    int _maxPos -> c
    java.lang.String input -> d
    1:9:void <init>(java.lang.String):29:37 -> <init>
    1:9:java.lang.Character getNextChar():58:66 -> a
    10:10:com.batch.android.lisp.ErrorValue errorUnexpectedEOF(java.lang.String):282:282 -> a
    1:12:com.batch.android.lisp.Value parse():42:53 -> b
    13:13:com.batch.android.lisp.ErrorValue errorWithMessage(java.lang.String):270:270 -> b
    1:49:com.batch.android.lisp.Value parseList():74:122 -> c
    50:92:com.batch.android.lisp.Value parseList():84:126 -> c
    93:93:com.batch.android.lisp.ErrorValue errorWithPositionAndMessage(java.lang.String):276:276 -> c
    1:28:com.batch.android.lisp.Value parseString():162:189 -> d
    29:32:com.batch.android.lisp.Value parseString():177:180 -> d
    33:33:com.batch.android.lisp.Value parseString():174:174 -> d
    34:49:com.batch.android.lisp.Value parseString():171:186 -> d
    50:70:com.batch.android.lisp.Value parseString():183:203 -> d
    71:72:com.batch.android.lisp.PrimitiveValue parseNumber(java.lang.String):228:229 -> d
    1:27:com.batch.android.lisp.Value parseStringArray():131:157 -> e
    28:34:com.batch.android.lisp.OperatorValue parseOperator(java.lang.String):238:244 -> e
    1:7:com.batch.android.lisp.PrimitiveValue parseSpecial(java.lang.String):209:215 -> f
    8:13:com.batch.android.lisp.PrimitiveValue parseSpecial(java.lang.String):213:218 -> f
    14:29:com.batch.android.lisp.Value parseVariable():249:264 -> f
    1:1:java.lang.String stringByTrimmingWhiteSpaceAndNewline(java.lang.String):288:288 -> g
com.batch.android.lisp.PrimitiveValue -> com.batch.android.m0.z:
    com.batch.android.lisp.PrimitiveValue$Type type -> a
    java.lang.Object value -> b
    1:3:void <init>(com.batch.android.lisp.PrimitiveValue$Type,java.lang.Object):47:49 -> <init>
    4:4:void <init>(java.lang.String):54:54 -> <init>
    5:5:void <init>(java.lang.Double):59:59 -> <init>
    6:6:void <init>(java.lang.Integer):64:64 -> <init>
    7:7:void <init>(java.lang.Boolean):69:69 -> <init>
    8:8:void <init>(java.util.Set):74:74 -> <init>
    1:1:com.batch.android.lisp.PrimitiveValue nilValue():43:43 -> a
    1:5:boolean equals(java.lang.Object):82:86 -> equals
    1:10:java.lang.String toString():96:105 -> toString
com.batch.android.lisp.PrimitiveValue$1 -> com.batch.android.m0.z$a:
    int[] $SwitchMap$com$batch$android$lisp$PrimitiveValue$Type -> a
    1:1:void <clinit>():21:21 -> <clinit>
com.batch.android.lisp.PrimitiveValue$Type -> com.batch.android.m0.z$b:
    com.batch.android.lisp.PrimitiveValue$Type Bool -> d
    com.batch.android.lisp.PrimitiveValue$Type[] $VALUES -> f
    com.batch.android.lisp.PrimitiveValue$Type Double -> c
    com.batch.android.lisp.PrimitiveValue$Type String -> b
    com.batch.android.lisp.PrimitiveValue$Type Nil -> a
    com.batch.android.lisp.PrimitiveValue$Type StringSet -> e
    1:5:void <clinit>():12:16 -> <clinit>
    6:6:void <clinit>():10:10 -> <clinit>
    1:1:void <init>(java.lang.String,int):10:10 -> <init>
    1:1:java.lang.String toString():21:21 -> toString
    1:1:com.batch.android.lisp.PrimitiveValue$Type valueOf(java.lang.String):10:10 -> valueOf
    1:1:com.batch.android.lisp.PrimitiveValue$Type[] values():10:10 -> values
com.batch.android.lisp.Reduceable -> com.batch.android.m0.a0:
    com.batch.android.lisp.Value reduce(com.batch.android.lisp.EvaluationContext) -> a
com.batch.android.lisp.SExpression -> com.batch.android.m0.b0:
    java.util.ArrayList values -> a
    1:2:void <init>(java.util.ArrayList):10:11 -> <init>
    1:43:com.batch.android.lisp.Value reduce(com.batch.android.lisp.EvaluationContext):29:71 -> a
    1:4:boolean equals(java.lang.Object):19:22 -> equals
    1:13:java.lang.String toString():77:89 -> toString
com.batch.android.lisp.SetOperation -> com.batch.android.m0.c0:
    boolean performOperation(java.util.Set,java.util.Set) -> a
com.batch.android.lisp.StringOperation -> com.batch.android.m0.d0:
    java.lang.String performOperation(java.lang.String) -> a
com.batch.android.lisp.UpperOperatorHandler -> com.batch.android.m0.e0:
    1:1:void <init>():455:455 -> <init>
    1:1:com.batch.android.lisp.Value run(com.batch.android.lisp.EvaluationContext,java.util.ArrayList):460:460 -> a
    2:2:java.lang.String lambda$run$0(java.lang.String):462:462 -> a
com.batch.android.lisp.UserAttributeContext -> com.batch.android.m0.f0:
    java.util.Map attributes -> b
    java.util.Map tagCollections -> c
    com.batch.android.user.UserDatasource dataSource -> a
    1:2:void <init>(com.batch.android.user.UserDatasource):17:18 -> <init>
    1:29:com.batch.android.lisp.Value resolveVariableNamed(java.lang.String):28:56 -> a
    30:31:void fetchAttributes():65:66 -> a
    32:59:com.batch.android.lisp.Value attributeToValue(com.batch.android.user.UserAttribute):80:107 -> a
    60:61:com.batch.android.lisp.Value attributeToValue(com.batch.android.user.UserAttribute):102:103 -> a
    62:63:com.batch.android.lisp.Value attributeToValue(com.batch.android.user.UserAttribute):97:98 -> a
    64:65:com.batch.android.lisp.Value attributeToValue(com.batch.android.user.UserAttribute):91:92 -> a
    66:91:com.batch.android.lisp.Value attributeToValue(com.batch.android.user.UserAttribute):85:110 -> a
    1:2:void fetchTags():72:73 -> b
com.batch.android.lisp.UserAttributeContext$1 -> com.batch.android.m0.f0$a:
    int[] $SwitchMap$com$batch$android$user$AttributeType -> a
    1:1:void <clinit>():83:83 -> <clinit>
com.batch.android.lisp.Value -> com.batch.android.m0.g0:
    1:1:void <init>():24:24 -> <init>
    1:5:java.lang.String escapedString(java.lang.String):28:32 -> a
    6:25:java.lang.String setToString(java.util.Set):38:57 -> a
com.batch.android.lisp.VariableValue -> com.batch.android.m0.h0:
    java.lang.String name -> a
    1:2:void <init>(java.lang.String):12:13 -> <init>
    1:3:com.batch.android.lisp.Value reduce(com.batch.android.lisp.EvaluationContext):38:40 -> a
    1:4:boolean equals(java.lang.Object):21:24 -> equals
    1:1:java.lang.String toString():32:32 -> toString
com.batch.android.lisp.WriteToStringOperatorHandler -> com.batch.android.m0.i0:
    1:1:void <init>():499:499 -> <init>
    1:25:com.batch.android.lisp.Value run(com.batch.android.lisp.EvaluationContext,java.util.ArrayList):504:528 -> a
    26:30:com.batch.android.lisp.Value run(com.batch.android.lisp.EvaluationContext,java.util.ArrayList):522:526 -> a
    31:35:com.batch.android.lisp.Value run(com.batch.android.lisp.EvaluationContext,java.util.ArrayList):516:520 -> a
    36:36:com.batch.android.lisp.Value run(com.batch.android.lisp.EvaluationContext,java.util.ArrayList):514:514 -> a
com.batch.android.lisp.WriteToStringOperatorHandler$1 -> com.batch.android.m0.i0$a:
    int[] $SwitchMap$com$batch$android$lisp$PrimitiveValue$Type -> a
    1:1:void <clinit>():510:510 -> <clinit>
com.batch.android.localcampaigns.CampaignManager -> com.batch.android.n0.a:
    java.util.Set watchedEventNames -> g
    java.lang.String PERSISTENCE_LOCAL_CAMPAIGNS_FILE_NAME -> i
    java.lang.String TAG -> h
    java.util.concurrent.atomic.AtomicBoolean campaignsLoaded -> f
    com.batch.android.core.DateProvider dateProvider -> a
    java.util.List campaignList -> d
    java.lang.Object campaignListLock -> e
    com.batch.android.localcampaigns.persistence.LocalCampaignsPersistence persistor -> c
    com.batch.android.localcampaigns.LocalCampaignsSQLTracker viewTracker -> b
    1:1:void <init>(com.batch.android.localcampaigns.LocalCampaignsSQLTracker):75:75 -> <init>
    2:25:void <init>(com.batch.android.localcampaigns.LocalCampaignsSQLTracker):53:76 -> <init>
    1:9:void deleteAllCampaigns(android.content.Context,boolean):129:137 -> a
    10:32:com.batch.android.localcampaigns.model.LocalCampaign getCampaignToDisplay(com.batch.android.localcampaigns.signal.Signal):146:168 -> a
    33:47:com.batch.android.localcampaigns.model.LocalCampaign getCampaignToDisplay(com.batch.android.localcampaigns.signal.Signal):167:181 -> a
    48:49:int lambda$getCampaignToDisplay$0(com.batch.android.localcampaigns.model.LocalCampaign,com.batch.android.localcampaigns.model.LocalCampaign):169:170 -> a
    50:50:boolean isEventWatched(java.lang.String):192:192 -> a
    51:80:java.util.List cleanCampaignList(java.util.List):212:241 -> a
    81:94:boolean isCampaignOverCapping(com.batch.android.localcampaigns.model.LocalCampaign,boolean):254:267 -> a
    95:132:boolean isCampaignDisplayable(com.batch.android.localcampaigns.model.LocalCampaign):284:321 -> a
    133:133:boolean isCampaignDisplayable(com.batch.android.localcampaigns.model.LocalCampaign):308:308 -> a
    134:134:void lambda$saveCampaignsResponseAsync$1(android.content.Context,com.batch.android.json.JSONObject):358:358 -> a
    135:137:boolean hasSavedCampaigns(android.content.Context):365:367 -> a
    138:138:boolean areCampaignsLoaded():403:403 -> a
    1:29:void updateCampaignList(java.util.List):93:121 -> b
    30:32:void saveCampaignsResponse(android.content.Context,com.batch.android.json.JSONObject):349:351 -> b
    33:54:boolean loadSavedCampaignResponse(android.content.Context):376:397 -> b
    55:55:boolean loadSavedCampaignResponse(android.content.Context):393:393 -> b
    56:56:boolean loadSavedCampaignResponse(android.content.Context):378:378 -> b
    57:61:void closeViewTracker():421:425 -> b
    1:1:java.util.List getCampaignList():200:200 -> c
    2:2:void saveCampaignsResponseAsync(android.content.Context,com.batch.android.json.JSONObject):358:358 -> c
    1:1:com.batch.android.localcampaigns.ViewTracker getViewTracker():431:431 -> d
    1:4:void openViewTracker():408:411 -> e
    1:1:com.batch.android.localcampaigns.CampaignManager provide():82:82 -> f
    1:10:void updateWatchedEventNames():334:343 -> g
com.batch.android.localcampaigns.LocalCampaignTrackDbHelper -> com.batch.android.n0.b:
    java.lang.String SQL_CREATE_ENTRIES -> c
    java.lang.String DATABASE_NAME -> b
    int DATABASE_VERSION -> a
    java.lang.String SQL_DELETE_ENTRIES -> d
    1:1:void <init>(android.content.Context):37:37 -> <init>
    1:9:java.lang.String getTableAsString(android.database.sqlite.SQLiteDatabase):63:71 -> a
    10:22:java.lang.String getTableAsString(android.database.sqlite.SQLiteDatabase):70:82 -> a
    1:1:void onCreate(android.database.sqlite.SQLiteDatabase):43:43 -> onCreate
com.batch.android.localcampaigns.LocalCampaignTrackDbHelper$LocalCampaignEntry -> com.batch.android.n0.b$a:
    java.lang.String TABLE_NAME -> a
    java.lang.String COLUMN_NAME_CAMPAIGN_KIND -> c
    java.lang.String COLUMN_NAME_CAMPAIGN_ID -> b
    java.lang.String COLUMN_NAME_CAMPAIGN_COUNT -> e
    java.lang.String COLUMN_NAME_CAMPAIGN_LAST_OCCURRENCE -> d
    1:1:void <init>():14:14 -> <init>
com.batch.android.localcampaigns.LocalCampaignsSQLTracker -> com.batch.android.n0.c:
    java.lang.String TAG -> f
    com.batch.android.core.DateProvider dateProvider -> d
    android.database.sqlite.SQLiteDatabase database -> c
    boolean open -> e
    com.batch.android.localcampaigns.LocalCampaignTrackDbHelper dbHelper -> b
    1:1:void <init>():29:29 -> <init>
    2:6:void <init>():26:30 -> <init>
    7:7:void <init>(com.batch.android.core.DateProvider):35:35 -> <init>
    8:18:void <init>(com.batch.android.core.DateProvider):26:36 -> <init>
    1:2:void open(android.content.Context):41:42 -> a
    3:7:void close():47:51 -> a
    8:8:void setDateProvider(com.batch.android.core.DateProvider):66:66 -> a
    9:30:java.util.Map getViewCounts(java.util.List):124:145 -> a
    31:46:java.util.Map getViewCounts(java.util.List):139:154 -> a
    47:58:long campaignLastOccurrence(java.lang.String):163:174 -> a
    1:13:com.batch.android.localcampaigns.ViewTracker$CountedViewEvent trackViewEvent(java.lang.String):78:90 -> b
    14:14:com.batch.android.localcampaigns.ViewTracker$CountedViewEvent trackViewEvent(java.lang.String):84:84 -> b
    15:23:void ensureWritableDatabase():181:189 -> b
    24:24:void ensureWritableDatabase():183:183 -> b
    1:1:com.batch.android.core.DateProvider getDateProvider():61:61 -> c
    2:18:com.batch.android.localcampaigns.ViewTracker$CountedViewEvent getViewEvent(java.lang.String):99:115 -> c
    1:1:boolean isOpen():56:56 -> d
com.batch.android.localcampaigns.ViewTracker -> com.batch.android.n0.d:
    int KIND_VIEW -> a
    long campaignLastOccurrence(java.lang.String) -> a
    java.util.Map getViewCounts(java.util.List) -> a
    com.batch.android.localcampaigns.ViewTracker$CountedViewEvent trackViewEvent(java.lang.String) -> b
    com.batch.android.localcampaigns.ViewTracker$CountedViewEvent getViewEvent(java.lang.String) -> c
com.batch.android.localcampaigns.ViewTracker$CountedViewEvent -> com.batch.android.n0.d$a:
    java.lang.String campaignID -> a
    long lastOccurrence -> c
    int count -> b
    1:1:void <init>(java.lang.String):56:56 -> <init>
    2:8:void <init>(java.lang.String):51:57 -> <init>
com.batch.android.localcampaigns.ViewTrackerUnavailableException -> com.batch.android.n0.e:
    1:1:void <init>():6:6 -> <init>
com.batch.android.localcampaigns.model.LocalCampaign -> com.batch.android.n0.f.a:
    java.lang.Integer maximumAPILevel -> c
    com.batch.android.localcampaigns.model.LocalCampaign$Output output -> i
    java.lang.Integer capping -> h
    java.lang.String publicToken -> m
    com.batch.android.json.JSONObject customPayload -> n
    boolean persist -> l
    java.lang.String TAG -> o
    int minimumDisplayInterval -> g
    int priority -> d
    java.lang.Integer minimumAPILevel -> b
    java.lang.String id -> a
    com.batch.android.json.JSONObject eventData -> j
    com.batch.android.date.BatchDate startDate -> e
    com.batch.android.date.BatchDate endDate -> f
    java.util.List triggers -> k
    1:107:void <init>():17:123 -> <init>
    1:1:void displayMessage():150:150 -> a
    1:3:void generateOccurrenceID():134:136 -> b
com.batch.android.localcampaigns.model.LocalCampaign$Output -> com.batch.android.n0.f.a$a:
    com.batch.android.json.JSONObject payload -> a
    1:2:void <init>(com.batch.android.json.JSONObject):162:163 -> <init>
    boolean displayMessage(com.batch.android.localcampaigns.model.LocalCampaign) -> a
com.batch.android.localcampaigns.model.LocalCampaign$Trigger -> com.batch.android.n0.f.a$b:
com.batch.android.localcampaigns.output.LandingOutput -> com.batch.android.n0.g.a:
    com.batch.android.module.MessagingModule messagingModule -> b
    1:2:void <init>(com.batch.android.module.MessagingModule,com.batch.android.json.JSONObject):23:24 -> <init>
    1:2:com.batch.android.localcampaigns.output.LandingOutput provide(com.batch.android.json.JSONObject):30:31 -> a
    3:17:boolean displayMessage(com.batch.android.localcampaigns.model.LocalCampaign):41:55 -> a
com.batch.android.localcampaigns.persistence.LocalCampaignsFilePersistence -> com.batch.android.n0.h.a:
    java.lang.String TAG -> a
    int PERSISTENCE_CURRENT_FILE_VERSION -> d
    java.lang.String PERSISTENCE_SAVE_VERSION_KEY -> c
    java.lang.String PERSISTENCE_TMP_FILE_PREFIX -> b
    1:1:void <init>():22:22 -> <init>
    1:74:void persistData(android.content.Context,com.batch.android.json.JSONObject,java.lang.String):44:117 -> a
    75:113:com.batch.android.json.JSONObject loadData(android.content.Context,java.lang.String):129:167 -> a
    114:114:com.batch.android.json.JSONObject loadData(android.content.Context,java.lang.String):151:151 -> a
    115:115:com.batch.android.json.JSONObject loadData(android.content.Context,java.lang.String):143:143 -> a
    1:1:boolean hasSavedData(android.content.Context,java.lang.String):36:36 -> b
    1:6:void deleteData(android.content.Context,java.lang.String):178:183 -> c
com.batch.android.localcampaigns.persistence.LocalCampaignsPersistence -> com.batch.android.n0.h.b:
    com.batch.android.json.JSONObject loadData(android.content.Context,java.lang.String) -> a
    void persistData(android.content.Context,com.batch.android.json.JSONObject,java.lang.String) -> a
    boolean hasSavedData(android.content.Context,java.lang.String) -> b
    void deleteData(android.content.Context,java.lang.String) -> c
com.batch.android.localcampaigns.persistence.PersistenceException -> com.batch.android.n0.h.c:
    1:1:void <init>():6:6 -> <init>
    2:2:void <init>(java.lang.String):11:11 -> <init>
    3:3:void <init>(java.lang.String,java.lang.Throwable):16:16 -> <init>
    4:4:void <init>(java.lang.Throwable):21:21 -> <init>
com.batch.android.localcampaigns.signal.CampaignsLoadedSignal -> com.batch.android.n0.i.a:
    1:1:void <init>():15:15 -> <init>
    1:1:boolean satisfiesTrigger(com.batch.android.localcampaigns.model.LocalCampaign$Trigger):19:19 -> a
com.batch.android.localcampaigns.signal.CampaignsRefreshedSignal -> com.batch.android.n0.i.b:
    1:1:void <init>():14:14 -> <init>
    1:1:boolean satisfiesTrigger(com.batch.android.localcampaigns.model.LocalCampaign$Trigger):18:18 -> a
com.batch.android.localcampaigns.signal.EventTrackedSignal -> com.batch.android.n0.i.c:
    com.batch.android.json.JSONObject parameters -> b
    java.lang.String name -> a
    1:3:void <init>(java.lang.String,com.batch.android.json.JSONObject):22:24 -> <init>
    1:1:boolean satisfiesTrigger(com.batch.android.localcampaigns.model.LocalCampaign$Trigger):29:29 -> a
com.batch.android.localcampaigns.signal.NewSessionSignal -> com.batch.android.n0.i.d:
    1:1:void <init>():11:11 -> <init>
    1:1:boolean satisfiesTrigger(com.batch.android.localcampaigns.model.LocalCampaign$Trigger):16:16 -> a
com.batch.android.localcampaigns.signal.PublicEventTrackedSignal -> com.batch.android.n0.i.e:
    java.lang.String label -> c
    1:11:void <init>(com.batch.android.localcampaigns.signal.EventTrackedSignal):22:32 -> <init>
    12:12:void <init>(com.batch.android.localcampaigns.signal.EventTrackedSignal):31:31 -> <init>
    1:1:boolean satisfiesTrigger(com.batch.android.localcampaigns.model.LocalCampaign$Trigger):40:40 -> a
    2:2:boolean isPublic(com.batch.android.localcampaigns.signal.EventTrackedSignal):47:47 -> a
com.batch.android.localcampaigns.signal.Signal -> com.batch.android.n0.i.f:
    boolean satisfiesTrigger(com.batch.android.localcampaigns.model.LocalCampaign$Trigger) -> a
com.batch.android.localcampaigns.trigger.CampaignsLoadedTrigger -> com.batch.android.n0.j.a:
    1:1:void <init>():5:5 -> <init>
com.batch.android.localcampaigns.trigger.CampaignsRefreshedTrigger -> com.batch.android.n0.j.b:
    1:1:void <init>():5:5 -> <init>
com.batch.android.localcampaigns.trigger.EventLocalCampaignTrigger -> com.batch.android.n0.j.c:
    java.lang.String name -> a
    java.lang.String label -> b
    1:3:void <init>(java.lang.String,java.lang.String):31:33 -> <init>
    1:5:boolean isSatisfied(java.lang.String,java.lang.String):43:47 -> a
com.batch.android.localcampaigns.trigger.NextSessionTrigger -> com.batch.android.n0.j.d:
    1:1:void <init>():8:8 -> <init>
com.batch.android.localcampaigns.trigger.NowTrigger -> com.batch.android.n0.j.e:
    1:1:void <init>():9:9 -> <init>
com.batch.android.messaging.AsyncImageDownloadTask -> com.batch.android.messaging.a:
    java.lang.ref.WeakReference weakListener -> a
    java.lang.String TAG -> b
    1:2:void <init>(com.batch.android.messaging.AsyncImageDownloadTask$ImageDownloadListener):88:89 -> <init>
    1:66:com.batch.android.messaging.AsyncImageDownloadTask$Result doInBackground(java.lang.String[]):104:169 -> a
    67:89:com.batch.android.messaging.AsyncImageDownloadTask$Result doInBackground(java.lang.String[]):147:169 -> a
    90:102:com.batch.android.messaging.AsyncImageDownloadTask$Result doInBackground(java.lang.String[]):150:162 -> a
    103:116:com.batch.android.messaging.AsyncImageDownloadTask$Result doInBackground(java.lang.String[]):156:169 -> a
    117:128:com.batch.android.messaging.AsyncImageDownloadTask$Result doInBackground(java.lang.String[]):162:173 -> a
    129:129:com.batch.android.messaging.AsyncImageDownloadTask$Result doInBackground(java.lang.String[]):115:115 -> a
    130:135:void onPostExecute(com.batch.android.messaging.AsyncImageDownloadTask$Result):181:186 -> a
    1:1:java.lang.Object doInBackground(java.lang.Object[]):31:31 -> doInBackground
    1:1:void onPostExecute(java.lang.Object):31:31 -> onPostExecute
    1:3:void onPreExecute():95:97 -> onPreExecute
com.batch.android.messaging.AsyncImageDownloadTask$BitmapResult -> com.batch.android.messaging.a$a:
    1:1:void <init>(java.lang.String,android.graphics.Bitmap):62:62 -> <init>
com.batch.android.messaging.AsyncImageDownloadTask$GIFResult -> com.batch.android.messaging.a$b:
    1:1:void <init>(java.lang.String,byte[]):70:70 -> <init>
com.batch.android.messaging.AsyncImageDownloadTask$ImageDownloadListener -> com.batch.android.messaging.a$c:
    void onImageDownloadSuccess(com.batch.android.messaging.AsyncImageDownloadTask$Result) -> b
    void onImageDownloadStart() -> d
    void onImageDownloadError() -> e
com.batch.android.messaging.AsyncImageDownloadTask$Result -> com.batch.android.messaging.a$d:
    java.lang.Object value -> b
    java.lang.String key -> a
    1:3:void <init>(java.lang.String,java.lang.Object):42:44 -> <init>
    1:1:java.lang.Object get():54:54 -> a
    1:1:java.lang.String getKey():49:49 -> b
com.batch.android.messaging.ModalContentPanGestureDetector -> com.batch.android.messaging.b:
    boolean shouldDismissOnTouchUp -> m
    boolean allowHorizontalPanning -> n
    int touchSlop -> l
    float initialInterceptYOffset -> i
    float initialInterceptXOffset -> h
    float initialSwipeYOffset -> g
    float initialSwipeXOffset -> f
    boolean isPanning -> k
    android.view.GestureDetector detector -> b
    float SPRING_STIFFNESS -> w
    float SCALE_RATIO_DISMISS_THRESHOLD -> v
    float SMALLEST_SCALE_RATIO -> u
    float DISMISS_THRESHOLD_MINIMUM_VELOCITY -> t
    com.batch.android.messaging.ModalContentPanGestureDetector$OnDismissListener dismissListener -> a
    android.os.Vibrator vibrator -> d
    boolean supportsAndroidXAnimation -> e
    float DISMISSABLE_TARGET_ALPHA -> s
    float SCALE_PAN_MULTIPLIER -> r
    android.view.View targetView -> c
    java.lang.Object[] cancellationAnimations -> j
    float TRANSLATION_PAN_MULTIPLIER -> q
    long ANIMATION_DURATION_FAST -> p
    long ANIMATION_DURATION -> o
    1:1:void <init>(android.content.Context,boolean):104:104 -> <init>
    2:64:void <init>(android.content.Context,boolean):55:117 -> <init>
    1:2:void attach(com.batch.android.messaging.view.DelegatedTouchEventViewGroup,android.view.View):129:130 -> a
    3:3:void setDismissListener(com.batch.android.messaging.ModalContentPanGestureDetector$OnDismissListener):135:135 -> a
    4:7:void beginPan(float,float):152:155 -> a
    8:19:void cancelCancellationAnimation():225:236 -> a
    20:47:boolean onInterceptTouchEvent(android.view.MotionEvent,com.batch.android.messaging.view.DelegatedTouchEventViewGroup):244:271 -> a
    48:48:boolean onInterceptTouchEvent(android.view.MotionEvent,com.batch.android.messaging.view.DelegatedTouchEventViewGroup):248:248 -> a
    49:144:boolean onTouchEvent(android.view.MotionEvent,com.batch.android.messaging.view.DelegatedTouchEventViewGroup,boolean):287:382 -> a
    145:197:boolean onTouchEvent(android.view.MotionEvent,com.batch.android.messaging.view.DelegatedTouchEventViewGroup,boolean):296:348 -> a
    198:198:boolean onTouchEvent(android.view.MotionEvent,com.batch.android.messaging.view.DelegatedTouchEventViewGroup,boolean):347:347 -> a
    199:229:boolean onTouchEvent(android.view.MotionEvent,com.batch.android.messaging.view.DelegatedTouchEventViewGroup,boolean):346:376 -> a
    230:323:boolean onTouchEvent(android.view.MotionEvent,com.batch.android.messaging.view.DelegatedTouchEventViewGroup,boolean):293:386 -> a
    1:2:void dismiss():140:141 -> b
    3:3:boolean hasPassedTouchSlop(float,float):147:147 -> b
    1:3:void shouldDismissChanged():393:395 -> c
    1:32:void startCancelAnimation():160:191 -> d
    1:3:void startFallbackCancelAnimation():197:197 -> e
    6:8:void startFallbackCancelAnimation():200:200 -> e
    11:13:void startFallbackCancelAnimation():203:203 -> e
    16:18:void startFallbackCancelAnimation():206:206 -> e
    21:32:void startFallbackCancelAnimation():209:220 -> e
    1:4:void vibrate():400:403 -> f
    1:11:boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float):440:450 -> onFling
com.batch.android.messaging.ModalContentPanGestureDetector$OnDismissListener -> com.batch.android.messaging.b$a:
    void onPanDismiss() -> g
com.batch.android.messaging.PayloadParser -> com.batch.android.messaging.c:
    java.lang.String TAG -> a
    1:1:void <init>():35:35 -> <init>
    1:13:com.batch.android.messaging.model.AlertMessage parseAlertPayload(com.batch.android.json.JSONObject,com.batch.android.messaging.model.AlertMessage):136:148 -> a
    14:53:com.batch.android.messaging.model.UniversalMessage parseUniversalPayload(com.batch.android.json.JSONObject,com.batch.android.messaging.model.UniversalMessage):158:197 -> a
    54:54:com.batch.android.messaging.model.BannerMessage parseBannerPayload(com.batch.android.json.JSONObject,com.batch.android.messaging.model.BannerMessage):206:206 -> a
    55:55:com.batch.android.messaging.model.ModalMessage parseModalPayload(com.batch.android.json.JSONObject,com.batch.android.messaging.model.ModalMessage):213:213 -> a
    56:92:void parseBaseBannerPayload(com.batch.android.json.JSONObject,com.batch.android.messaging.model.BaseBannerMessage):220:256 -> a
    93:93:void parseBaseBannerPayload(com.batch.android.json.JSONObject,com.batch.android.messaging.model.BaseBannerMessage):253:253 -> a
    94:112:void parseBaseBannerPayload(com.batch.android.json.JSONObject,com.batch.android.messaging.model.BaseBannerMessage):250:268 -> a
    113:128:com.batch.android.messaging.model.ImageMessage parseImagePayload(com.batch.android.json.JSONObject,com.batch.android.messaging.model.ImageMessage):275:290 -> a
    129:147:com.batch.android.messaging.model.ImageMessage parseImagePayload(com.batch.android.json.JSONObject,com.batch.android.messaging.model.ImageMessage):288:306 -> a
    148:152:com.batch.android.messaging.model.ImageMessage parseImagePayload(com.batch.android.json.JSONObject,com.batch.android.messaging.model.ImageMessage):297:301 -> a
    153:153:com.batch.android.messaging.model.ImageMessage parseImagePayload(com.batch.android.json.JSONObject,com.batch.android.messaging.model.ImageMessage):283:283 -> a
    154:161:com.batch.android.messaging.model.Action parseAction(com.batch.android.json.JSONObject):313:320 -> a
    162:168:android.text.Spanned parseHtmlString(java.lang.String):344:350 -> a
    1:34:com.batch.android.messaging.model.Message parseBasePayload(com.batch.android.json.JSONObject):95:128 -> b
    35:35:com.batch.android.messaging.model.Message parseBasePayload(com.batch.android.json.JSONObject):110:110 -> b
    1:9:com.batch.android.messaging.model.CTA parseCTA(com.batch.android.json.JSONObject):325:333 -> c
    1:38:com.batch.android.messaging.model.Message parsePayload(com.batch.android.json.JSONObject):48:85 -> d
    39:39:com.batch.android.messaging.model.Message parsePayload(com.batch.android.json.JSONObject):50:50 -> d
    40:40:com.batch.android.messaging.model.Message parsePayload(com.batch.android.json.JSONObject):42:42 -> d
com.batch.android.messaging.PayloadParsingException -> com.batch.android.messaging.d:
    1:1:void <init>():11:11 -> <init>
    2:2:void <init>(java.lang.String):16:16 -> <init>
    3:3:void <init>(java.lang.String,java.lang.Throwable):21:21 -> <init>
    4:4:void <init>(java.lang.Throwable):26:26 -> <init>
com.batch.android.messaging.Size2D -> com.batch.android.messaging.Size2D:
    int height -> b
    int width -> a
    1:1:void <clinit>():57:57 -> <clinit>
    1:3:void <init>(int,int):17:19 -> <init>
    4:6:void <init>(android.os.Parcel):23:25 -> <init>
    1:3:boolean equals(java.lang.Object):32:34 -> equals
    1:1:int hashCode():41:41 -> hashCode
    1:2:void writeToParcel(android.os.Parcel,int):47:48 -> writeToParcel
com.batch.android.messaging.Size2D$1 -> com.batch.android.messaging.Size2D$a:
    1:1:void <init>():58:58 -> <init>
    1:1:com.batch.android.messaging.Size2D createFromParcel(android.os.Parcel):62:62 -> a
    2:2:com.batch.android.messaging.Size2D[] newArray(int):68:68 -> a
    1:1:java.lang.Object createFromParcel(android.os.Parcel):58:58 -> createFromParcel
    1:1:java.lang.Object[] newArray(int):58:58 -> newArray
com.batch.android.messaging.css.CSSParsingException -> com.batch.android.messaging.e.a:
    1:1:void <init>():9:9 -> <init>
    2:2:void <init>(java.lang.String):14:14 -> <init>
    3:3:void <init>(java.lang.String,java.lang.Throwable):19:19 -> <init>
    4:4:void <init>(java.lang.Throwable):24:24 -> <init>
com.batch.android.messaging.css.DOMNode -> com.batch.android.messaging.e.b:
    java.util.List classes -> c
    java.lang.String type -> a
    java.lang.String identifier -> b
    1:2:void <init>():23:24 -> <init>
    3:7:void <init>(java.lang.String,java.lang.String[]):28:32 -> <init>
    1:23:boolean matchesSelector(java.lang.String):38:60 -> a
com.batch.android.messaging.css.Declaration -> com.batch.android.messaging.e.c:
    java.lang.String name -> a
    java.lang.String value -> b
    1:1:void <init>():6:6 -> <init>
com.batch.android.messaging.css.Document -> com.batch.android.messaging.e.d:
    java.util.List mediaQueries -> b
    java.util.List rulesets -> a
    java.util.regex.Pattern MEDIA_QUERY_PATTERN -> d
    java.lang.String TAG -> c
    1:1:void <clinit>():27:27 -> <clinit>
    1:3:void <init>():35:37 -> <init>
    1:1:java.util.Map getFlatRules(com.batch.android.messaging.css.DOMNode,android.graphics.Point):43:43 -> a
    2:101:java.util.Map getFlatRules(java.util.List):50:149 -> a
    102:122:java.util.List getRules(com.batch.android.messaging.css.DOMNode,java.util.List):171:191 -> a
    123:151:boolean matchesMediaQuery(java.lang.String,android.graphics.Point):200:228 -> a
    152:156:boolean matchesMediaQuery(java.lang.String,android.graphics.Point):227:231 -> a
    157:172:boolean matchesSizeMediaQuery(android.graphics.Point,java.lang.String,java.lang.String,java.lang.String,int):253:268 -> a
    1:5:java.util.List getRules(com.batch.android.messaging.css.DOMNode,android.graphics.Point):157:161 -> b
com.batch.android.messaging.css.ImportFileProvider -> com.batch.android.messaging.e.e:
    java.lang.String getContent(java.lang.String) -> a
com.batch.android.messaging.css.MediaQuery -> com.batch.android.messaging.e.f:
    java.util.List rulesets -> b
    java.lang.String rule -> a
    1:2:void <init>():16:17 -> <init>
com.batch.android.messaging.css.Parser -> com.batch.android.messaging.e.g:
    java.lang.String currentToken -> i
    com.batch.android.messaging.css.Parser$State state -> c
    com.batch.android.messaging.css.Ruleset currentRuleset -> f
    com.batch.android.messaging.css.ImportFileProvider importFileProvider -> a
    com.batch.android.messaging.css.Parser$Substate substate -> d
    boolean shouldMergePreviousToken -> j
    com.batch.android.messaging.css.MediaQuery currentMediaQuery -> e
    com.batch.android.messaging.css.Declaration currentDeclaration -> g
    com.batch.android.messaging.css.Document currentDocument -> h
    java.util.regex.Pattern IMPORT_PATTERN -> k
    java.lang.String rawStylesheet -> b
    1:1:void <clinit>():14:14 -> <clinit>
    1:1:void <init>(com.batch.android.messaging.css.ImportFileProvider,java.lang.String):33:33 -> <init>
    2:8:void <init>(com.batch.android.messaging.css.ImportFileProvider,java.lang.String):30:36 -> <init>
    1:10:void fillImports():61:70 -> a
    11:15:void fillImports():69:73 -> a
    16:17:void consumeToken(java.lang.String):100:101 -> a
    18:37:void consumeSpecialToken(char):106:125 -> a
    38:38:void consumeSpecialToken(char):122:122 -> a
    39:39:void consumeSpecialToken(char):119:119 -> a
    40:40:void consumeSpecialToken(char):116:116 -> a
    41:41:void consumeSpecialToken(char):113:113 -> a
    1:4:com.batch.android.messaging.css.Document parse():41:44 -> b
    1:2:void recoverLineEndingIfPossible():253:254 -> c
    1:7:void reset():50:56 -> d
    1:17:void scan():78:94 -> e
    1:24:void switchOutOfPropertyNameState():208:231 -> f
    1:13:void switchOutOfPropertyValueState():236:248 -> g
    1:35:void switchOutOfRulesetState():168:202 -> h
    1:29:void switchToRulesetState():134:162 -> i
    1:1:void throwGenericParsingException():260:260 -> j
com.batch.android.messaging.css.Parser$1 -> com.batch.android.messaging.e.g$a:
    int[] $SwitchMap$com$batch$android$messaging$css$Parser$SpecialToken -> a
    1:1:void <clinit>():108:108 -> <clinit>
com.batch.android.messaging.css.Parser$SpecialToken -> com.batch.android.messaging.e.g$b:
    com.batch.android.messaging.css.Parser$SpecialToken NEW_LINE -> f
    com.batch.android.messaging.css.Parser$SpecialToken PROPERTY_END -> e
    com.batch.android.messaging.css.Parser$SpecialToken BLOCK_START -> b
    com.batch.android.messaging.css.Parser$SpecialToken UNKNOWN -> a
    com.batch.android.messaging.css.Parser$SpecialToken PROPERTY_SEPARATOR -> d
    com.batch.android.messaging.css.Parser$SpecialToken BLOCK_END -> c
    com.batch.android.messaging.css.Parser$SpecialToken[] $VALUES -> g
    1:6:void <clinit>():283:288 -> <clinit>
    7:7:void <clinit>():281:281 -> <clinit>
    1:1:void <init>(java.lang.String,int):281:281 -> <init>
    1:1:com.batch.android.messaging.css.Parser$SpecialToken fromCharacter(char):304:304 -> a
    2:4:com.batch.android.messaging.css.Parser$SpecialToken fromCharacter(char):298:300 -> a
    5:5:com.batch.android.messaging.css.Parser$SpecialToken fromCharacter(char):296:296 -> a
    6:14:com.batch.android.messaging.css.Parser$SpecialToken fromCharacter(char):294:302 -> a
    1:1:com.batch.android.messaging.css.Parser$SpecialToken valueOf(java.lang.String):281:281 -> valueOf
    1:1:com.batch.android.messaging.css.Parser$SpecialToken[] values():281:281 -> values
com.batch.android.messaging.css.Parser$State -> com.batch.android.messaging.e.g$c:
    com.batch.android.messaging.css.Parser$State MEDIA_QUERY -> b
    com.batch.android.messaging.css.Parser$State[] $VALUES -> c
    com.batch.android.messaging.css.Parser$State ROOT -> a
    1:2:void <clinit>():269:270 -> <clinit>
    3:3:void <clinit>():267:267 -> <clinit>
    1:1:void <init>(java.lang.String,int):267:267 -> <init>
    1:1:com.batch.android.messaging.css.Parser$State valueOf(java.lang.String):267:267 -> valueOf
    1:1:com.batch.android.messaging.css.Parser$State[] values():267:267 -> values
com.batch.android.messaging.css.Parser$Substate -> com.batch.android.messaging.e.g$d:
    com.batch.android.messaging.css.Parser$Substate[] $VALUES -> e
    com.batch.android.messaging.css.Parser$Substate PROPERTY_VALUE -> d
    com.batch.android.messaging.css.Parser$Substate PROPERTY_NAME -> c
    com.batch.android.messaging.css.Parser$Substate RULESET -> b
    com.batch.android.messaging.css.Parser$Substate SELECTOR -> a
    1:4:void <clinit>():275:278 -> <clinit>
    5:5:void <clinit>():273:273 -> <clinit>
    1:1:void <init>(java.lang.String,int):273:273 -> <init>
    1:1:com.batch.android.messaging.css.Parser$Substate valueOf(java.lang.String):273:273 -> valueOf
    1:1:com.batch.android.messaging.css.Parser$Substate[] values():273:273 -> values
com.batch.android.messaging.css.Ruleset -> com.batch.android.messaging.e.h:
    java.util.List declarations -> b
    java.lang.String selector -> a
    1:2:void <init>():16:17 -> <init>
com.batch.android.messaging.css.Variable -> com.batch.android.messaging.e.i:
    1:1:void <init>():6:6 -> <init>
com.batch.android.messaging.css.builtin.BuiltinStyleProvider -> com.batch.android.messaging.e.j.a:
    java.util.Map metaStyles -> a
    1:1:void <clinit>():18:18 -> <clinit>
    1:1:void <init>():15:15 -> <init>
    1:19:java.lang.String getContent(java.lang.String):24:42 -> a
    20:24:java.util.Map generateMetaStyles():69:73 -> a
com.batch.android.messaging.css.builtin.BuiltinStyles -> com.batch.android.messaging.e.j.b:
    java.lang.String IMAGE1_BASE -> g
    java.lang.String BANNER_ICON_ADDON -> f
    java.lang.String IMAGE1_FULLSCREEN -> i
    java.lang.String IMAGE1_DETACHED -> h
    java.lang.String GENERIC1_H_CTA -> a
    java.lang.String GENERIC1_BASE -> c
    java.lang.String GENERIC1_V_CTA -> b
    java.lang.String MODAL1 -> e
    java.lang.String BANNER1 -> d
    1:1:void <init>():9:9 -> <init>
com.batch.android.messaging.fragment.AlertTemplateFragment -> com.batch.android.messaging.f.a:
    java.lang.String TAG -> l
    1:1:void <init>():32:32 -> <init>
    1:2:com.batch.android.messaging.fragment.AlertTemplateFragment newInstance(com.batch.android.BatchMessage,com.batch.android.messaging.model.AlertMessage):25:26 -> a
    3:3:void lambda$onCreateDialog$0(android.content.DialogInterface,int):55:55 -> a
    4:6:void lambda$onCreateDialog$1(com.batch.android.messaging.model.AlertMessage,android.content.DialogInterface,int):59:61 -> a
    7:7:void lambda$onCreateDialog$1(com.batch.android.messaging.model.AlertMessage,android.content.DialogInterface,int):60:60 -> a
    boolean canAutoClose() -> i
    int getAutoCloseDelayMillis() -> k
    void onAutoCloseCountdownStarted() -> n
    void performAutoClose() -> o
    1:31:android.app.Dialog onCreateDialog(android.os.Bundle):39:69 -> onCreateDialog
com.batch.android.messaging.fragment.BaseDialogFragment -> com.batch.android.messaging.f.b:
    android.util.LruCache imageCache -> h
    java.lang.String TAG -> i
    android.os.Handler autoCloseHandler -> e
    com.batch.android.module.MessagingModule messagingModule -> f
    java.lang.String STATE_AUTOCLOSE_TARGET_UPTIME_KEY -> k
    java.lang.String BUNDLE_KEY_MESSAGE_MODEL -> j
    com.batch.android.MessagingAnalyticsDelegate analyticsDelegate -> g
    com.batch.android.messaging.model.Message messageModel -> a
    java.lang.ref.WeakReference eventListener -> b
    long autoCloseAtUptime -> d
    boolean automaticallyBeginAutoClose -> c
    1:1:void <init>():55:55 -> <init>
    2:22:void <init>():38:58 -> <init>
    1:4:void setMessageArguments(com.batch.android.BatchMessage,com.batch.android.messaging.model.Message):63:66 -> a
    5:5:void setDialogEventListener(com.batch.android.messaging.fragment.DialogEventListener):134:134 -> a
    6:6:void put(com.batch.android.messaging.AsyncImageDownloadTask$Result):142:142 -> a
    7:7:com.batch.android.messaging.AsyncImageDownloadTask$Result get(java.lang.String):149:149 -> a
    1:10:void beginAutoCloseCountdown():221:230 -> h
    boolean canAutoClose() -> i
    1:2:void dismissSafely():208:209 -> j
    int getAutoCloseDelayMillis() -> k
    1:7:com.batch.android.messaging.model.Message getMessageModel():122:128 -> l
    1:3:com.batch.android.BatchMessage getPayloadMessage():111:113 -> m
    void onAutoCloseCountdownStarted() -> n
    void performAutoClose() -> o
    1:3:void onCancel(android.content.DialogInterface):198:200 -> onCancel
    1:8:void onCreate(android.os.Bundle):72:79 -> onCreate
    9:23:void onCreate(android.os.Bundle):78:92 -> onCreate
    1:15:void onDismiss(android.content.DialogInterface):177:191 -> onDismiss
    1:6:void onSaveInstanceState(android.os.Bundle):100:105 -> onSaveInstanceState
    1:7:void onStart():157:163 -> onStart
    1:2:void onStop():170:171 -> onStop
    1:4:void scheduleAutoCloseTask():235:238 -> p
    1:3:void unscheduleAutoCloseTask():244:246 -> q
com.batch.android.messaging.fragment.DialogEventListener -> com.batch.android.messaging.f.c:
com.batch.android.messaging.fragment.ImageTemplateFragment -> com.batch.android.messaging.f.d:
    com.batch.android.messaging.css.Document style -> m
    com.batch.android.messaging.AsyncImageDownloadTask heroDownloadTask -> s
    boolean darkStatusbar -> n
    boolean showStatusbar -> o
    boolean statusbarBackgroundTranslucent -> p
    android.graphics.Bitmap heroBitmap -> r
    com.batch.android.messaging.view.formats.ImageFormatView imageFormatView -> l
    java.lang.String TAG -> u
    java.lang.Integer statusbarBackgroundColor -> q
    boolean dismissed -> t
    1:1:void <init>():63:63 -> <init>
    2:25:void <init>():41:64 -> <init>
    1:2:com.batch.android.messaging.fragment.ImageTemplateFragment newInstance(com.batch.android.BatchMessage,com.batch.android.messaging.model.ImageMessage):57:58 -> a
    3:6:android.view.View getImageFormatView(android.content.Context):156:156 -> a
    12:30:android.view.View getImageFormatView(android.content.Context):162:180 -> a
    31:34:android.view.View getImageFormatView(android.content.Context):179:182 -> a
    35:37:void onCloseAction():240:242 -> a
    1:7:void onGlobalAction():249:255 -> b
    8:12:void onGlobalAction():254:258 -> b
    1:2:void onErrorAction():266:267 -> c
    1:2:void dismiss():129:130 -> dismiss
    1:2:void dismissAllowingStateLoss():142:143 -> dismissAllowingStateLoss
    1:1:void onImageDisplayedAction():274:274 -> f
    1:3:void onPanDismiss():280:282 -> g
    1:1:boolean canAutoClose():215:215 -> i
    1:2:void dismissSafely():149:150 -> j
    1:1:int getAutoCloseDelayMillis():221:221 -> k
    1:2:void onAutoCloseCountdownStarted():207:208 -> n
    1:4:void performAutoClose():227:230 -> o
    1:9:void onCreate(android.os.Bundle):70:78 -> onCreate
    1:3:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle):87:89 -> onCreateView
    1:6:void onDestroyView():106:111 -> onDestroyView
    1:1:void onDismiss(android.content.DialogInterface):117:117 -> onDismiss
    1:3:void onStart():97:99 -> onStart
    1:9:com.batch.android.messaging.css.Document getStyle():188:196 -> r
    10:17:com.batch.android.messaging.css.Document getStyle():192:199 -> r
com.batch.android.messaging.fragment.ListenableDialog -> com.batch.android.messaging.f.e:
    void setDialogEventListener(com.batch.android.messaging.fragment.DialogEventListener) -> a
com.batch.android.messaging.fragment.ModalTemplateFragment -> com.batch.android.messaging.f.f:
    com.batch.android.messaging.css.Document style -> m
    com.batch.android.messaging.AsyncImageDownloadTask heroDownloadTask -> s
    boolean darkStatusbar -> n
    boolean showStatusbar -> o
    boolean statusbarBackgroundTranslucent -> p
    android.graphics.Bitmap heroBitmap -> r
    com.batch.android.messaging.view.formats.BannerView bannerView -> l
    java.lang.String TAG -> u
    java.lang.Integer statusbarBackgroundColor -> q
    boolean dismissed -> t
    1:1:void <init>():72:72 -> <init>
    2:13:void <init>():50:61 -> <init>
    1:2:com.batch.android.messaging.fragment.ModalTemplateFragment newInstance(com.batch.android.BatchMessage,com.batch.android.messaging.model.ModalMessage):66:67 -> a
    3:6:android.view.View getBannerView(android.content.Context):185:185 -> a
    12:33:android.view.View getBannerView(android.content.Context):191:212 -> a
    34:37:android.view.View getBannerView(android.content.Context):211:214 -> a
    38:40:void onCloseAction():304:306 -> a
    41:44:void onCTAAction(int,com.batch.android.messaging.model.CTA):313:316 -> a
    1:7:void onGlobalAction():323:329 -> b
    8:12:void onGlobalAction():328:332 -> b
    1:2:void dismiss():158:159 -> dismiss
    1:2:void dismissAllowingStateLoss():171:172 -> dismissAllowingStateLoss
    1:2:void onPanDismiss():340:341 -> g
    1:1:boolean canAutoClose():279:279 -> i
    1:2:void dismissSafely():178:179 -> j
    1:1:int getAutoCloseDelayMillis():285:285 -> k
    1:2:void onAutoCloseCountdownStarted():271:272 -> n
    1:4:void performAutoClose():291:294 -> o
    1:8:void onCreate(android.os.Bundle):79:86 -> onCreate
    1:13:android.app.Dialog onCreateDialog(android.os.Bundle):92:104 -> onCreateDialog
    1:3:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle):116:118 -> onCreateView
    1:6:void onDestroyView():135:140 -> onDestroyView
    1:1:void onDismiss(android.content.DialogInterface):146:146 -> onDismiss
    1:3:void onStart():126:128 -> onStart
    1:9:com.batch.android.messaging.css.Document getStyle():220:228 -> r
    10:17:com.batch.android.messaging.css.Document getStyle():224:231 -> r
    1:25:void refreshStatusbarStyle():236:260 -> s
com.batch.android.messaging.fragment.UniversalTemplateFragment -> com.batch.android.messaging.f.g:
    com.batch.android.messaging.AsyncImageDownloadTask heroDownloadTask -> s
    boolean darkStatusbar -> n
    boolean showStatusbar -> o
    boolean statusbarBackgroundTranslucent -> p
    boolean mediaPlayerPrepared -> u
    com.batch.android.messaging.view.formats.UniversalRootView view -> l
    boolean dismissed -> w
    android.view.Surface videoSurface -> v
    com.batch.android.messaging.AsyncImageDownloadTask$Result heroDownloadResult -> r
    com.batch.android.messaging.css.Document style -> m
    java.lang.String BUNDLE_KEY_MESSAGE_MODEL -> y
    java.lang.String TAG -> x
    java.lang.Integer statusbarBackgroundColor -> q
    android.media.MediaPlayer mediaPlayer -> t
    1:1:void <init>():82:82 -> <init>
    2:17:void <init>():55:70 -> <init>
    1:2:com.batch.android.messaging.fragment.UniversalTemplateFragment newInstance(com.batch.android.BatchMessage,com.batch.android.messaging.model.UniversalMessage):76:77 -> a
    3:6:void onCloseAction():362:365 -> a
    7:12:void onCTAAction(int,com.batch.android.messaging.model.CTA):373:378 -> a
    1:2:void onImageDownloadSuccess(com.batch.android.messaging.AsyncImageDownloadTask$Result):392:393 -> b
    1:2:void displayImage(com.batch.android.messaging.AsyncImageDownloadTask$Result):405:406 -> c
    1:1:void onImageDownloadStart():385:385 -> d
    1:2:void dismiss():218:219 -> dismiss
    1:2:void dismissAllowingStateLoss():231:232 -> dismissAllowingStateLoss
    1:2:void onImageDownloadError():399:400 -> e
    1:1:boolean canAutoClose():337:337 -> i
    1:2:void dismissSafely():238:239 -> j
    1:1:int getAutoCloseDelayMillis():343:343 -> k
    1:2:void onAutoCloseCountdownStarted():329:330 -> n
    1:4:void performAutoClose():349:352 -> o
    1:11:void onCreate(android.os.Bundle):89:99 -> onCreate
    1:13:android.app.Dialog onCreateDialog(android.os.Bundle):105:117 -> onCreateDialog
    1:50:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle):129:178 -> onCreateView
    1:6:void onDestroyView():187:192 -> onDestroyView
    1:8:void onDismiss(android.content.DialogInterface):198:205 -> onDismiss
    1:2:void onPrepared(android.media.MediaPlayer):414:415 -> onPrepared
    1:6:void onSurfaceTextureAvailable(android.graphics.SurfaceTexture,int,int):431:436 -> onSurfaceTextureAvailable
    1:7:boolean onSurfaceTextureDestroyed(android.graphics.SurfaceTexture):448:454 -> onSurfaceTextureDestroyed
    1:9:com.batch.android.messaging.css.Document getStyle():264:272 -> r
    10:17:com.batch.android.messaging.css.Document getStyle():268:275 -> r
    1:4:android.view.View getUniversalView():245:245 -> s
    10:18:android.view.View getUniversalView():251:259 -> s
    1:25:void refreshStatusbarStyle():280:304 -> t
    1:5:boolean shouldWaitForHeroImage():312:316 -> u
    1:3:void startPlayingVideo():422:424 -> v
com.batch.android.messaging.gif.BasicBitmapProvider -> com.batch.android.messaging.g.a:
    1:1:void <init>():10:10 -> <init>
    void release(byte[]) -> a
    void release(int[]) -> a
    1:1:android.graphics.Bitmap obtain(int,int,android.graphics.Bitmap$Config):16:16 -> a
    2:2:void release(android.graphics.Bitmap):22:22 -> a
    3:3:byte[] obtainByteArray(int):29:29 -> a
    1:1:int[] obtainIntArray(int):42:42 -> b
com.batch.android.messaging.gif.GifDecoder -> com.batch.android.messaging.g.b:
    int STATUS_PARTIAL_DECODE -> d
    int TOTAL_ITERATION_COUNT_FOREVER -> e
    int STATUS_FORMAT_ERROR -> b
    int STATUS_OPEN_ERROR -> c
    int STATUS_OK -> a
    int getDelay(int) -> a
    int read(java.io.InputStream,int) -> a
    int read(byte[]) -> a
    void setData(com.batch.android.messaging.gif.GifHeader,java.nio.ByteBuffer) -> a
    void setData(com.batch.android.messaging.gif.GifHeader,java.nio.ByteBuffer,int) -> a
    void setData(com.batch.android.messaging.gif.GifHeader,byte[]) -> a
    void setDefaultBitmapConfig(android.graphics.Bitmap$Config) -> a
    java.nio.ByteBuffer getData() -> e
    int getCurrentFrameIndex() -> f
    int getFrameCount() -> g
    int getByteSize() -> h
    int getNextDelay() -> i
    int getLoopCount() -> j
    android.graphics.Bitmap getNextFrame() -> k
    int getWidth() -> l
    void advance() -> m
    int getNetscapeLoopCount() -> n
    int getTotalIterationCount() -> o
    int getHeight() -> p
    void resetFrameIndex() -> q
    int getStatus() -> r
com.batch.android.messaging.gif.GifDecoder$BitmapProvider -> com.batch.android.messaging.g.b$a:
    android.graphics.Bitmap obtain(int,int,android.graphics.Bitmap$Config) -> a
    byte[] obtainByteArray(int) -> a
    void release(android.graphics.Bitmap) -> a
    void release(byte[]) -> a
    void release(int[]) -> a
    int[] obtainIntArray(int) -> b
com.batch.android.messaging.gif.GifDecoder$GifDecodeStatus -> com.batch.android.messaging.g.b$b:
com.batch.android.messaging.gif.GifDrawable -> com.batch.android.messaging.g.c:
    int MESSAGE_RAN_OUT_OF_MEMORY -> n
    java.util.Queue nextFrames -> g
    int BUFFER_SIZE -> l
    int MESSAGE_FRAME_PRODUCED -> m
    long nextFrameDeadline -> h
    com.batch.android.messaging.gif.GifDrawable$FrameInfo currentFrame -> f
    com.batch.android.messaging.gif.GifDecoder gifDecoder -> e
    int dpi -> b
    java.util.concurrent.Executor frameProducerExecutor -> k
    android.graphics.Paint paint -> a
    java.lang.Runnable produceNextFrameRunnable -> j
    boolean animating -> c
    android.os.Handler mainThreadHandler -> i
    boolean ranOutOfMemory -> d
    1:1:void <init>(android.content.Context,com.batch.android.messaging.gif.GifDecoder):66:66 -> <init>
    2:32:void <init>(android.content.Context,com.batch.android.messaging.gif.GifDecoder):42:72 -> <init>
    1:1:void access$000(com.batch.android.messaging.gif.GifDrawable,com.batch.android.messaging.gif.GifDrawable$FrameInfo):28:28 -> a
    2:2:void access$100(com.batch.android.messaging.gif.GifDrawable):28:28 -> a
    3:15:void produceNextFrame():81:93 -> a
    16:16:void onFrameProduced(com.batch.android.messaging.gif.GifDrawable$FrameInfo):100:100 -> a
    1:9:void ranOutOfMemory():144:152 -> b
    1:22:void requestNewFrameIfNeeded():106:127 -> c
    23:31:void requestNewFrameIfNeeded():126:134 -> c
    1:4:void draw(android.graphics.Canvas):164:167 -> draw
    1:4:int getIntrinsicHeight():196:199 -> getIntrinsicHeight
    1:4:int getIntrinsicWidth():206:209 -> getIntrinsicWidth
    1:1:int getOpacity():186:186 -> getOpacity
    1:1:boolean isRunning():235:235 -> isRunning
    1:1:void setAlpha(int):174:174 -> setAlpha
    1:5:void start():219:223 -> start
    1:1:void stop():229:229 -> stop
com.batch.android.messaging.gif.GifDrawable$1 -> com.batch.android.messaging.g.c$a:
    com.batch.android.messaging.gif.GifDrawable this$0 -> a
    1:1:void <init>(com.batch.android.messaging.gif.GifDrawable,android.os.Looper):48:48 -> <init>
    1:4:void handleMessage(android.os.Message):52:55 -> handleMessage
com.batch.android.messaging.gif.GifDrawable$FrameInfo -> com.batch.android.messaging.g.c$b:
    android.graphics.Bitmap bitmap -> a
    int delay -> b
    1:3:void <init>(android.graphics.Bitmap,int):244:246 -> <init>
com.batch.android.messaging.gif.GifFrame -> com.batch.android.messaging.g.d:
    int DISPOSAL_BACKGROUND -> n
    int DISPOSAL_PREVIOUS -> o
    int DISPOSAL_UNSPECIFIED -> l
    int DISPOSAL_NONE -> m
    int bufferFrameStart -> j
    int transIndex -> h
    int delay -> i
    int dispose -> g
    int ih -> d
    int iy -> b
    int iw -> c
    int ix -> a
    boolean interlace -> e
    boolean transparency -> f
    int[] lct -> k
    1:1:void <init>():14:14 -> <init>
com.batch.android.messaging.gif.GifFrame$GifDisposalMethod -> com.batch.android.messaging.g.d$a:
com.batch.android.messaging.gif.GifHeader -> com.batch.android.messaging.g.e:
    int NETSCAPE_LOOP_COUNT_FOREVER -> n
    int NETSCAPE_LOOP_COUNT_DOES_NOT_EXIST -> o
    com.batch.android.messaging.gif.GifFrame currentFrame -> d
    int bgColor -> l
    int loopCount -> m
    int bgIndex -> j
    int pixelAspect -> k
    int gctSize -> i
    int width -> f
    int height -> g
    int[] gct -> a
    int status -> b
    int frameCount -> c
    java.util.List frames -> e
    boolean gctFlag -> h
    1:48:void <init>():16:63 -> <init>
    1:1:int getHeight():67:67 -> a
    1:1:int getNumFrames():77:77 -> b
    1:1:int getStatus():86:86 -> c
    1:1:int getWidth():72:72 -> d
com.batch.android.messaging.gif.GifHeaderParser -> com.batch.android.messaging.g.f:
    int GCE_MASK_DISPOSAL_METHOD -> n
    int GCE_DISPOSAL_METHOD_SHIFT -> o
    int LABEL_COMMENT_EXTENSION -> l
    int LABEL_PLAIN_TEXT_EXTENSION -> m
    int LABEL_GRAPHIC_CONTROL_EXTENSION -> j
    int LABEL_APPLICATION_EXTENSION -> k
    int EXTENSION_INTRODUCER -> h
    int TRAILER -> i
    int MASK_INT_LOWEST_BYTE -> f
    int IMAGE_SEPARATOR -> g
    int blockSize -> d
    java.nio.ByteBuffer rawData -> b
    com.batch.android.messaging.gif.GifHeader header -> c
    byte[] block -> a
    int MAX_BLOCK_SIZE -> x
    int MIN_FRAME_DELAY -> v
    int DEFAULT_FRAME_DELAY -> w
    int LSD_MASK_GCT_FLAG -> t
    int LSD_MASK_GCT_SIZE -> u
    int DESCRIPTOR_MASK_INTERLACE_FLAG -> r
    int DESCRIPTOR_MASK_LCT_SIZE -> s
    java.lang.String TAG -> e
    int GCE_MASK_TRANSPARENT_COLOR_FLAG -> p
    int DESCRIPTOR_MASK_LCT_FLAG -> q
    1:114:void <init>():23:136 -> <init>
    1:3:com.batch.android.messaging.gif.GifHeader parse(java.nio.ByteBuffer):140:142 -> a
    4:7:com.batch.android.messaging.gif.GifHeaderParser setData(byte[]):157:160 -> a
    8:9:void clear():167:168 -> a
    10:30:int[] readColorTable(int):450:470 -> a
    1:4:com.batch.android.messaging.gif.GifHeaderParser setData(java.nio.ByteBuffer):147:150 -> b
    5:57:void readContents(int):228:280 -> b
    58:92:void readContents(int):236:270 -> b
    93:106:void readContents(int):250:263 -> b
    107:127:void readContents(int):246:266 -> b
    128:128:boolean err():552:552 -> b
    1:5:boolean isAnimated():206:210 -> c
    1:16:com.batch.android.messaging.gif.GifHeader parseHeader():182:197 -> d
    17:17:com.batch.android.messaging.gif.GifHeader parseHeader():183:183 -> d
    1:3:int read():534:536 -> e
    1:41:void readBitmap():331:371 -> f
    1:18:void readBlock():505:522 -> g
    1:1:void readContents():218:218 -> h
    1:32:void readGraphicControlExt():291:322 -> i
    1:12:void readHeader():396:407 -> j
    1:20:void readLSD():417:436 -> k
    1:8:void readNetscapeExt():380:387 -> l
    1:1:int readShort():547:547 -> m
    1:4:void reset():173:176 -> n
    1:3:void skip():494:496 -> o
    1:3:void skipImageData():482:484 -> p
com.batch.android.messaging.gif.GifHelper -> com.batch.android.messaging.g.g:
    int NEEDED_BYTES_FOR_TYPE_CHECK -> a
    1:1:void <init>():10:10 -> <init>
    1:7:boolean isPotentiallyAGif(int[]):22:28 -> a
    8:13:boolean dataStartsWith(int[],byte[]):36:41 -> a
    14:18:com.batch.android.messaging.gif.GifDrawable getDrawableForBytes(android.content.Context,byte[],boolean):58:62 -> a
com.batch.android.messaging.gif.StandardGifDecoder -> com.batch.android.messaging.g.h:
    byte[] mainPixels -> o
    com.batch.android.messaging.gif.GifHeader header -> r
    short[] prefix -> l
    java.nio.ByteBuffer rawData -> i
    byte[] suffix -> m
    android.graphics.Bitmap$Config bitmapConfig -> z
    int COLOR_TRANSPARENT_BLACK -> G
    int BYTES_PER_INTEGER -> E
    int NULL_CODE -> C
    int[] act -> f
    com.batch.android.messaging.gif.GifHeaderParser parser -> k
    int downsampledHeight -> w
    byte[] block -> j
    int[] mainScratch -> p
    int status -> u
    int framePointer -> q
    android.graphics.Bitmap previousImage -> s
    byte[] pixelStack -> n
    int MASK_INT_LOWEST_BYTE -> F
    int INITIAL_FRAME_POINTER -> D
    int MAX_STACK_SIZE -> B
    com.batch.android.messaging.gif.GifDecoder$BitmapProvider bitmapProvider -> h
    boolean savePrevious -> t
    int[] pct -> g
    int downsampledWidth -> x
    java.lang.Boolean isFirstFrameTransparent -> y
    int sampleSize -> v
    java.lang.String TAG -> A
    1:1:void <init>(com.batch.android.messaging.gif.GifDecoder$BitmapProvider,java.nio.ByteBuffer):137:137 -> <init>
    2:2:void <init>(com.batch.android.messaging.gif.GifDecoder$BitmapProvider,com.batch.android.messaging.gif.GifHeader,java.nio.ByteBuffer):144:144 -> <init>
    3:4:void <init>(com.batch.android.messaging.gif.GifDecoder$BitmapProvider,com.batch.android.messaging.gif.GifHeader,java.nio.ByteBuffer,int):151:152 -> <init>
    5:5:void <init>(com.batch.android.messaging.gif.GifDecoder$BitmapProvider):157:157 -> <init>
    6:71:void <init>(com.batch.android.messaging.gif.GifDecoder$BitmapProvider):94:159 -> <init>
    1:2:int getDelay(int):197:198 -> a
    3:27:int read(java.io.InputStream,int):328:352 -> a
    28:28:void setData(com.batch.android.messaging.gif.GifHeader,byte[]):379:379 -> a
    29:29:void setData(com.batch.android.messaging.gif.GifHeader,java.nio.ByteBuffer):385:385 -> a
    30:54:void setData(com.batch.android.messaging.gif.GifHeader,java.nio.ByteBuffer,int):396:420 -> a
    55:55:void setData(com.batch.android.messaging.gif.GifHeader,java.nio.ByteBuffer,int):393:393 -> a
    56:59:com.batch.android.messaging.gif.GifHeaderParser getHeaderParser():426:429 -> a
    60:65:int read(byte[]):436:441 -> a
    66:71:void setDefaultBitmapConfig(android.graphics.Bitmap$Config):448:453 -> a
    72:120:android.graphics.Bitmap setPixels(com.batch.android.messaging.gif.GifFrame,com.batch.android.messaging.gif.GifFrame):463:511 -> a
    121:140:android.graphics.Bitmap setPixels(com.batch.android.messaging.gif.GifFrame,com.batch.android.messaging.gif.GifFrame):508:527 -> a
    141:159:android.graphics.Bitmap setPixels(com.batch.android.messaging.gif.GifFrame,com.batch.android.messaging.gif.GifFrame):525:543 -> a
    160:250:void copyCopyIntoScratchRobust(com.batch.android.messaging.gif.GifFrame):596:686 -> a
    251:251:void copyCopyIntoScratchRobust(com.batch.android.messaging.gif.GifFrame):685:685 -> a
    252:280:int averageColorsNear(int,int,int):703:731 -> a
    1:43:void copyIntoScratchFast(com.batch.android.messaging.gif.GifFrame):549:591 -> b
    44:47:android.graphics.Bitmap getNextBitmap():896:899 -> b
    1:124:void decodeBitmapData(com.batch.android.messaging.gif.GifFrame):745:868 -> c
    125:129:int readBlock():886:890 -> c
    1:15:void clear():358:372 -> clear
    1:1:int readByte():876:876 -> d
    1:1:java.nio.ByteBuffer getData():178:178 -> e
    1:1:int getCurrentFrameIndex():222:222 -> f
    1:1:int getFrameCount():216:216 -> g
    1:1:int getByteSize():262:262 -> h
    1:5:int getNextDelay():206:210 -> i
    1:1:int getLoopCount():235:235 -> j
    1:51:android.graphics.Bitmap getNextFrame():269:319 -> k
    52:53:android.graphics.Bitmap getNextFrame():279:280 -> k
    1:1:int getWidth():165:165 -> l
    1:1:void advance():190:190 -> m
    1:1:int getNetscapeLoopCount():244:244 -> n
    1:1:int getTotalIterationCount():250:250 -> o
    1:1:int getHeight():171:171 -> p
    1:1:void resetFrameIndex():228:228 -> q
    1:1:int getStatus():184:184 -> r
com.batch.android.messaging.model.Action -> com.batch.android.messaging.h.a:
    com.batch.android.json.JSONObject args -> b
    java.lang.String action -> a
    1:3:void <init>(java.lang.String,com.batch.android.json.JSONObject):15:17 -> <init>
    1:1:boolean isDismissAction():22:22 -> a
com.batch.android.messaging.model.AlertMessage -> com.batch.android.messaging.h.b:
    java.lang.String titleText -> g
    com.batch.android.messaging.model.CTA acceptCTA -> i
    java.lang.String cancelButtonText -> h
    1:1:void <init>():5:5 -> <init>
com.batch.android.messaging.model.BannerMessage -> com.batch.android.messaging.h.c:
    1:1:void <init>():5:5 -> <init>
com.batch.android.messaging.model.BaseBannerMessage -> com.batch.android.messaging.h.d:
    java.lang.String css -> g
    long globalTapDelay -> j
    boolean showCloseButton -> o
    java.lang.String titleText -> h
    boolean allowSwipeToDismiss -> k
    java.lang.String imageDescription -> m
    java.lang.String imageURL -> l
    com.batch.android.messaging.model.BaseBannerMessage$CTADirection ctaDirection -> q
    java.util.List ctas -> n
    com.batch.android.messaging.model.Action globalTapAction -> i
    int autoCloseDelay -> p
    1:15:void <init>():7:21 -> <init>
com.batch.android.messaging.model.BaseBannerMessage$CTADirection -> com.batch.android.messaging.h.d$a:
    com.batch.android.messaging.model.BaseBannerMessage$CTADirection HORIZONTAL -> a
    com.batch.android.messaging.model.BaseBannerMessage$CTADirection VERTICAL -> b
    com.batch.android.messaging.model.BaseBannerMessage$CTADirection[] $VALUES -> c
    1:2:void <clinit>():25:26 -> <clinit>
    3:3:void <clinit>():23:23 -> <clinit>
    1:1:void <init>(java.lang.String,int):23:23 -> <init>
    1:1:com.batch.android.messaging.model.BaseBannerMessage$CTADirection valueOf(java.lang.String):23:23 -> valueOf
    1:1:com.batch.android.messaging.model.BaseBannerMessage$CTADirection[] values():23:23 -> values
com.batch.android.messaging.model.CTA -> com.batch.android.messaging.h.e:
    java.lang.String label -> c
    1:2:void <init>(java.lang.String,java.lang.String,com.batch.android.json.JSONObject):15:16 -> <init>
com.batch.android.messaging.model.ImageMessage -> com.batch.android.messaging.h.f:
    java.lang.String css -> g
    int autoCloseDelay -> n
    long globalTapDelay -> i
    boolean isFullscreen -> o
    java.lang.String imageURL -> k
    boolean allowSwipeToDismiss -> j
    java.lang.String imageDescription -> l
    com.batch.android.messaging.Size2D imageSize -> m
    com.batch.android.messaging.model.Action globalTapAction -> h
    1:1:void <init>():8:8 -> <init>
com.batch.android.messaging.model.Message -> com.batch.android.messaging.h.g:
    com.batch.android.json.JSONObject eventData -> e
    com.batch.android.messaging.model.Message$Source source -> f
    java.lang.String messageIdentifier -> a
    java.lang.String bodyText -> c
    java.lang.String devTrackingIdentifier -> b
    java.lang.String bodyRawHtml -> d
    1:12:void <init>():12:23 -> <init>
    1:5:java.lang.CharSequence getBody():31:35 -> a
    1:12:android.text.Spanned getSpannedBody():41:52 -> b
com.batch.android.messaging.model.Message$Source -> com.batch.android.messaging.h.g$a:
    com.batch.android.messaging.model.Message$Source UNKNOWN -> a
    com.batch.android.messaging.model.Message$Source LOCAL -> c
    com.batch.android.messaging.model.Message$Source[] $VALUES -> d
    com.batch.android.messaging.model.Message$Source LANDING -> b
    1:3:void <clinit>():61:63 -> <clinit>
    4:4:void <clinit>():59:59 -> <clinit>
    1:1:void <init>(java.lang.String,int):59:59 -> <init>
    1:1:com.batch.android.messaging.model.Message$Source valueOf(java.lang.String):59:59 -> valueOf
    1:1:com.batch.android.messaging.model.Message$Source[] values():59:59 -> values
com.batch.android.messaging.model.ModalMessage -> com.batch.android.messaging.h.h:
    1:1:void <init>():5:5 -> <init>
com.batch.android.messaging.model.UniversalMessage -> com.batch.android.messaging.h.i:
    java.lang.String css -> g
    java.lang.String titleText -> i
    java.lang.String headingText -> h
    java.lang.String subtitleText -> j
    java.lang.String videoURL -> m
    java.lang.String heroImageURL -> l
    java.lang.Boolean showCloseButton -> o
    java.lang.String heroDescription -> n
    java.lang.Boolean attachCTAsBottom -> p
    java.lang.Boolean flipHeroVertical -> s
    java.lang.Boolean flipHeroHorizontal -> t
    java.lang.Boolean stackCTAsHorizontally -> q
    java.lang.Boolean stretchCTAsHorizontally -> r
    java.lang.Double heroSplitRatio -> u
    int autoCloseDelay -> v
    java.util.List ctas -> k
    1:9:void <init>():11:19 -> <init>
    1:6:java.lang.String getVoiceString():35:40 -> c
com.batch.android.messaging.view.AnimatedCloseButton -> com.batch.android.messaging.view.a:
    long duration -> v
    long animationEndDate -> u
    boolean animating -> t
    1:1:void <init>(android.content.Context):24:24 -> <init>
    2:4:void <init>(android.content.Context):18:20 -> <init>
    5:5:void <init>(android.content.Context,android.util.AttributeSet):29:29 -> <init>
    6:8:void <init>(android.content.Context,android.util.AttributeSet):18:20 -> <init>
    9:9:void <init>(android.content.Context,android.util.AttributeSet,int):34:34 -> <init>
    10:12:void <init>(android.content.Context,android.util.AttributeSet,int):18:20 -> <init>
    13:13:void <init>(android.content.Context,android.util.AttributeSet,int,int):43:43 -> <init>
    14:16:void <init>(android.content.Context,android.util.AttributeSet,int,int):18:20 -> <init>
    1:5:void animateForDuration(long):48:52 -> a
    1:1:boolean isAnimating():57:57 -> d
    1:12:void onAnimationFrame():64:75 -> e
    1:3:void onDraw(android.graphics.Canvas):82:84 -> onDraw
    1:11:void onRestoreInstanceState(android.os.Parcelable):104:114 -> onRestoreInstanceState
    1:4:android.os.Parcelable onSaveInstanceState():94:97 -> onSaveInstanceState
com.batch.android.messaging.view.AnimatedCountdownSavedState -> com.batch.android.messaging.view.AnimatedCountdownSavedState:
    long animationEndDate -> b
    long duration -> c
    boolean animating -> a
    1:1:void <clinit>():64:64 -> <clinit>
    1:1:void <init>(android.os.Parcel):22:22 -> <init>
    2:9:void <init>(android.os.Parcel):16:23 -> <init>
    10:10:void <init>(android.os.Parcel,java.lang.ClassLoader):30:30 -> <init>
    11:26:void <init>(android.os.Parcel,java.lang.ClassLoader):16:31 -> <init>
    27:27:void <init>(android.os.Parcelable):37:37 -> <init>
    28:30:void <init>(android.os.Parcelable):16:18 -> <init>
    1:3:void readParcel(android.os.Parcel,java.lang.ClassLoader):42:44 -> a
    1:1:java.lang.String toString():60:60 -> toString
    1:4:void writeToParcel(android.os.Parcel,int):50:53 -> writeToParcel
com.batch.android.messaging.view.AnimatedCountdownSavedState$1 -> com.batch.android.messaging.view.AnimatedCountdownSavedState$a:
    1:1:void <init>():65:65 -> <init>
    1:1:com.batch.android.messaging.view.AnimatedCountdownSavedState createFromParcel(android.os.Parcel):70:70 -> a
    2:2:com.batch.android.messaging.view.AnimatedCountdownSavedState[] newArray(int):75:75 -> a
    1:1:java.lang.Object createFromParcel(android.os.Parcel):65:65 -> createFromParcel
    1:1:java.lang.Object[] newArray(int):65:65 -> newArray
com.batch.android.messaging.view.CloseButton -> com.batch.android.messaging.view.CloseButton:
    boolean showBorder -> n
    float countdownProgress -> f
    java.lang.String TAG -> o
    int computedGlyphPadding -> g
    int glyphPadding -> d
    int glyphWidth -> e
    int backgroundColor -> b
    android.graphics.RectF countdownOval -> l
    int glyphColor -> c
    int padding -> a
    android.graphics.RectF borderOval -> m
    android.graphics.Paint borderPaint -> j
    android.graphics.Paint glyphPaint -> i
    android.graphics.Paint backgroundPaint -> h
    android.graphics.drawable.Drawable foregoundDrawable -> k
    int UNSCALED_GLYPH_PADDING_PX -> r
    int UNSCALED_GLYPH_WIDTH_PX -> s
    int DEFAULT_SIZE_DP -> p
    int DEFAULT_PADDING_DP -> q
    1:1:void <init>(android.content.Context):71:71 -> <init>
    2:33:void <init>(android.content.Context):41:72 -> <init>
    34:34:void <init>(android.content.Context,android.util.AttributeSet):77:77 -> <init>
    35:72:void <init>(android.content.Context,android.util.AttributeSet):41:78 -> <init>
    73:73:void <init>(android.content.Context,android.util.AttributeSet,int):83:83 -> <init>
    74:117:void <init>(android.content.Context,android.util.AttributeSet,int):41:84 -> <init>
    118:118:void <init>(android.content.Context,android.util.AttributeSet,int,int):90:90 -> <init>
    119:169:void <init>(android.content.Context,android.util.AttributeSet,int,int):41:91 -> <init>
    1:31:void init():96:126 -> a
    32:41:void applyStyleRules(java.util.Map):346:355 -> a
    42:51:void applyStyleRules(java.util.Map):354:363 -> a
    52:77:void applyStyleRules(java.util.Map):362:387 -> a
    1:11:void recomputeMetrics():153:163 -> b
    12:16:void recomputeMetrics():161:161 -> b
    21:33:void recomputeMetrics():166:178 -> b
    34:34:void recomputeMetrics():175:175 -> b
    1:18:void refreshPaint():131:148 -> c
    1:5:void draw(android.graphics.Canvas):312:316 -> draw
    1:3:void drawableHotspotChanged(float,float):427:429 -> drawableHotspotChanged
    1:7:void drawableStateChanged():399:405 -> drawableStateChanged
    1:1:android.view.ViewOutlineProvider getOutlineProvider():270:270 -> getOutlineProvider
    1:1:int getPadding():229:229 -> getPadding
    1:3:void jumpDrawablesToCurrentState():417:419 -> jumpDrawablesToCurrentState
    1:6:void onDraw(android.graphics.Canvas):287:292 -> onDraw
    7:15:void onDraw(android.graphics.Canvas):289:297 -> onDraw
    16:27:void onDraw(android.graphics.Canvas):294:305 -> onDraw
    1:16:void onMeasure(int,int):324:339 -> onMeasure
    1:5:void onSizeChanged(int,int,int,int):276:280 -> onSizeChanged
    1:2:void setBackgroundColor(int):184:185 -> setBackgroundColor
    1:2:void setCountdownProgress(float):239:240 -> setCountdownProgress
    1:2:void setForegoundDrawable(android.graphics.drawable.Drawable):196:197 -> setForegoundDrawable
    1:2:void setGlyphColor(int):190:191 -> setGlyphColor
    1:3:void setGlyphPadding(int):250:252 -> setGlyphPadding
    1:3:void setGlyphWidth(int):262:264 -> setGlyphWidth
    1:1:void setPadding(int,int,int,int):217:217 -> setPadding
    2:3:void setPadding(int):223:224 -> setPadding
    1:2:void setShowBorder(boolean):205:206 -> setShowBorder
    1:1:boolean verifyDrawable(android.graphics.drawable.Drawable):411:411 -> verifyDrawable
com.batch.android.messaging.view.CloseButton$1 -> com.batch.android.messaging.view.CloseButton$a:
    com.batch.android.messaging.view.CloseButton this$0 -> a
    1:1:void <init>(com.batch.android.messaging.view.CloseButton):98:98 -> <init>
    1:5:void getOutline(android.view.View,android.graphics.Outline):102:102 -> getOutline
com.batch.android.messaging.view.CountdownView -> com.batch.android.messaging.view.b:
    long animationEndDate -> b
    int MAX_PROGRESS -> e
    long duration -> c
    boolean animating -> a
    java.lang.String TAG -> d
    1:1:void <init>(android.content.Context):39:39 -> <init>
    2:11:void <init>(android.content.Context):33:42 -> <init>
    1:9:void applyStyleRules(java.util.Map):48:56 -> a
    10:10:void applyStyleRules(java.util.Map):55:55 -> a
    11:15:void animateForDuration(long):65:69 -> a
    16:27:void onAnimationFrame():81:92 -> a
    1:1:boolean isAnimating():74:74 -> isAnimating
    1:3:void onDraw(android.graphics.Canvas):99:101 -> onDraw
    1:11:void onRestoreInstanceState(android.os.Parcelable):133:143 -> onRestoreInstanceState
    1:4:android.os.Parcelable onSaveInstanceState():123:126 -> onSaveInstanceState
    1:4:void setColor(int):111:114 -> setColor
com.batch.android.messaging.view.DelegatedTouchEventViewGroup -> com.batch.android.messaging.view.c:
    boolean superOnTouchEvent(android.view.MotionEvent) -> a
    boolean superOnInterceptTouchEvent(android.view.MotionEvent) -> b
com.batch.android.messaging.view.DelegatedTouchEventViewGroup$Delegate -> com.batch.android.messaging.view.c$a:
    boolean onInterceptTouchEvent(android.view.MotionEvent,com.batch.android.messaging.view.DelegatedTouchEventViewGroup) -> a
    boolean onTouchEvent(android.view.MotionEvent,com.batch.android.messaging.view.DelegatedTouchEventViewGroup,boolean) -> a
com.batch.android.messaging.view.FixedRatioFrameLayout -> com.batch.android.messaging.view.d:
    com.batch.android.messaging.Size2D targetSize -> a
    1:2:void <init>(android.content.Context,com.batch.android.messaging.Size2D):25:26 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet):32:32 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet,int):38:38 -> <init>
    5:5:void <init>(android.content.Context,android.util.AttributeSet,int,int):47:47 -> <init>
    1:1:void init(com.batch.android.messaging.Size2D):52:52 -> a
    1:29:void onMeasure(int,int):67:95 -> onMeasure
    30:30:void onMeasure(int,int):94:94 -> onMeasure
    1:5:void setTargetSize(com.batch.android.messaging.Size2D):57:61 -> setTargetSize
com.batch.android.messaging.view.FlexboxLayout -> com.batch.android.messaging.view.e:
    int FLEX_WRAP_NOWRAP -> n
    int FLEX_DIRECTION_COLUMN -> l
    android.util.SparseIntArray mOrderCache -> g
    int FLEX_DIRECTION_ROW -> j
    int mAlignItems -> d
    int ALIGN_CONTENT_SPACE_AROUND -> E
    int mFlexWrap -> b
    int ALIGN_CONTENT_CENTER -> C
    int ALIGN_CONTENT_FLEX_START -> A
    int[] mReorderedIndices -> f
    int ALIGN_ITEMS_BASELINE -> y
    int ALIGN_ITEMS_FLEX_END -> w
    java.util.List mFlexLines -> h
    int JUSTIFY_CONTENT_SPACE_AROUND -> u
    int JUSTIFY_CONTENT_CENTER -> s
    int JUSTIFY_CONTENT_FLEX_START -> q
    int FLEX_WRAP_WRAP -> o
    int FLEX_DIRECTION_COLUMN_REVERSE -> m
    int FLEX_DIRECTION_ROW_REVERSE -> k
    int ALIGN_CONTENT_STRETCH -> F
    int ALIGN_CONTENT_SPACE_BETWEEN -> D
    int mAlignContent -> e
    int ALIGN_CONTENT_FLEX_END -> B
    int mJustifyContent -> c
    int mFlexDirection -> a
    boolean[] mChildrenFrozen -> i
    int ALIGN_ITEMS_STRETCH -> z
    int ALIGN_ITEMS_CENTER -> x
    int ALIGN_ITEMS_FLEX_START -> v
    int JUSTIFY_CONTENT_SPACE_BETWEEN -> t
    int JUSTIFY_CONTENT_FLEX_END -> r
    int FLEX_WRAP_WRAP_REVERSE -> p
    1:1:void <init>(android.content.Context):243:243 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet):248:248 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int):253:253 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet,int):232:232 -> <init>
    1:22:int[] createReorderedIndices(android.view.View,int,android.view.ViewGroup$LayoutParams):330:351 -> a
    23:36:int[] createReorderedIndices(android.view.View,int,android.view.ViewGroup$LayoutParams):342:355 -> a
    37:39:int[] createReorderedIndices():366:368 -> a
    40:49:int[] sortOrdersIntoReorderedIndices(int,java.util.List):373:382 -> a
    50:57:java.util.List createOrders(int):391:398 -> a
    58:103:void measureHorizontal(int,int):445:490 -> a
    104:109:void measureHorizontal(int,int):489:494 -> a
    110:127:void measureHorizontal(int,int):493:510 -> a
    128:132:void measureHorizontal(int,int):509:513 -> a
    133:163:void measureHorizontal(int,int):512:542 -> a
    164:187:void measureHorizontal(int,int):541:564 -> a
    188:195:void measureHorizontal(int,int):563:570 -> a
    196:206:void measureHorizontal(int,int):569:579 -> a
    207:212:void measureHorizontal(int,int):578:583 -> a
    213:234:void checkSizeConstraints(android.view.View):711:732 -> a
    235:235:void checkSizeConstraints(android.view.View):731:731 -> a
    236:238:void addFlexLineIfLastFlexItem(int,int,com.batch.android.messaging.view.FlexboxLayout$FlexLine):738:740 -> a
    239:239:void determineMainSize(int,int,int):784:784 -> a
    240:247:void determineMainSize(int,int,int):774:781 -> a
    248:278:void determineMainSize(int,int,int):763:793 -> a
    279:366:int expandFlexItems(com.batch.android.messaging.view.FlexboxLayout$FlexLine,int,int,int,int):819:906 -> a
    367:371:int expandFlexItems(com.batch.android.messaging.view.FlexboxLayout$FlexLine,int,int,int,int):904:908 -> a
    372:401:int expandFlexItems(com.batch.android.messaging.view.FlexboxLayout$FlexLine,int,int,int,int):841:870 -> a
    402:450:int expandFlexItems(com.batch.android.messaging.view.FlexboxLayout$FlexLine,int,int,int,int):868:916 -> a
    451:451:int expandFlexItems(com.batch.android.messaging.view.FlexboxLayout$FlexLine,int,int,int,int):820:820 -> a
    452:452:void determineCrossSize(int,int,int,int):1072:1072 -> a
    453:454:void determineCrossSize(int,int,int,int):1068:1069 -> a
    455:574:void determineCrossSize(int,int,int,int):1063:1182 -> a
    575:580:void stretchViewHorizontally(android.view.View,int):1276:1281 -> a
    581:581:void stretchViewHorizontally(android.view.View,int):1279:1279 -> a
    582:582:boolean isWrapRequired(int,int,int,int,int,com.batch.android.messaging.view.FlexboxLayout$LayoutParams):1402:1402 -> a
    583:630:void layoutHorizontal(boolean,int,int,int,int):1491:1538 -> a
    631:640:void layoutHorizontal(boolean,int,int,int,int):1525:1534 -> a
    641:641:void layoutHorizontal(boolean,int,int,int,int):1521:1521 -> a
    642:687:void layoutHorizontal(boolean,int,int,int,int):1517:1562 -> a
    688:703:void layoutHorizontal(boolean,int,int,int,int):1556:1571 -> a
    704:722:void layoutHorizontal(boolean,int,int,int,int):1565:1583 -> a
    723:735:void layoutHorizontal(boolean,int,int,int,int):1576:1588 -> a
    736:746:void layoutHorizontal(boolean,int,int,int,int):1585:1595 -> a
    747:795:void layoutSingleChildHorizontal(android.view.View,com.batch.android.messaging.view.FlexboxLayout$FlexLine,int,int,int,int,int,int):1631:1679 -> a
    796:805:void layoutSingleChildHorizontal(android.view.View,com.batch.android.messaging.view.FlexboxLayout$FlexLine,int,int,int,int,int,int):1676:1685 -> a
    806:806:void layoutSingleChildHorizontal(android.view.View,com.batch.android.messaging.view.FlexboxLayout$FlexLine,int,int,int,int,int,int):1682:1682 -> a
    807:807:void layoutSingleChildHorizontal(android.view.View,com.batch.android.messaging.view.FlexboxLayout$FlexLine,int,int,int,int,int,int):1662:1662 -> a
    808:817:void layoutSingleChildHorizontal(android.view.View,com.batch.android.messaging.view.FlexboxLayout$FlexLine,int,int,int,int,int,int):1661:1670 -> a
    818:818:void layoutSingleChildHorizontal(android.view.View,com.batch.android.messaging.view.FlexboxLayout$FlexLine,int,int,int,int,int,int):1667:1667 -> a
    819:821:void layoutSingleChildHorizontal(android.view.View,com.batch.android.messaging.view.FlexboxLayout$FlexLine,int,int,int,int,int,int):1642:1644 -> a
    822:871:void layoutVertical(boolean,boolean,int,int,int,int):1717:1766 -> a
    872:882:void layoutVertical(boolean,boolean,int,int,int,int):1752:1762 -> a
    883:883:void layoutVertical(boolean,boolean,int,int,int,int):1748:1748 -> a
    884:931:void layoutVertical(boolean,boolean,int,int,int,int):1744:1791 -> a
    932:948:void layoutVertical(boolean,boolean,int,int,int,int):1784:1800 -> a
    949:967:void layoutVertical(boolean,boolean,int,int,int,int):1793:1811 -> a
    968:980:void layoutVertical(boolean,boolean,int,int,int,int):1804:1816 -> a
    981:991:void layoutVertical(boolean,boolean,int,int,int,int):1813:1823 -> a
    992:1029:void layoutSingleChildVertical(android.view.View,com.batch.android.messaging.view.FlexboxLayout$FlexLine,boolean,int,int,int,int,int):1854:1891 -> a
    1030:1032:void layoutSingleChildVertical(android.view.View,com.batch.android.messaging.view.FlexboxLayout$FlexLine,boolean,int,int,int,int,int):1873:1873 -> a
    1038:1040:void layoutSingleChildVertical(android.view.View,com.batch.android.messaging.view.FlexboxLayout$FlexLine,boolean,int,int,int,int,int):1879:1879 -> a
    1041:1043:void layoutSingleChildVertical(android.view.View,com.batch.android.messaging.view.FlexboxLayout$FlexLine,boolean,int,int,int,int,int):1866:1868 -> a
    1044:1044:com.batch.android.messaging.view.FlexboxLayout$LayoutParams generateLayoutParams(android.util.AttributeSet):1908:1908 -> a
    1:2:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams):310:311 -> addView
    1:4:android.view.View getReorderedChildAt(int):297:300 -> b
    5:18:boolean isOrderChangedFromLastMeasurement():411:424 -> b
    19:63:void measureVertical(int,int):602:646 -> b
    64:68:void measureVertical(int,int):645:649 -> b
    69:86:void measureVertical(int,int):648:665 -> b
    87:91:void measureVertical(int,int):664:668 -> b
    92:118:void measureVertical(int,int):667:693 -> b
    119:124:void measureVertical(int,int):692:697 -> b
    125:208:int shrinkFlexItems(com.batch.android.messaging.view.FlexboxLayout$FlexLine,int,int,int,int):941:1024 -> b
    209:213:int shrinkFlexItems(com.batch.android.messaging.view.FlexboxLayout$FlexLine,int,int,int,int):1022:1026 -> b
    214:243:int shrinkFlexItems(com.batch.android.messaging.view.FlexboxLayout$FlexLine,int,int,int,int):963:992 -> b
    244:287:int shrinkFlexItems(com.batch.android.messaging.view.FlexboxLayout$FlexLine,int,int,int,int):991:1034 -> b
    288:288:int shrinkFlexItems(com.batch.android.messaging.view.FlexboxLayout$FlexLine,int,int,int,int):943:943 -> b
    289:294:void stretchViewVertically(android.view.View,int):1260:1265 -> b
    295:295:void stretchViewVertically(android.view.View,int):1263:1263 -> b
    296:314:void setMeasuredDimensionForFlex(int,int,int,int):1298:1316 -> b
    315:316:void setMeasuredDimensionForFlex(int,int,int,int):1312:1313 -> b
    317:356:void setMeasuredDimensionForFlex(int,int,int,int):1307:1346 -> b
    357:357:void setMeasuredDimensionForFlex(int,int,int,int):1342:1342 -> b
    358:403:void setMeasuredDimensionForFlex(int,int,int,int):1332:1377 -> b
    404:404:void setMeasuredDimensionForFlex(int,int,int,int):1372:1372 -> b
    405:423:void setMeasuredDimensionForFlex(int,int,int,int):1361:1379 -> b
    1:20:void stretchViews(int,int):1206:1225 -> c
    21:21:void stretchViews(int,int):1222:1222 -> c
    22:48:void stretchViews(int,int):1218:1244 -> c
    49:49:void stretchViews(int,int):1241:1241 -> c
    50:50:void stretchViews(int,int):1237:1237 -> c
    1:1:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams):1902:1902 -> checkLayoutParams
    1:1:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet):68:68 -> generateLayoutParams
    2:2:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams):1914:1914 -> generateLayoutParams
    1:1:int getAlignContent():1976:1976 -> getAlignContent
    1:1:int getAlignItems():1962:1962 -> getAlignItems
    1:1:int getFlexDirection():1920:1920 -> getFlexDirection
    1:1:int getFlexWrap():1934:1934 -> getFlexWrap
    1:1:int getJustifyContent():1948:1948 -> getJustifyContent
    1:2:int getLargestMainSize():1417:1418 -> getLargestMainSize
    1:2:int getSumOfCrossSize():1431:1432 -> getSumOfCrossSize
    1:27:void onLayout(boolean,int,int,int,int):1440:1466 -> onLayout
    28:31:void onLayout(boolean,int,int,int,int):1460:1463 -> onLayout
    32:35:void onLayout(boolean,int,int,int,int):1453:1456 -> onLayout
    36:36:void onLayout(boolean,int,int,int,int):1449:1449 -> onLayout
    37:37:void onLayout(boolean,int,int,int,int):1445:1445 -> onLayout
    1:21:void onMeasure(int,int):259:279 -> onMeasure
    22:22:void onMeasure(int,int):276:276 -> onMeasure
    23:34:void onMeasure(int,int):272:283 -> onMeasure
    1:3:void setAlignContent(int):1981:1983 -> setAlignContent
    1:3:void setAlignItems(int):1967:1969 -> setAlignItems
    1:3:void setFlexDirection(int):1925:1927 -> setFlexDirection
    1:3:void setFlexWrap(int):1939:1941 -> setFlexWrap
    1:3:void setJustifyContent(int):1953:1955 -> setJustifyContent
com.batch.android.messaging.view.FlexboxLayout$1 -> com.batch.android.messaging.view.e$a:
com.batch.android.messaging.view.FlexboxLayout$AlignContent -> com.batch.android.messaging.view.e$b:
com.batch.android.messaging.view.FlexboxLayout$AlignItems -> com.batch.android.messaging.view.e$c:
com.batch.android.messaging.view.FlexboxLayout$FlexDirection -> com.batch.android.messaging.view.e$d:
com.batch.android.messaging.view.FlexboxLayout$FlexLine -> com.batch.android.messaging.view.e$e:
    float totalFlexShrink -> e
    float totalFlexGrow -> d
    int maxBaseline -> f
    java.util.List indicesAlignSelfStretch -> g
    int crossSize -> b
    int itemCount -> c
    int mainSize -> a
    1:36:void <init>():2163:2198 -> <init>
    37:37:void <init>(com.batch.android.messaging.view.FlexboxLayout$1):2163:2163 -> <init>
com.batch.android.messaging.view.FlexboxLayout$FlexWrap -> com.batch.android.messaging.view.e$f:
com.batch.android.messaging.view.FlexboxLayout$JustifyContent -> com.batch.android.messaging.view.e$g:
com.batch.android.messaging.view.FlexboxLayout$LayoutParams -> com.batch.android.messaging.view.e$h:
    float FLEX_GROW_DEFAULT -> l
    int ALIGN_SELF_AUTO -> o
    int ORDER_DEFAULT -> k
    boolean wrapBefore -> j
    int maxWidth -> h
    float flexBasisPercent -> e
    int maxHeight -> i
    int minWidth -> f
    float flexShrink -> c
    int minHeight -> g
    float flexGrow -> b
    int alignSelf -> d
    int order -> a
    int ALIGN_SELF_STRETCH -> t
    int MAX_SIZE -> u
    int ALIGN_SELF_CENTER -> r
    int ALIGN_SELF_BASELINE -> s
    float FLEX_BASIS_PERCENT_DEFAULT -> n
    int ALIGN_SELF_FLEX_START -> p
    float FLEX_SHRINK_DEFAULT -> m
    int ALIGN_SELF_FLEX_END -> q
    1:1:void <init>(android.content.Context,android.util.AttributeSet):2094:2094 -> <init>
    2:60:void <init>(android.content.Context,android.util.AttributeSet):2020:2078 -> <init>
    61:61:void <init>(com.batch.android.messaging.view.FlexboxLayout$LayoutParams):2099:2099 -> <init>
    62:152:void <init>(com.batch.android.messaging.view.FlexboxLayout$LayoutParams):2020:2110 -> <init>
    153:153:void <init>(android.view.ViewGroup$LayoutParams):2115:2115 -> <init>
    154:212:void <init>(android.view.ViewGroup$LayoutParams):2020:2078 -> <init>
    213:213:void <init>(int,int):2120:2120 -> <init>
    214:272:void <init>(int,int):2020:2078 -> <init>
com.batch.android.messaging.view.FlexboxLayout$Order -> com.batch.android.messaging.view.e$i:
    int order -> b
    int index -> a
    1:1:void <init>():2128:2128 -> <init>
    2:2:void <init>(com.batch.android.messaging.view.FlexboxLayout$1):2128:2128 -> <init>
    1:4:int compareTo(com.batch.android.messaging.view.FlexboxLayout$Order):2144:2147 -> a
    1:1:int compareTo(java.lang.Object):2128:2128 -> compareTo
    1:1:java.lang.String toString():2153:2153 -> toString
com.batch.android.messaging.view.MaximumHeightScrollView -> com.batch.android.messaging.view.f:
    int maxHeightPx -> a
    1:1:void <init>(android.content.Context):19:19 -> <init>
    2:2:void <init>(android.content.Context):15:15 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet):24:24 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet):15:15 -> <init>
    5:5:void <init>(android.content.Context,android.util.AttributeSet,int):29:29 -> <init>
    6:6:void <init>(android.content.Context,android.util.AttributeSet,int):15:15 -> <init>
    7:7:void <init>(android.content.Context,android.util.AttributeSet,int,int):39:39 -> <init>
    8:8:void <init>(android.content.Context,android.util.AttributeSet,int,int):15:15 -> <init>
    1:8:void onMeasure(int,int):51:58 -> onMeasure
    1:1:void setMaxHeight(int):44:44 -> setMaxHeight
com.batch.android.messaging.view.PannableBannerFrameLayout -> com.batch.android.messaging.view.g:
    java.lang.Object cancellationAnimation -> h
    int touchSlop -> l
    int FLING_VELOCITY_DISMISS_THRESHOLD -> m
    boolean isPanning -> i
    int cancellationAnimationDuration -> j
    float initialInterceptYOffset -> g
    int dismissAnimationDuration -> k
    float initialSwipeYOffset -> f
    android.view.GestureDetector detector -> b
    com.batch.android.messaging.view.PannableBannerFrameLayout$OnDismissListener dismissListener -> d
    com.batch.android.messaging.view.PannableBannerFrameLayout$DismissDirection dismissDirection -> c
    boolean isPannable -> e
    boolean supportsAndroidXAnimation -> a
    float PAN_HEIGHT_DISMISS_RATIO_THRESHOLD -> n
    1:1:void <init>(android.content.Context):90:90 -> <init>
    2:38:void <init>(android.content.Context):55:91 -> <init>
    39:39:void <init>(android.content.Context,android.util.AttributeSet):96:96 -> <init>
    40:82:void <init>(android.content.Context,android.util.AttributeSet):55:97 -> <init>
    83:83:void <init>(android.content.Context,android.util.AttributeSet,int):104:104 -> <init>
    84:134:void <init>(android.content.Context,android.util.AttributeSet,int):55:105 -> <init>
    1:1:com.batch.android.messaging.view.PannableBannerFrameLayout$OnDismissListener access$000(com.batch.android.messaging.view.PannableBannerFrameLayout):30:30 -> a
    2:2:boolean hasYPassedTouchSlop(float,float):316:316 -> a
    3:4:void beginPan(float):321:322 -> a
    5:10:void cancelCancellationAnimation():357:362 -> a
    1:11:void dismiss():368:378 -> b
    12:56:void dismiss():376:420 -> b
    1:15:void setup():110:124 -> c
    1:10:void startCancelAnimation():327:336 -> d
    1:4:void startFallbackCancelAnimation():342:342 -> e
    8:14:void startFallbackCancelAnimation():346:352 -> e
    1:14:boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float):295:308 -> onFling
    1:25:boolean onInterceptTouchEvent(android.view.MotionEvent):146:170 -> onInterceptTouchEvent
    26:26:boolean onInterceptTouchEvent(android.view.MotionEvent):155:155 -> onInterceptTouchEvent
    1:64:boolean onTouchEvent(android.view.MotionEvent):185:248 -> onTouchEvent
    65:110:boolean onTouchEvent(android.view.MotionEvent):197:242 -> onTouchEvent
    111:169:boolean onTouchEvent(android.view.MotionEvent):194:252 -> onTouchEvent
    1:1:void setDismissDirection(com.batch.android.messaging.view.PannableBannerFrameLayout$DismissDirection):130:130 -> setDismissDirection
    1:1:void setDismissListener(com.batch.android.messaging.view.PannableBannerFrameLayout$OnDismissListener):135:135 -> setDismissListener
    1:1:void setPannable(boolean):140:140 -> setPannable
com.batch.android.messaging.view.PannableBannerFrameLayout$1 -> com.batch.android.messaging.view.g$a:
    com.batch.android.messaging.view.PannableBannerFrameLayout this$0 -> a
    1:1:void <init>(com.batch.android.messaging.view.PannableBannerFrameLayout):383:383 -> <init>
    1:2:void onAnimationEnd(android.animation.Animator):394:395 -> onAnimationEnd
com.batch.android.messaging.view.PannableBannerFrameLayout$DismissDirection -> com.batch.android.messaging.view.g$b:
    com.batch.android.messaging.view.PannableBannerFrameLayout$DismissDirection TOP -> a
    com.batch.android.messaging.view.PannableBannerFrameLayout$DismissDirection BOTTOM -> b
    com.batch.android.messaging.view.PannableBannerFrameLayout$DismissDirection[] $VALUES -> c
    1:2:void <clinit>():428:429 -> <clinit>
    3:3:void <clinit>():426:426 -> <clinit>
    1:1:void <init>(java.lang.String,int):426:426 -> <init>
    1:1:com.batch.android.messaging.view.PannableBannerFrameLayout$DismissDirection valueOf(java.lang.String):426:426 -> valueOf
    1:1:com.batch.android.messaging.view.PannableBannerFrameLayout$DismissDirection[] values():426:426 -> values
com.batch.android.messaging.view.PannableBannerFrameLayout$OnDismissListener -> com.batch.android.messaging.view.g$c:
    void onDismiss(com.batch.android.messaging.view.PannableBannerFrameLayout) -> a
com.batch.android.messaging.view.PositionableGradientDrawable -> com.batch.android.messaging.view.h:
    com.batch.android.messaging.view.PositionableGradientDrawable$GradientState mGradientState -> a
    boolean mGradientIsDirty -> k
    android.graphics.Rect mPadding -> c
    android.graphics.Paint mLayerPaint -> j
    android.graphics.PorterDuffColorFilter mTintFilter -> f
    android.graphics.Paint mStrokePaint -> d
    int RADIUS_TYPE_FRACTION_PARENT -> y
    android.graphics.Paint mFillPaint -> b
    int RADIUS_TYPE_PIXELS -> w
    int RADIAL_GRADIENT -> u
    int RING -> s
    float mGradientRadius -> o
    int OVAL -> q
    boolean mPathIsDirty -> n
    android.graphics.ColorFilter mColorFilter -> e
    boolean mMutated -> l
    int mAlpha -> g
    android.graphics.Path mPath -> h
    float DEFAULT_THICKNESS_RATIO -> A
    android.graphics.RectF mRect -> i
    float DEFAULT_INNER_RADIUS_RATIO -> z
    android.graphics.Path mRingPath -> m
    int RADIUS_TYPE_FRACTION -> x
    int SWEEP_GRADIENT -> v
    int LINEAR_GRADIENT -> t
    int LINE -> r
    int RECTANGLE -> p
    1:1:void <init>(com.batch.android.messaging.view.PositionableGradientDrawable$GradientState,android.content.res.Resources,com.batch.android.messaging.view.PositionableGradientDrawable$1):49:49 -> <init>
    2:2:void <init>():168:168 -> <init>
    3:3:void <init>(com.batch.android.messaging.view.PositionableGradientDrawable$Orientation,int[],float[]):179:179 -> <init>
    4:4:void <init>(com.batch.android.messaging.view.PositionableGradientDrawable$GradientState,android.content.res.Resources):1422:1422 -> <init>
    5:1324:void <init>(com.batch.android.messaging.view.PositionableGradientDrawable$GradientState,android.content.res.Resources):106:1425 -> <init>
    boolean isOpaque(int) -> a
    1:3:void setCornerRadii(float[]):210:212 -> a
    4:6:void setCornerRadius(float):230:232 -> a
    7:7:void setStroke(int,android.content.res.ColorStateList):266:266 -> a
    8:9:void setStroke(int,int,float,float):285:286 -> a
    10:18:void setStroke(int,android.content.res.ColorStateList,float,float):307:315 -> a
    19:21:void setSize(int,int):349:351 -> a
    22:24:void setGradientCenter(float,float):403:405 -> a
    25:27:void setUseLevel(boolean):456:458 -> a
    28:30:void setOrientation(com.batch.android.messaging.view.PositionableGradientDrawable$Orientation):486:488 -> a
    31:36:void setColors(int[],float[]):507:512 -> a
    37:42:void buildPathIfDirty():659:664 -> a
    43:90:android.graphics.Path buildRing(com.batch.android.messaging.view.PositionableGradientDrawable$GradientState):670:717 -> a
    91:100:void setColor(android.content.res.ColorStateList):755:764 -> a
    101:142:void updateLocalState(android.content.res.Resources):1430:1471 -> a
    1:1:void setStroke(int,int):249:249 -> b
    2:14:void setStrokeInternal(int,int,float,float):320:332 -> b
    15:17:void setGradientRadius(float):421:423 -> b
    18:18:int modulateAlpha(int):463:463 -> b
    19:19:void clearMutated():1161:1161 -> b
    1:3:void setColor(int):735:737 -> c
    4:73:boolean ensureValidRect():915:984 -> c
    74:76:boolean ensureValidRect():975:977 -> c
    77:80:boolean ensureValidRect():969:972 -> c
    81:84:boolean ensureValidRect():963:966 -> c
    85:88:boolean ensureValidRect():957:960 -> c
    89:91:boolean ensureValidRect():951:953 -> c
    92:95:boolean ensureValidRect():945:948 -> c
    96:220:boolean ensureValidRect():939:1063 -> c
    1:3:void setGradientType(int):384:386 -> d
    4:9:float getGradientRadius():434:439 -> d
    1:125:void draw(android.graphics.Canvas):518:642 -> draw
    126:129:void draw(android.graphics.Canvas):631:634 -> draw
    130:132:void draw(android.graphics.Canvas):625:627 -> draw
    133:146:void draw(android.graphics.Canvas):595:608 -> draw
    147:192:void draw(android.graphics.Canvas):607:652 -> draw
    1:4:void setShape(int):366:369 -> e
    5:5:com.batch.android.messaging.view.PositionableGradientDrawable$Orientation getOrientation():472:472 -> e
    1:7:boolean isOpaqueForState():1087:1093 -> f
    1:1:int getAlpha():837:837 -> getAlpha
    1:1:int getChangingConfigurations():822:822 -> getChangingConfigurations
    1:1:android.graphics.ColorFilter getColorFilter():852:852 -> getColorFilter
    1:2:android.graphics.drawable.Drawable$ConstantState getConstantState():1081:1082 -> getConstantState
    1:1:int getIntrinsicHeight():1075:1075 -> getIntrinsicHeight
    1:1:int getIntrinsicWidth():1069:1069 -> getIntrinsicWidth
    1:1:int getOpacity():883:883 -> getOpacity
    1:37:void getOutline(android.graphics.Outline):1103:1139 -> getOutline
    38:38:void getOutline(android.graphics.Outline):1128:1128 -> getOutline
    39:49:void getOutline(android.graphics.Outline):1113:1123 -> getOutline
    50:53:void getOutline(android.graphics.Outline):1122:1125 -> getOutline
    1:5:boolean getPadding(android.graphics.Rect):185:189 -> getPadding
    1:5:boolean isStateful():812:816 -> isStateful
    1:4:android.graphics.drawable.Drawable mutate():1147:1150 -> mutate
    1:4:void onBoundsChange(android.graphics.Rect):890:893 -> onBoundsChange
    1:4:boolean onLevelChange(int):899:902 -> onLevelChange
    1:31:boolean onStateChange(int[]):772:802 -> onStateChange
    1:3:void setAlpha(int):828:830 -> setAlpha
    1:3:void setColorFilter(android.graphics.ColorFilter):858:860 -> setColorFilter
    1:3:void setDither(boolean):843:845 -> setDither
    1:3:void setTintList(android.content.res.ColorStateList):867:869 -> setTintList
    1:3:void setTintMode(android.graphics.PorterDuff$Mode):875:877 -> setTintMode
com.batch.android.messaging.view.PositionableGradientDrawable$1 -> com.batch.android.messaging.view.h$a:
    int[] $SwitchMap$com$batch$android$messaging$view$PositionableGradientDrawable$Orientation -> a
    1:1:void <clinit>():937:937 -> <clinit>
com.batch.android.messaging.view.PositionableGradientDrawable$GradientState -> com.batch.android.messaging.view.h$b:
    int mStrokeWidth -> l
    float[] mTempPositions -> j
    int mAngle -> d
    int mShape -> b
    int[] mGradientColors -> h
    float mCenterX -> y
    int[] mThemeAttrs -> I
    android.graphics.PorterDuff$Mode mTintMode -> H
    float mThicknessRatio -> u
    boolean mOpaqueOverBounds -> E
    com.batch.android.messaging.view.PositionableGradientDrawable$Orientation mOrientation -> e
    android.content.res.ColorStateList mStrokeColors -> g
    int mThickness -> w
    int[] mAttrPadding -> O
    float mRadius -> o
    int mHeight -> s
    int[] mAttrGradient -> K
    boolean mUseLevel -> C
    float mStrokeDashWidth -> m
    float[] mRadiusArray -> p
    int[] mAttrStroke -> M
    float[] mPositions -> k
    boolean mDither -> x
    float mGradientRadius -> A
    int mGradientRadiusType -> B
    int mGradient -> c
    int mChangingConfigurations -> a
    float mCenterY -> z
    int[] mTempColors -> i
    android.content.res.ColorStateList mSolidColors -> f
    float mInnerRadiusRatio -> t
    int mInnerRadius -> v
    int[] mAttrCorners -> N
    boolean mOpaqueOverShape -> F
    android.content.res.ColorStateList mTint -> G
    int mWidth -> r
    int[] mAttrSize -> J
    float mStrokeDashGap -> n
    android.graphics.Rect mPadding -> q
    int[] mAttrSolid -> L
    boolean mUseLevelForShape -> D
    1:1:void <init>(com.batch.android.messaging.view.PositionableGradientDrawable$Orientation,int[],float[]):1214:1214 -> <init>
    2:52:void <init>(com.batch.android.messaging.view.PositionableGradientDrawable$Orientation,int[],float[]):1167:1217 -> <init>
    53:53:void <init>(com.batch.android.messaging.view.PositionableGradientDrawable$GradientState):1221:1221 -> <init>
    54:155:void <init>(com.batch.android.messaging.view.PositionableGradientDrawable$GradientState):1167:1268 -> <init>
    1:1:void access$100(com.batch.android.messaging.view.PositionableGradientDrawable$GradientState):1164:1164 -> a
    2:2:void setGradientType(int):1314:1314 -> a
    3:4:void setGradientCenter(float,float):1319:1320 -> a
    5:7:void setGradientColors(int[]):1325:1327 -> a
    8:10:void setSolidColors(android.content.res.ColorStateList):1338:1340 -> a
    11:30:void computeOpacity():1345:1364 -> a
    31:35:void setStroke(int,android.content.res.ColorStateList,float,float):1371:1375 -> a
    36:37:void setCornerRadius(float):1383:1384 -> a
    38:40:void setCornerRadii(float[]):1389:1391 -> a
    41:42:void setSize(int,int):1397:1398 -> a
    43:44:void setGradientRadius(float,int):1403:1404 -> a
    1:2:void setShape(int):1308:1309 -> b
    3:4:void setGradientPositions(float[]):1332:1333 -> b
    1:5:boolean canApplyTheme():1274:1278 -> canApplyTheme
    1:8:int getChangingConfigurations():1296:1303 -> getChangingConfigurations
    1:1:android.graphics.drawable.Drawable newDrawable():1284:1284 -> newDrawable
    2:2:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources):1290:1290 -> newDrawable
com.batch.android.messaging.view.PositionableGradientDrawable$Orientation -> com.batch.android.messaging.view.h$c:
    com.batch.android.messaging.view.PositionableGradientDrawable$Orientation TR_BL -> b
    com.batch.android.messaging.view.PositionableGradientDrawable$Orientation TOP_BOTTOM -> a
    com.batch.android.messaging.view.PositionableGradientDrawable$Orientation BR_TL -> d
    com.batch.android.messaging.view.PositionableGradientDrawable$Orientation RIGHT_LEFT -> c
    com.batch.android.messaging.view.PositionableGradientDrawable$Orientation BL_TR -> f
    com.batch.android.messaging.view.PositionableGradientDrawable$Orientation BOTTOM_TOP -> e
    com.batch.android.messaging.view.PositionableGradientDrawable$Orientation TL_BR -> h
    com.batch.android.messaging.view.PositionableGradientDrawable$Orientation LEFT_RIGHT -> g
    com.batch.android.messaging.view.PositionableGradientDrawable$Orientation[] $VALUES -> i
    1:29:void <clinit>():135:163 -> <clinit>
    30:30:void <clinit>():130:130 -> <clinit>
    1:1:void <init>(java.lang.String,int):130:130 -> <init>
    1:1:com.batch.android.messaging.view.PositionableGradientDrawable$Orientation valueOf(java.lang.String):130:130 -> valueOf
    1:1:com.batch.android.messaging.view.PositionableGradientDrawable$Orientation[] values():130:130 -> values
com.batch.android.messaging.view.formats.BannerView -> com.batch.android.messaging.view.i.a:
    int BODY_MAX_HEIGHT_DP -> n
    android.content.Context context -> a
    android.graphics.Point screenSizeDP -> e
    int IMAGE_FADE_IN_ANIMATION_DURATION -> l
    int BODY_MIN_HEIGHT_DP -> m
    long uptimeWhenShown -> k
    com.batch.android.messaging.view.roundimage.RoundedImageView imageView -> i
    com.batch.android.messaging.model.BaseBannerMessage message -> b
    com.batch.android.messaging.view.CountdownView countdownView -> h
    com.batch.android.messaging.view.helper.ImageHelper$Cache imageCache -> c
    com.batch.android.messaging.view.styled.SeparatedFlexboxLayout contentLayout -> g
    com.batch.android.messaging.view.formats.BannerView$OnActionListener actionListener -> j
    com.batch.android.messaging.view.formats.BannerView$VerticalEdge pinnedVerticalEdge -> f
    com.batch.android.messaging.css.Document style -> d
    1:47:void <init>(android.content.Context,com.batch.android.messaging.model.BaseBannerMessage,com.batch.android.messaging.css.Document,com.batch.android.messaging.css.DOMNode,com.batch.android.messaging.view.helper.ImageHelper$Cache):99:145 -> <init>
    1:2:void lambda$makeCTALayout$2(int,com.batch.android.messaging.model.CTA,android.view.View):284:285 -> a
    3:16:android.view.View getStyledFlexboxSubview(android.util.Pair):308:321 -> a
    17:34:void addCloseButton():358:375 -> a
    35:36:void lambda$addCloseButton$3(android.view.View):371:372 -> a
    37:43:com.batch.android.messaging.view.formats.BannerView$VerticalEdge getPinnedVerticalEdge(java.util.Map):401:407 -> a
    44:44:java.util.Map getRulesForView(com.batch.android.messaging.css.DOMNode):422:422 -> a
    45:47:java.util.Map getRulesForSeparator(com.batch.android.messaging.view.styled.SeparatedFlexboxLayout,java.lang.String):429:429 -> a
    48:54:void displayImage(com.batch.android.messaging.AsyncImageDownloadTask$Result):487:493 -> a
    1:1:void lambda$makeContentLayout$1(android.view.View):216:216 -> b
    2:52:com.batch.android.messaging.view.styled.SeparatedFlexboxLayout makeCTALayout(java.util.Map):250:300 -> b
    53:67:void addCountdownView():381:395 -> b
    68:71:void onImageDownloadSuccess(com.batch.android.messaging.AsyncImageDownloadTask$Result):473:476 -> b
    1:1:void lambda$new$0(android.view.View):139:139 -> c
    2:67:com.batch.android.messaging.view.styled.SeparatedFlexboxLayout makeContentLayout(java.util.Map):177:242 -> c
    68:90:void addImage():327:349 -> c
    void onImageDownloadStart() -> d
    void onImageDownloadError() -> e
    1:1:boolean canAutoClose():165:165 -> f
    1:1:boolean mustWaitTapDelay():435:435 -> g
    1:1:com.batch.android.messaging.view.styled.SeparatedFlexboxLayout getContentView():155:155 -> getContentView
    1:1:com.batch.android.messaging.view.formats.BannerView$VerticalEdge getPinnedVerticalEdge():417:417 -> getPinnedVerticalEdge
    1:7:void onGlobalTap():440:446 -> h
    1:1:void onShown():160:160 -> i
    1:2:void startAutoCloseCountdown():170:171 -> j
    1:6:void onAttachedToWindow():453:458 -> onAttachedToWindow
    1:1:void setActionListener(com.batch.android.messaging.view.formats.BannerView$OnActionListener):150:150 -> setActionListener
com.batch.android.messaging.view.formats.BannerView$OnActionListener -> com.batch.android.messaging.view.i.a$a:
    void onCTAAction(int,com.batch.android.messaging.model.CTA) -> a
    void onCloseAction() -> a
    void onGlobalAction() -> b
com.batch.android.messaging.view.formats.BannerView$VerticalEdge -> com.batch.android.messaging.view.i.a$b:
    com.batch.android.messaging.view.formats.BannerView$VerticalEdge BOTTOM -> b
    com.batch.android.messaging.view.formats.BannerView$VerticalEdge[] $VALUES -> c
    com.batch.android.messaging.view.formats.BannerView$VerticalEdge TOP -> a
    1:2:void <clinit>():499:500 -> <clinit>
    3:3:void <clinit>():497:497 -> <clinit>
    1:1:void <init>(java.lang.String,int):497:497 -> <init>
    1:1:com.batch.android.messaging.view.formats.BannerView$VerticalEdge valueOf(java.lang.String):497:497 -> valueOf
    1:1:com.batch.android.messaging.view.formats.BannerView$VerticalEdge[] values():497:497 -> values
com.batch.android.messaging.view.formats.EmbeddedBannerContainer -> com.batch.android.messaging.view.i.b:
    android.content.Context context -> a
    boolean alreadyDismissed -> i
    com.batch.android.messaging.view.formats.EmbeddedBannerContainer$BaseView rootView -> e
    com.batch.android.messaging.view.formats.BannerView bannerView -> f
    java.lang.Object autoCloseHandlerToken -> o
    android.view.ViewGroup parentView -> b
    com.batch.android.messaging.model.BannerMessage message -> d
    com.batch.android.MessagingAnalyticsDelegate analyticsDelegate -> k
    com.batch.android.BatchMessage payloadMessage -> c
    android.os.Handler mainThreadHandler -> n
    boolean alreadyShown -> h
    android.util.LruCache imageCache -> l
    int IN_OUT_ANIMATION_DURATION_MS -> p
    android.content.BroadcastReceiver dismissReceiver -> m
    com.batch.android.messaging.view.formats.BannerView$VerticalEdge pinnedVerticalEdge -> g
    com.batch.android.module.MessagingModule messagingModule -> j
    1:1:void <init>(com.batch.android.module.MessagingModule,android.view.View,com.batch.android.BatchMessage,com.batch.android.messaging.model.BannerMessage,com.batch.android.MessagingAnalyticsDelegate,boolean):123:123 -> <init>
    2:62:void <init>(com.batch.android.module.MessagingModule,android.view.View,com.batch.android.BatchMessage,com.batch.android.messaging.model.BannerMessage,com.batch.android.MessagingAnalyticsDelegate,boolean):72:132 -> <init>
    63:113:void <init>(com.batch.android.module.MessagingModule,android.view.View,com.batch.android.BatchMessage,com.batch.android.messaging.model.BannerMessage,com.batch.android.MessagingAnalyticsDelegate,boolean):129:179 -> <init>
    114:114:void <init>(com.batch.android.module.MessagingModule,android.view.View,com.batch.android.BatchMessage,com.batch.android.messaging.model.BannerMessage,com.batch.android.MessagingAnalyticsDelegate,boolean):138:138 -> <init>
    1:1:boolean access$000(com.batch.android.messaging.view.formats.EmbeddedBannerContainer):54:54 -> a
    2:3:com.batch.android.messaging.view.formats.EmbeddedBannerContainer provide(android.view.View,com.batch.android.BatchMessage,com.batch.android.messaging.model.BannerMessage,com.batch.android.MessagingAnalyticsDelegate,boolean):106:107 -> a
    4:17:android.view.ViewGroup findBestParentView(android.view.View):190:203 -> a
    18:61:void dismiss(boolean):319:362 -> a
    62:63:void onCloseAction():382:383 -> a
    64:66:void onCTAAction(int,com.batch.android.messaging.model.CTA):389:391 -> a
    67:69:void onDismiss(com.batch.android.messaging.view.PannableBannerFrameLayout):412:414 -> a
    70:70:void put(com.batch.android.messaging.AsyncImageDownloadTask$Result):421:421 -> a
    71:71:com.batch.android.messaging.AsyncImageDownloadTask$Result get(java.lang.String):428:428 -> a
    1:1:android.content.BroadcastReceiver access$100(com.batch.android.messaging.view.formats.EmbeddedBannerContainer):54:54 -> b
    2:2:void dismissOnMainThread(boolean):314:314 -> b
    3:10:void onGlobalAction():397:404 -> b
    1:1:android.content.Context access$200(com.batch.android.messaging.view.formats.EmbeddedBannerContainer):54:54 -> c
    2:2:void lambda$dismissOnMainThread$0(boolean):314:314 -> c
    3:3:int layoutGravityForPinnedEdge():376:376 -> c
    1:1:void access$300(com.batch.android.messaging.view.formats.EmbeddedBannerContainer):54:54 -> d
    2:3:com.batch.android.messaging.view.formats.BannerView makeBannerView():212:213 -> d
    1:1:void access$400(com.batch.android.messaging.view.formats.EmbeddedBannerContainer):54:54 -> e
    2:4:void performAutoClose():306:308 -> e
    1:4:void removeFromParent():367:370 -> f
    1:5:void scheduleAutoClose():290:294 -> g
    1:67:void show():219:285 -> h
    1:1:void unscheduleAutoClose():301:301 -> i
com.batch.android.messaging.view.formats.EmbeddedBannerContainer$1 -> com.batch.android.messaging.view.i.b$a:
    com.batch.android.messaging.view.formats.EmbeddedBannerContainer this$0 -> a
    1:1:void <init>(com.batch.android.messaging.view.formats.EmbeddedBannerContainer):82:82 -> <init>
    1:5:void onReceive(android.content.Context,android.content.Intent):86:90 -> onReceive
com.batch.android.messaging.view.formats.EmbeddedBannerContainer$2 -> com.batch.android.messaging.view.i.b$b:
    com.batch.android.messaging.view.formats.EmbeddedBannerContainer this$0 -> a
    1:1:void <init>(com.batch.android.messaging.view.formats.EmbeddedBannerContainer):270:270 -> <init>
    1:2:void onViewDetachedFromWindow(android.view.View):280:281 -> onViewDetachedFromWindow
com.batch.android.messaging.view.formats.EmbeddedBannerContainer$3 -> com.batch.android.messaging.view.i.b$c:
    com.batch.android.messaging.view.formats.EmbeddedBannerContainer this$0 -> a
    1:1:void <init>(com.batch.android.messaging.view.formats.EmbeddedBannerContainer):330:330 -> <init>
    1:1:void onAnimationCancel(android.animation.Animator):346:346 -> onAnimationCancel
    1:1:void onAnimationEnd(android.animation.Animator):340:340 -> onAnimationEnd
com.batch.android.messaging.view.formats.EmbeddedBannerContainer$BaseView -> com.batch.android.messaging.view.i.b$d:
    1:1:void <init>(android.content.Context):439:439 -> <init>
    1:2:void onAttachedToWindow():445:446 -> onAttachedToWindow
com.batch.android.messaging.view.formats.ImageFormatView -> com.batch.android.messaging.view.i.c:
    android.content.Context context -> a
    android.graphics.Point screenSizeDP -> e
    android.widget.RelativeLayout rootContainerView -> g
    com.batch.android.messaging.view.roundimage.RoundedImageView imageView -> j
    long uptimeWhenShown -> l
    com.batch.android.messaging.view.helper.ImageHelper$Cache imageCache -> c
    com.batch.android.messaging.view.formats.ImageFormatView$ImageContainerView imageContainerView -> h
    com.batch.android.messaging.view.formats.ImageFormatView$OnActionListener actionListener -> k
    android.widget.ProgressBar imageViewLoader -> i
    com.batch.android.core.Promise viewShownPromise -> m
    com.batch.android.messaging.model.ImageMessage message -> b
    float MODAL_CONTAINER_MARGIN_DP -> q
    float CLOSE_PADDING_DP -> p
    int IMAGE_FADE_IN_ANIMATION_DURATION -> r
    com.batch.android.messaging.view.AnimatedCloseButton closeButton -> f
    float FULLSCREEN_CLOSE_BUTTON_MARGIN_DP -> o
    float CLOSE_SIZE_DP -> n
    com.batch.android.messaging.css.Document style -> d
    1:1:void <init>(android.content.Context,com.batch.android.messaging.model.ImageMessage,com.batch.android.messaging.css.Document,com.batch.android.messaging.view.helper.ImageHelper$Cache):98:98 -> <init>
    2:46:void <init>(android.content.Context,com.batch.android.messaging.model.ImageMessage,com.batch.android.messaging.css.Document,com.batch.android.messaging.view.helper.ImageHelper$Cache):84:128 -> <init>
    1:1:java.util.Map getRulesForView(com.batch.android.messaging.css.DOMNode):166:166 -> a
    2:8:void addBackgroundView():173:179 -> a
    9:35:com.batch.android.messaging.view.formats.ImageFormatView$ImageContainerView addImageContainer(android.widget.RelativeLayout):203:229 -> a
    36:48:android.widget.ProgressBar addImageLoader(android.widget.FrameLayout):251:263 -> a
    49:83:com.batch.android.messaging.view.AnimatedCloseButton addCloseButton(android.widget.RelativeLayout,android.view.View):270:304 -> a
    84:85:void lambda$addCloseButton$1(android.view.View):300:301 -> a
    86:109:void displayImage(com.batch.android.messaging.AsyncImageDownloadTask$Result):370:393 -> a
    110:114:void lambda$displayImage$2(java.lang.Void):394:398 -> a
    1:13:android.widget.RelativeLayout addRootContainerView():184:196 -> b
    14:14:void lambda$addImageContainer$0(android.view.View):227:227 -> b
    15:25:com.batch.android.messaging.view.roundimage.RoundedImageView addImageView(android.widget.FrameLayout):235:245 -> b
    26:27:void onImageDownloadSuccess(com.batch.android.messaging.AsyncImageDownloadTask$Result):354:355 -> b
    1:1:boolean canAutoClose():153:153 -> c
    void onImageDownloadStart() -> d
    1:4:void onImageDownloadError():361:364 -> e
    1:1:boolean mustWaitTapDelay():314:314 -> f
    1:7:void onGlobalTap():319:325 -> g
    1:1:android.view.View getPanEffectsView():143:143 -> getPanEffectsView
    1:1:com.batch.android.messaging.view.formats.ImageFormatView$ImageContainerView getPannableView():138:138 -> getPannableView
    1:1:void onShown():148:148 -> h
    1:3:void startAutoCloseCountdown():158:160 -> i
    1:6:android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets):413:418 -> onApplyWindowInsets
    7:14:android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets):415:422 -> onApplyWindowInsets
    1:5:void onAttachedToWindow():336:340 -> onAttachedToWindow
    1:1:void setActionListener(com.batch.android.messaging.view.formats.ImageFormatView$OnActionListener):133:133 -> setActionListener
com.batch.android.messaging.view.formats.ImageFormatView$ImageContainerView -> com.batch.android.messaging.view.i.c$a:
    com.batch.android.messaging.view.DelegatedTouchEventViewGroup$Delegate delegate -> b
    1:1:void <init>(android.content.Context,com.batch.android.messaging.Size2D):453:453 -> <init>
    1:1:boolean superOnTouchEvent(android.view.MotionEvent):492:492 -> a
    1:1:boolean superOnInterceptTouchEvent(android.view.MotionEvent):486:486 -> b
    1:4:boolean onInterceptTouchEvent(android.view.MotionEvent):459:462 -> onInterceptTouchEvent
    1:4:boolean onTouchEvent(android.view.MotionEvent):470:473 -> onTouchEvent
    1:1:void setTouchEventDelegate(com.batch.android.messaging.view.DelegatedTouchEventViewGroup$Delegate):480:480 -> setTouchEventDelegate
com.batch.android.messaging.view.formats.ImageFormatView$OnActionListener -> com.batch.android.messaging.view.i.c$b:
    void onCloseAction() -> a
    void onGlobalAction() -> b
    void onErrorAction() -> c
    void onImageDisplayedAction() -> f
com.batch.android.messaging.view.formats.UniversalRootView -> com.batch.android.messaging.view.i.d:
    android.widget.FrameLayout heroLayout -> e
    long TAP_DELAY_MILLIS -> B
    boolean waitForHeroImage -> q
    com.batch.android.messaging.view.styled.SeparatedFlexboxLayout contentLayout -> f
    com.batch.android.messaging.AsyncImageDownloadTask$Result heroDownloadResult -> r
    int HERO_LAYOUT_ID -> A
    android.graphics.Point screenSizeDP -> u
    long drawTimeMillis -> y
    com.batch.android.messaging.css.Document style -> p
    android.view.View heroPlaceholder -> m
    com.batch.android.messaging.model.UniversalMessage message -> o
    java.util.Map ctasStyleRules -> i
    int originalContentPaddingTop -> w
    boolean landscape -> b
    double DEFAULT_HERO_SPLIT_RATIO -> z
    com.batch.android.messaging.view.AnimatedCloseButton closeButton -> j
    com.batch.android.messaging.view.roundimage.RoundedImageView heroImageView -> l
    android.view.TextureView$SurfaceTextureListener surfaceHolderCallback -> t
    com.batch.android.messaging.view.formats.UniversalRootView$OnActionListener actionListener -> s
    android.content.Context context -> d
    com.batch.android.messaging.view.styled.SeparatedFlexboxLayout ctasLayout -> g
    android.view.TextureView videoView -> k
    android.widget.ProgressBar heroLoader -> n
    int originalCloseMarginTop -> x
    int topInset -> v
    boolean childRelayoutingNeeded -> c
    java.util.Map contentStyleRules -> h
    1:1:void <init>(android.content.Context,com.batch.android.messaging.model.UniversalMessage,com.batch.android.messaging.css.Document,com.batch.android.messaging.AsyncImageDownloadTask$Result,boolean):112:112 -> <init>
    2:60:void <init>(android.content.Context,com.batch.android.messaging.model.UniversalMessage,com.batch.android.messaging.css.Document,com.batch.android.messaging.AsyncImageDownloadTask$Result,boolean):72:130 -> <init>
    1:2:void lambda$createViews$0(android.view.View):192:193 -> a
    3:4:void lambda$setupContentLayout$1(int,com.batch.android.messaging.model.CTA,android.view.View):288:289 -> a
    5:20:android.view.View getConfiguredView(android.util.Pair):325:340 -> a
    21:21:boolean canAutoClose():559:559 -> a
    22:29:void onHeroDownloaded(com.batch.android.messaging.AsyncImageDownloadTask$Result):591:598 -> a
    30:30:java.util.Map getRulesForView(com.batch.android.messaging.css.DOMNode):650:650 -> a
    31:33:java.util.Map getRulesForSeparator(com.batch.android.messaging.view.styled.SeparatedFlexboxLayout,java.lang.String):657:657 -> a
    1:37:void createViews():166:202 -> b
    1:4:void displayHero():550:553 -> c
    1:1:boolean mustWaitTapDelay():645:645 -> d
    1:5:void dispatchDraw(android.graphics.Canvas):156:160 -> dispatchDraw
    1:1:void onHeroBitmapStartsDownloading():586:586 -> e
    1:109:void setupContentLayout():210:318 -> f
    1:16:void setupCtaLayoutIfNeeded():430:445 -> g
    1:78:void setupHeroLayout():347:424 -> h
    1:92:void setupVariableLayoutParameters():454:545 -> i
    1:1:boolean shouldApplyWindowInsetToContent():637:637 -> j
    1:3:void startAutoCloseCountdown():564:566 -> k
    1:5:void updateLayoutInsets():620:624 -> l
    6:15:void updateLayoutInsets():621:630 -> l
    1:6:android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets):606:611 -> onApplyWindowInsets
    7:11:android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets):608:612 -> onApplyWindowInsets
    1:3:void onDraw(android.graphics.Canvas):148:150 -> onDraw
    1:6:void onSizeChanged(int,int,int,int):136:141 -> onSizeChanged
    1:1:void setActionListener(com.batch.android.messaging.view.formats.UniversalRootView$OnActionListener):572:572 -> setActionListener
    1:5:void setSurfaceHolderCallback(android.view.TextureView$SurfaceTextureListener):577:581 -> setSurfaceHolderCallback
com.batch.android.messaging.view.formats.UniversalRootView$OnActionListener -> com.batch.android.messaging.view.i.d$a:
    void onCTAAction(int,com.batch.android.messaging.model.CTA) -> a
    void onCloseAction() -> a
com.batch.android.messaging.view.helper.ImageHelper -> com.batch.android.messaging.view.j.a:
    1:1:void <init>():13:13 -> <init>
    1:13:void setDownloadResultInImage(android.widget.ImageView,com.batch.android.messaging.AsyncImageDownloadTask$Result):26:38 -> a
com.batch.android.messaging.view.helper.ImageHelper$Cache -> com.batch.android.messaging.view.j.a$a:
    com.batch.android.messaging.AsyncImageDownloadTask$Result get(java.lang.String) -> a
    void put(com.batch.android.messaging.AsyncImageDownloadTask$Result) -> a
com.batch.android.messaging.view.helper.StyleHelper -> com.batch.android.messaging.view.j.b:
    java.lang.String TAG -> a
    int RIPPLE_COLOR -> b
    1:1:void <clinit>():53:53 -> <clinit>
    1:1:void <init>():59:59 -> <init>
    1:20:void applyCommonRules(android.view.View,java.util.Map):102:121 -> a
    21:47:void applyCommonRules(android.view.View,java.util.Map):120:146 -> a
    48:105:void applyCommonRules(android.view.View,java.util.Map):143:200 -> a
    106:115:void applyCommonRules(android.view.View,java.util.Map):199:208 -> a
    116:222:void applyCommonRules(android.view.View,java.util.Map):207:313 -> a
    223:294:void applyCommonRules(android.view.View,java.util.Map):263:334 -> a
    295:295:void applyCommonRules(android.view.View,java.util.Map):331:331 -> a
    296:374:com.batch.android.messaging.view.FlexboxLayout$LayoutParams getFlexLayoutParams(android.content.Context,com.batch.android.messaging.view.FlexboxLayout$LayoutParams,java.util.Map):351:429 -> a
    375:375:com.batch.android.messaging.view.FlexboxLayout$LayoutParams getFlexLayoutParams(android.content.Context,com.batch.android.messaging.view.FlexboxLayout$LayoutParams,java.util.Map):426:426 -> a
    376:447:com.batch.android.messaging.view.percent.PercentRelativeLayout$LayoutParams getRelativeLayoutParams(android.content.Context,com.batch.android.messaging.view.percent.PercentRelativeLayout$LayoutParams,java.util.Map,int,android.view.View):452:523 -> a
    448:464:com.batch.android.messaging.view.percent.PercentRelativeLayout$LayoutParams getRelativeLayoutParams(android.content.Context,com.batch.android.messaging.view.percent.PercentRelativeLayout$LayoutParams,java.util.Map,int,android.view.View):522:538 -> a
    465:541:com.batch.android.messaging.view.percent.PercentRelativeLayout$LayoutParams getRelativeLayoutParams(android.content.Context,com.batch.android.messaging.view.percent.PercentRelativeLayout$LayoutParams,java.util.Map,int,android.view.View):474:550 -> a
    542:542:com.batch.android.messaging.view.percent.PercentRelativeLayout$LayoutParams getRelativeLayoutParams(android.content.Context,com.batch.android.messaging.view.percent.PercentRelativeLayout$LayoutParams,java.util.Map,int,android.view.View):547:547 -> a
    543:601:android.widget.FrameLayout$LayoutParams getFrameLayoutParams(android.content.Context,android.widget.FrameLayout$LayoutParams,java.util.Map):572:630 -> a
    602:645:android.widget.FrameLayout$LayoutParams getFrameLayoutParams(android.content.Context,android.widget.FrameLayout$LayoutParams,java.util.Map):595:638 -> a
    646:646:android.widget.FrameLayout$LayoutParams getFrameLayoutParams(android.content.Context,android.widget.FrameLayout$LayoutParams,java.util.Map):635:635 -> a
    647:648:int dpToPixels(android.content.res.Resources,java.lang.Float):656:657 -> a
    649:649:int dpToPixels(android.content.res.Resources,java.lang.Float):655:655 -> a
    650:650:java.lang.Float optFloat(java.lang.String):710:710 -> a
    651:654:int darkenColor(int):744:747 -> a
    655:675:android.graphics.drawable.Drawable getPressableGradientDrawable(com.batch.android.messaging.view.PositionableGradientDrawable):759:779 -> a
    1:1:float pixelsToDp(android.content.res.Resources,java.lang.Float):672:672 -> b
    2:2:java.lang.Integer optInt(java.lang.String):689:689 -> b
    1:5:int parseColor(java.lang.String):726:730 -> c
    1:3:com.batch.android.messaging.css.Document parseStyle(java.lang.String):74:76 -> d
    4:12:com.batch.android.messaging.css.Document parseStyle(java.lang.String):72:80 -> d
com.batch.android.messaging.view.helper.ViewCompat -> com.batch.android.messaging.view.j.c:
    java.util.concurrent.atomic.AtomicInteger sNextGeneratedId -> a
    1:2:void <clinit>():39:40 -> <clinit>
    1:1:void <init>():34:34 -> <init>
    1:11:int generateViewId():52:62 -> a
    12:28:android.graphics.Point getScreenSize(android.content.Context):71:87 -> a
    1:6:boolean isTouchExplorationEnabled(android.content.Context):101:106 -> b
com.batch.android.messaging.view.percent.PercentFrameLayout -> com.batch.android.messaging.view.k.a:
    com.batch.android.messaging.view.percent.PercentLayoutHelper mHelper -> a
    1:1:void <init>(android.content.Context):71:71 -> <init>
    2:2:void <init>(android.content.Context):67:67 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet):76:76 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet):67:67 -> <init>
    5:5:void <init>(android.content.Context,android.util.AttributeSet,int):81:81 -> <init>
    6:6:void <init>(android.content.Context,android.util.AttributeSet,int):67:67 -> <init>
    1:2:void onLayout(boolean,int,int,int,int):97:98 -> onLayout
    1:4:void onMeasure(int,int):87:90 -> onMeasure
com.batch.android.messaging.view.percent.PercentFrameLayout$LayoutParams -> com.batch.android.messaging.view.k.a$a:
    com.batch.android.messaging.view.percent.PercentLayoutHelper$PercentLayoutInfo mPercentLayoutInfo -> a
    1:1:void <init>(int,int):108:108 -> <init>
    2:2:void <init>(int,int,int):113:113 -> <init>
    3:3:void <init>(android.view.ViewGroup$LayoutParams):118:118 -> <init>
    4:4:void <init>(android.view.ViewGroup$MarginLayoutParams):123:123 -> <init>
    5:6:void <init>(android.widget.FrameLayout$LayoutParams):128:129 -> <init>
    7:8:void <init>(com.batch.android.messaging.view.percent.PercentFrameLayout$LayoutParams):134:135 -> <init>
    1:5:com.batch.android.messaging.view.percent.PercentLayoutHelper$PercentLayoutInfo getPercentLayoutInfo():141:145 -> a
    1:1:void setBaseAttributes(android.content.res.TypedArray,int,int):151:151 -> setBaseAttributes
com.batch.android.messaging.view.percent.PercentLayoutHelper -> com.batch.android.messaging.view.k.b:
    android.view.ViewGroup mHost -> a
    java.lang.String TAG -> b
    1:2:void <init>(android.view.ViewGroup):78:79 -> <init>
    1:2:void fetchWidthAndHeight(android.view.ViewGroup$LayoutParams,android.content.res.TypedArray,int,int):90:91 -> a
    3:6:void adjustChildren(int,int):103:106 -> a
    7:30:void adjustChildren(int,int):104:127 -> a
    31:53:boolean handleMeasuredStateTooSmall():181:203 -> a
    54:55:boolean shouldHandleMeasuredHeightTooSmall(android.view.View,com.batch.android.messaging.view.percent.PercentLayoutHelper$PercentLayoutInfo):217:218 -> a
    1:17:void restoreOriginalParams():141:157 -> b
    18:19:boolean shouldHandleMeasuredWidthTooSmall(android.view.View,com.batch.android.messaging.view.percent.PercentLayoutHelper$PercentLayoutInfo):210:211 -> b
com.batch.android.messaging.view.percent.PercentLayoutHelper$PercentLayoutInfo -> com.batch.android.messaging.view.k.b$a:
    float endMarginPercent -> h
    float startMarginPercent -> g
    float bottomMarginPercent -> f
    float rightMarginPercent -> e
    float topMarginPercent -> d
    float leftMarginPercent -> c
    float heightPercent -> b
    float widthPercent -> a
    android.view.ViewGroup$MarginLayoutParams mPreservedParams -> i
    1:10:void <init>():247:256 -> <init>
    1:11:void fillLayoutParams(android.view.ViewGroup$LayoutParams,int,int):266:276 -> a
    12:20:void fillMarginLayoutParams(android.view.ViewGroup$MarginLayoutParams,int,int):287:295 -> a
    21:24:void fillMarginLayoutParams(android.view.ViewGroup$MarginLayoutParams,int,int):294:297 -> a
    25:49:void fillMarginLayoutParams(android.view.ViewGroup$MarginLayoutParams,int,int):296:320 -> a
    50:56:void restoreMarginLayoutParams(android.view.ViewGroup$MarginLayoutParams):349:355 -> a
    57:61:void restoreMarginLayoutParams(android.view.ViewGroup$MarginLayoutParams):354:358 -> a
    62:62:void restoreMarginLayoutParams(android.view.ViewGroup$MarginLayoutParams):357:357 -> a
    63:64:void restoreLayoutParams(android.view.ViewGroup$LayoutParams):369:370 -> a
    1:12:java.lang.String toString():328:328 -> toString
com.batch.android.messaging.view.percent.PercentLayoutHelper$PercentLayoutParams -> com.batch.android.messaging.view.k.b$b:
    com.batch.android.messaging.view.percent.PercentLayoutHelper$PercentLayoutInfo getPercentLayoutInfo() -> a
com.batch.android.messaging.view.percent.PercentRelativeLayout -> com.batch.android.messaging.view.k.c:
    com.batch.android.messaging.view.percent.PercentLayoutHelper mHelper -> a
    1:1:void <init>(android.content.Context):71:71 -> <init>
    2:2:void <init>(android.content.Context):67:67 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet):76:76 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet):67:67 -> <init>
    5:5:void <init>(android.content.Context,android.util.AttributeSet,int):81:81 -> <init>
    6:6:void <init>(android.content.Context,android.util.AttributeSet,int):67:67 -> <init>
    1:2:void onLayout(boolean,int,int,int,int):97:98 -> onLayout
    1:4:void onMeasure(int,int):87:90 -> onMeasure
com.batch.android.messaging.view.percent.PercentRelativeLayout$LayoutParams -> com.batch.android.messaging.view.k.c$a:
    com.batch.android.messaging.view.percent.PercentLayoutHelper$PercentLayoutInfo mPercentLayoutInfo -> a
    1:1:void <init>(int,int):108:108 -> <init>
    2:2:void <init>(android.view.ViewGroup$LayoutParams):113:113 -> <init>
    3:3:void <init>(android.view.ViewGroup$MarginLayoutParams):118:118 -> <init>
    1:5:com.batch.android.messaging.view.percent.PercentLayoutHelper$PercentLayoutInfo getPercentLayoutInfo():124:128 -> a
    1:1:void setBaseAttributes(android.content.res.TypedArray,int,int):134:134 -> setBaseAttributes
com.batch.android.messaging.view.roundimage.Corner -> com.batch.android.messaging.view.l.a:
    int BOTTOM_LEFT -> d
    int TOP_RIGHT -> b
    int BOTTOM_RIGHT -> c
    int TOP_LEFT -> a
com.batch.android.messaging.view.roundimage.RoundedDrawable -> com.batch.android.messaging.view.l.b:
    boolean mRebuildShader -> n
    android.graphics.RectF mDrawableRect -> b
    android.graphics.Matrix mShaderMatrix -> j
    android.graphics.RectF mBounds -> a
    android.graphics.RectF mBitmapRect -> c
    android.content.res.ColorStateList mBorderColor -> s
    int mBitmapWidth -> f
    android.graphics.RectF mBorderRect -> h
    int mBitmapHeight -> g
    android.graphics.Bitmap mBitmap -> d
    boolean[] mCornersRounded -> p
    boolean mOval -> q
    android.graphics.RectF mSquareCornersRect -> k
    android.graphics.Shader$TileMode mTileModeX -> l
    java.lang.String TAG -> u
    android.graphics.Paint mBorderPaint -> i
    android.graphics.Shader$TileMode mTileModeY -> m
    android.widget.ImageView$ScaleType mScaleType -> t
    android.graphics.Paint mBitmapPaint -> e
    int DEFAULT_BORDER_COLOR -> v
    float mBorderWidth -> r
    float mCornerRadius -> o
    1:1:void <init>(android.graphics.Bitmap):78:78 -> <init>
    2:43:void <init>(android.graphics.Bitmap):52:93 -> <init>
    1:1:com.batch.android.messaging.view.roundimage.RoundedDrawable fromBitmap(android.graphics.Bitmap):99:99 -> a
    2:16:android.graphics.Bitmap drawableToBitmap(android.graphics.drawable.Drawable):137:151 -> a
    17:49:void redrawBitmapForSquareCorners(android.graphics.Canvas):329:361 -> a
    50:50:float getCornerRadius(int):476:476 -> a
    51:64:com.batch.android.messaging.view.roundimage.RoundedDrawable setCornerRadius(int,float):500:513 -> a
    65:82:com.batch.android.messaging.view.roundimage.RoundedDrawable setCornerRadius(float,float,float,float):531:548 -> a
    83:93:com.batch.android.messaging.view.roundimage.RoundedDrawable setCornerRadius(float,float,float,float):546:556 -> a
    94:94:com.batch.android.messaging.view.roundimage.RoundedDrawable setCornerRadius(float,float,float,float):540:540 -> a
    95:96:com.batch.android.messaging.view.roundimage.RoundedDrawable setBorderWidth(float):567:568 -> a
    97:97:int getBorderColor():574:574 -> a
    98:99:com.batch.android.messaging.view.roundimage.RoundedDrawable setBorderColor(android.content.res.ColorStateList):589:590 -> a
    100:100:com.batch.android.messaging.view.roundimage.RoundedDrawable setOval(boolean):601:601 -> a
    101:105:com.batch.android.messaging.view.roundimage.RoundedDrawable setScaleType(android.widget.ImageView$ScaleType):613:617 -> a
    106:109:com.batch.android.messaging.view.roundimage.RoundedDrawable setTileModeX(android.graphics.Shader$TileMode):629:632 -> a
    110:111:boolean only(int,boolean[]):654:655 -> a
    112:112:boolean all(boolean[]):674:674 -> a
    1:22:android.graphics.drawable.Drawable fromDrawable(android.graphics.drawable.Drawable):108:129 -> b
    23:56:void redrawBorderForSquareCorners(android.graphics.Canvas):367:400 -> b
    57:57:com.batch.android.messaging.view.roundimage.RoundedDrawable setCornerRadius(float):487:487 -> b
    58:58:com.batch.android.messaging.view.roundimage.RoundedDrawable setBorderColor(int):579:579 -> b
    59:59:android.content.res.ColorStateList getBorderColors():584:584 -> b
    60:63:com.batch.android.messaging.view.roundimage.RoundedDrawable setTileModeY(android.graphics.Shader$TileMode):644:647 -> b
    64:64:boolean any(boolean[]):664:664 -> b
    1:1:float getBorderWidth():562:562 -> c
    1:1:float getCornerRadius():467:467 -> d
    1:32:void draw(android.graphics.Canvas):290:321 -> draw
    1:1:android.widget.ImageView$ScaleType getScaleType():607:607 -> e
    1:1:android.graphics.Bitmap getSourceBitmap():160:160 -> f
    1:1:android.graphics.Shader$TileMode getTileModeX():624:624 -> g
    1:1:int getAlpha():413:413 -> getAlpha
    1:1:android.graphics.ColorFilter getColorFilter():426:426 -> getColorFilter
    1:1:int getIntrinsicHeight():459:459 -> getIntrinsicHeight
    1:1:int getIntrinsicWidth():453:453 -> getIntrinsicWidth
    1:1:android.graphics.Shader$TileMode getTileModeY():639:639 -> h
    1:1:boolean isOval():596:596 -> i
    1:1:boolean isStateful():166:166 -> isStateful
    1:1:android.graphics.Bitmap toBitmap():684:684 -> j
    1:84:void updateShaderMatrix():187:270 -> k
    85:89:void updateShaderMatrix():259:263 -> k
    90:94:void updateShaderMatrix():251:255 -> k
    95:101:void updateShaderMatrix():220:226 -> k
    102:115:void updateShaderMatrix():225:238 -> k
    116:133:void updateShaderMatrix():198:215 -> k
    134:139:void updateShaderMatrix():189:194 -> k
    140:221:void updateShaderMatrix():193:274 -> k
    1:5:void onBoundsChange(android.graphics.Rect):280:284 -> onBoundsChange
    1:6:boolean onStateChange(int[]):172:177 -> onStateChange
    1:2:void setAlpha(int):419:420 -> setAlpha
    1:2:void setColorFilter(android.graphics.ColorFilter):432:433 -> setColorFilter
    1:2:void setDither(boolean):439:440 -> setDither
    1:2:void setFilterBitmap(boolean):446:447 -> setFilterBitmap
com.batch.android.messaging.view.roundimage.RoundedDrawable$1 -> com.batch.android.messaging.view.l.b$a:
    int[] $SwitchMap$android$widget$ImageView$ScaleType -> a
    1:1:void <clinit>():187:187 -> <clinit>
com.batch.android.messaging.view.roundimage.RoundedImageView -> com.batch.android.messaging.view.l.c:
    int mBackgroundResource -> l
    android.graphics.drawable.Drawable mDrawable -> g
    boolean mIsOval -> i
    boolean[] roundedCorners -> q
    java.lang.String TAG -> v
    android.graphics.Shader$TileMode mTileModeX -> n
    float DEFAULT_RADIUS -> w
    android.content.res.ColorStateList mBorderColor -> c
    boolean mColorMod -> f
    int TILE_MODE_MIRROR -> u
    boolean mHasColorFilter -> h
    boolean $assertionsDisabled -> A
    int TILE_MODE_CLAMP -> s
    android.graphics.ColorFilter mColorFilter -> e
    boolean mMutateBackground -> j
    int mResource -> k
    float mBorderWidth -> d
    float[] mCornerRadii -> a
    android.widget.ImageView$ScaleType[] SCALE_TYPES -> z
    android.graphics.drawable.Drawable mBackgroundDrawable -> b
    android.graphics.Shader$TileMode mTileModeY -> o
    float DEFAULT_BORDER_WIDTH -> x
    int TILE_MODE_REPEAT -> t
    android.widget.ImageView$ScaleType mScaleType -> m
    int TILE_MODE_UNDEFINED -> r
    float cornerRadius -> p
    android.graphics.Shader$TileMode DEFAULT_TILE_MODE -> y
    1:16:void <clinit>():51:66 -> <clinit>
    1:1:void <init>(android.content.Context):103:103 -> <init>
    2:24:void <init>(android.content.Context):77:99 -> <init>
    25:25:void <init>(android.content.Context,android.util.AttributeSet):108:108 -> <init>
    26:26:void <init>(android.content.Context,android.util.AttributeSet,int):113:113 -> <init>
    27:49:void <init>(android.content.Context,android.util.AttributeSet,int):77:99 -> <init>
    1:4:void applyColorMod():292:295 -> a
    5:27:void updateAttrs(android.graphics.drawable.Drawable,android.widget.ImageView$ScaleType):309:331 -> a
    28:28:float getCornerRadius(int):374:374 -> a
    29:29:void setCornerRadiusDimen(int,int):396:396 -> a
    30:37:void setCornerRadius(int,float):421:428 -> a
    38:53:void setCornerRadius(float,float,float,float):442:457 -> a
    54:60:void mutateBackground(boolean):567:573 -> a
    61:143:void applyStyleRules(java.util.Map):586:668 -> a
    144:144:void applyStyleRules(java.util.Map):665:665 -> a
    1:1:android.graphics.Shader$TileMode parseTileMode(int):124:124 -> b
    2:2:android.graphics.Shader$TileMode parseTileMode(int):122:122 -> b
    3:3:android.graphics.Shader$TileMode parseTileMode(int):120:120 -> b
    4:8:void updateBackgroundDrawableAttrs(boolean):267:271 -> b
    9:9:boolean isOval():515:515 -> b
    1:1:boolean mutatesBackground():562:562 -> c
    1:17:android.graphics.drawable.Drawable resolveBackgroundResource():241:257 -> d
    1:2:void drawableStateChanged():133:134 -> drawableStateChanged
    1:17:android.graphics.drawable.Drawable resolveResource():197:213 -> e
    1:1:void updateDrawableAttrs():262:262 -> f
    1:1:int getBorderColor():485:485 -> getBorderColor
    1:1:android.content.res.ColorStateList getBorderColors():495:495 -> getBorderColors
    1:1:float getBorderWidth():462:462 -> getBorderWidth
    1:1:float getCornerRadius():351:351 -> getCornerRadius
    1:2:float getMaxCornerRadius():360:361 -> getMaxCornerRadius
    1:1:android.widget.ImageView$ScaleType getScaleType():140:140 -> getScaleType
    1:1:android.graphics.Shader$TileMode getTileModeX():528:528 -> getTileModeX
    1:1:android.graphics.Shader$TileMode getTileModeY():545:545 -> getTileModeY
    1:1:void setBackground(android.graphics.drawable.Drawable):219:219 -> setBackground
    1:2:void setBackgroundColor(int):235:236 -> setBackgroundColor
    1:4:void setBackgroundDrawable(android.graphics.drawable.Drawable):340:343 -> setBackgroundDrawable
    1:4:void setBackgroundResource(int):225:228 -> setBackgroundResource
    1:1:void setBorderColor(int):490:490 -> setBorderColor
    2:11:void setBorderColor(android.content.res.ColorStateList):500:509 -> setBorderColor
    1:1:void setBorderWidth(int):467:467 -> setBorderWidth
    2:9:void setBorderWidth(float):472:479 -> setBorderWidth
    1:6:void setColorFilter(android.graphics.ColorFilter):278:283 -> setColorFilter
    1:2:void setCornerRadius(float):406:407 -> setCornerRadius
    1:2:void setCornerRadiusDimen(int):384:385 -> setCornerRadiusDimen
    1:5:void setImageBitmap(android.graphics.Bitmap):170:174 -> setImageBitmap
    1:4:void setImageDrawable(android.graphics.drawable.Drawable):161:164 -> setImageDrawable
    1:5:void setImageResource(int):180:184 -> setImageResource
    1:2:void setImageURI(android.net.Uri):191:192 -> setImageURI
    1:4:void setOval(boolean):520:523 -> setOval
    1:9:void setScaleType(android.widget.ImageView$ScaleType):146:154 -> setScaleType
    1:8:void setTileModeX(android.graphics.Shader$TileMode):533:540 -> setTileModeX
    1:8:void setTileModeY(android.graphics.Shader$TileMode):550:557 -> setTileModeY
com.batch.android.messaging.view.roundimage.RoundedTransformationBuilder -> com.batch.android.messaging.view.l.d:
    android.content.res.ColorStateList mBorderColor -> e
    float mBorderWidth -> d
    android.util.DisplayMetrics mDisplayMetrics -> a
    float[] mCornerRadii -> b
    android.widget.ImageView$ScaleType mScaleType -> f
    boolean mOval -> c
    1:1:void <init>():40:40 -> <init>
    2:12:void <init>():31:41 -> <init>
    1:1:com.batch.android.messaging.view.roundimage.RoundedTransformationBuilder scaleType(android.widget.ImageView$ScaleType):46:46 -> a
    2:2:com.batch.android.messaging.view.roundimage.RoundedTransformationBuilder cornerRadius(int,float):74:74 -> a
    3:3:com.batch.android.messaging.view.roundimage.RoundedTransformationBuilder borderWidth(float):113:113 -> a
    4:4:com.batch.android.messaging.view.roundimage.RoundedTransformationBuilder borderColor(int):139:139 -> a
    5:5:com.batch.android.messaging.view.roundimage.RoundedTransformationBuilder borderColor(android.content.res.ColorStateList):151:151 -> a
    6:6:com.batch.android.messaging.view.roundimage.RoundedTransformationBuilder oval(boolean):163:163 -> a
    1:3:com.batch.android.messaging.view.roundimage.RoundedTransformationBuilder cornerRadiusDp(int,float):99:99 -> b
    4:4:com.batch.android.messaging.view.roundimage.RoundedTransformationBuilder borderWidthDp(float):125:125 -> b
    1:4:com.batch.android.messaging.view.roundimage.RoundedTransformationBuilder cornerRadius(float):58:61 -> c
    1:3:com.batch.android.messaging.view.roundimage.RoundedTransformationBuilder cornerRadiusDp(float):86:86 -> d
com.batch.android.messaging.view.styled.Button -> com.batch.android.messaging.view.styled.a:
    1:1:void <init>(android.content.Context):23:23 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet):28:28 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int):33:33 -> <init>
    1:13:void applyStyleRules(java.util.Map):40:52 -> a
com.batch.android.messaging.view.styled.SeparatedFlexboxLayout -> com.batch.android.messaging.view.styled.b:
    com.batch.android.messaging.view.DelegatedTouchEventViewGroup$Delegate delegate -> G
    java.lang.String separatorPrefix -> H
    int separatorCount -> J
    com.batch.android.messaging.view.styled.SeparatedFlexboxLayout$SeparatorStyleProvider styleProvider -> I
    1:1:void <init>(android.content.Context,java.lang.String,com.batch.android.messaging.view.styled.SeparatedFlexboxLayout$SeparatorStyleProvider):35:35 -> <init>
    2:17:void <init>(android.content.Context,java.lang.String,com.batch.android.messaging.view.styled.SeparatedFlexboxLayout$SeparatorStyleProvider):29:44 -> <init>
    18:18:void <init>(android.content.Context,java.lang.String,com.batch.android.messaging.view.styled.SeparatedFlexboxLayout$SeparatorStyleProvider):40:40 -> <init>
    1:50:void applyStyleRules(java.util.Map):99:148 -> a
    51:51:boolean superOnTouchEvent(android.view.MotionEvent):195:195 -> a
    1:5:void addView(android.view.View):52:56 -> addView
    1:1:void internalAddView(android.view.View):61:61 -> b
    2:2:boolean superOnInterceptTouchEvent(android.view.MotionEvent):189:189 -> b
    1:8:void addSeparator():80:87 -> c
    9:9:void addSeparator():85:85 -> c
    10:20:void addSeparator():83:93 -> c
    1:1:boolean isHorizontal():66:66 -> d
    1:1:java.lang.String getSeparatorPrefix():72:72 -> getSeparatorPrefix
    1:4:boolean onInterceptTouchEvent(android.view.MotionEvent):162:165 -> onInterceptTouchEvent
    1:4:boolean onTouchEvent(android.view.MotionEvent):173:176 -> onTouchEvent
    1:1:void setTouchEventDelegate(com.batch.android.messaging.view.DelegatedTouchEventViewGroup$Delegate):183:183 -> setTouchEventDelegate
com.batch.android.messaging.view.styled.SeparatedFlexboxLayout$SeparatorStyleProvider -> com.batch.android.messaging.view.styled.b$a:
    java.util.Map getRulesForSeparator(com.batch.android.messaging.view.styled.SeparatedFlexboxLayout,java.lang.String) -> a
com.batch.android.messaging.view.styled.SeparatorView -> com.batch.android.messaging.view.styled.c:
    1:1:void <init>(android.content.Context):18:18 -> <init>
    1:1:void applyStyleRules(java.util.Map):24:24 -> a
com.batch.android.messaging.view.styled.Styleable -> com.batch.android.messaging.view.styled.d:
    void applyStyleRules(java.util.Map) -> a
com.batch.android.messaging.view.styled.TextView -> com.batch.android.messaging.view.styled.TextView:
    android.graphics.Typeface typefaceOverride -> b
    android.graphics.Typeface boldTypefaceOverride -> c
    java.lang.String TAG -> a
    1:1:void <init>(android.content.Context):40:40 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet):45:45 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int):50:50 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet,int,int):56:56 -> <init>
    1:1:void applyStyleRules(java.util.Map):62:62 -> a
    2:50:void applyStyleRules(android.widget.TextView,java.util.Map):74:122 -> a
    51:118:void applyStyleRules(android.widget.TextView,java.util.Map):121:188 -> a
    119:122:void applyStyleRules(android.widget.TextView,java.util.Map):187:190 -> a
    123:129:void makeScrollable():198:204 -> a
com.batch.android.messaging.view.styled.TextView$1 -> com.batch.android.messaging.view.styled.TextView$a:
    android.widget.Scroller val$scroller -> b
    com.batch.android.messaging.view.styled.TextView this$0 -> c
    android.view.GestureDetector gesture -> a
    1:2:void <init>(com.batch.android.messaging.view.styled.TextView,android.widget.Scroller):205:206 -> <init>
    1:5:boolean onTouch(android.view.View,android.view.MotionEvent):235:239 -> onTouch
com.batch.android.messaging.view.styled.TextView$1$1 -> com.batch.android.messaging.view.styled.TextView$a$a:
    com.batch.android.messaging.view.styled.TextView$1 this$1 -> a
    1:1:void <init>(com.batch.android.messaging.view.styled.TextView$1):208:208 -> <init>
    1:4:boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float):215:218 -> onFling
    5:13:boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float):217:225 -> onFling
com.batch.android.module.ActionModule -> com.batch.android.o0.a:
    java.util.HashMap drawableAliases -> b
    com.batch.android.BatchDeeplinkInterceptor deeplinkInterceptor -> c
    java.util.HashMap registeredActions -> a
    java.lang.String RESERVED_ACTION_IDENTIFIER_PREFIX -> e
    java.lang.String TAG -> d
    1:1:void <init>():51:51 -> <init>
    2:10:void <init>():48:56 -> <init>
    1:8:void registerAction(com.batch.android.UserAction):69:76 -> a
    9:9:void registerAction(com.batch.android.UserAction):71:71 -> a
    10:10:void registerAction(com.batch.android.UserAction):66:66 -> a
    11:19:void addDrawableAlias(java.lang.String,int):113:121 -> a
    20:20:void addDrawableAlias(java.lang.String,int):118:118 -> a
    21:21:void addDrawableAlias(java.lang.String,int):114:114 -> a
    22:22:void addDrawableAlias(java.lang.String,int):110:110 -> a
    23:29:int getAliasedDrawableID(java.lang.String):132:138 -> a
    30:42:boolean performUserAction(android.content.Context,java.lang.String,com.batch.android.json.JSONObject):154:166 -> a
    43:43:boolean performUserAction(android.content.Context,java.lang.String,com.batch.android.json.JSONObject):157:157 -> a
    44:48:boolean performAction(android.content.Context,java.lang.String,com.batch.android.json.JSONObject,com.batch.android.UserActionSource):184:188 -> a
    49:56:boolean performAction(android.content.Context,java.lang.String,com.batch.android.json.JSONObject,com.batch.android.UserActionSource):187:194 -> a
    57:57:void setDeeplinkInterceptor(com.batch.android.BatchDeeplinkInterceptor):205:205 -> a
    58:68:int getDrawableIdForNameOrAlias(android.content.Context,java.lang.String):243:253 -> a
    69:69:int getDrawableIdForNameOrAlias(android.content.Context,java.lang.String):251:251 -> a
    1:10:void unregisterAction(java.lang.String):91:100 -> b
    11:11:void unregisterAction(java.lang.String):96:96 -> b
    12:12:void unregisterAction(java.lang.String):92:92 -> b
    13:13:void unregisterAction(java.lang.String):88:88 -> b
    java.lang.String getId() -> g
    int getState() -> h
    1:1:com.batch.android.BatchDeeplinkInterceptor getDeeplinkInterceptor():214:214 -> i
    1:17:void registerBuiltinActions():219:235 -> j
com.batch.android.module.BatchModule -> com.batch.android.o0.b:
    1:1:void <init>():10:10 -> <init>
    void batchDidStart() -> b
    void batchDidStop() -> c
    void batchIsFinishing() -> d
    void batchWillStart() -> e
    void batchWillStop() -> f
    java.lang.String getId() -> g
    int getState() -> h
com.batch.android.module.BatchModuleMaster -> com.batch.android.o0.c:
    java.util.List modules -> a
    1:2:void <init>(java.util.List):33:34 -> <init>
    1:2:void batchDidStart():78:79 -> b
    1:2:void batchDidStop():102:103 -> c
    1:2:void batchIsFinishing():86:87 -> d
    1:2:void batchWillStart():70:71 -> e
    1:2:void batchWillStop():94:95 -> f
    java.lang.String getId() -> g
    int getState() -> h
    1:11:com.batch.android.module.BatchModuleMaster provide():40:50 -> i
com.batch.android.module.DisplayReceiptModule -> com.batch.android.o0.d:
    com.batch.android.module.OptOutModule optOutModule -> a
    java.lang.String TAG -> b
    1:2:void <init>(com.batch.android.module.OptOutModule):42:43 -> <init>
    1:7:java.io.File savePushReceipt(android.content.Context,com.batch.android.core.InternalPushData):90:96 -> a
    8:57:void sendReceipt(android.content.Context,boolean):173:222 -> a
    58:58:void wipeData(android.content.Context):234:234 -> a
    1:11:void batchDidStart():67:77 -> b
    12:60:void scheduleDisplayReceipt(android.content.Context,com.batch.android.core.InternalPushData):107:155 -> b
    61:66:void scheduleDisplayReceipt(android.content.Context,com.batch.android.core.InternalPushData):153:158 -> b
    java.lang.String getId() -> g
    int getState() -> h
    1:1:com.batch.android.module.DisplayReceiptModule provide():49:49 -> i
com.batch.android.module.DisplayReceiptModule$1 -> com.batch.android.o0.d$a:
    java.util.Map val$payloads -> a
    1:1:void <init>(java.util.Map):204:204 -> <init>
    1:1:void onFailure(com.batch.android.core.Webservice$WebserviceError):217:217 -> a
    1:2:void onSuccess():209:210 -> onSuccess
com.batch.android.module.EventDispatcherModule -> com.batch.android.o0.e:
    java.lang.String COMPONENT_KEY_PREFIX -> f
    java.util.Set eventDispatchers -> a
    com.batch.android.module.OptOutModule optOutModule -> b
    java.lang.String COMPONENT_SENTINEL_VALUE -> e
    boolean isContextLoaded -> c
    java.lang.String TAG -> d
    1:1:void <init>(com.batch.android.module.OptOutModule):37:37 -> <init>
    2:9:void <init>(com.batch.android.module.OptOutModule):31:38 -> <init>
    1:1:void printLoadedDispatcher(java.lang.String):75:75 -> a
    2:4:void addEventDispatcher(com.batch.android.BatchEventDispatcher):81:83 -> a
    5:14:void dispatchEvent(com.batch.android.Batch$EventDispatcher$Type,com.batch.android.Batch$EventDispatcher$Payload):95:104 -> a
    15:47:void loadDispatcherFromContext(android.content.Context):109:141 -> a
    1:3:boolean removeEventDispatcher(com.batch.android.BatchEventDispatcher):88:90 -> b
    1:1:void batchDidStop():62:62 -> c
    java.lang.String getId() -> g
    int getState() -> h
    1:4:void clear():67:70 -> i
    1:1:com.batch.android.module.EventDispatcherModule provide():44:44 -> j
com.batch.android.module.LocalCampaignsModule -> com.batch.android.o0.f:
    java.lang.String TAG -> f
    boolean broadcastReceiverRegistered -> e
    android.content.BroadcastReceiver localBroadcastReceiver -> d
    com.batch.android.localcampaigns.CampaignManager campaignManager -> a
    boolean triedToReadSavedCampaign -> b
    java.util.concurrent.ExecutorService triggerExecutor -> c
    1:1:void <init>(com.batch.android.localcampaigns.CampaignManager):69:69 -> <init>
    2:22:void <init>(com.batch.android.localcampaigns.CampaignManager):50:70 -> <init>
    1:1:void access$000(com.batch.android.module.LocalCampaignsModule,android.content.Intent):45:45 -> a
    2:2:void displayMessage(com.batch.android.localcampaigns.signal.Signal):130:130 -> a
    3:6:void onLocalBroadcast(android.content.Intent):141:144 -> a
    7:22:void lambda$batchDidStart$1(android.content.Context):171:186 -> a
    1:3:void wipeData(android.content.Context):119:121 -> b
    4:7:void lambda$displayMessage$0(com.batch.android.localcampaigns.signal.Signal):131:134 -> b
    8:26:void batchDidStart():151:169 -> b
    1:17:void sendSignal(com.batch.android.localcampaigns.signal.Signal):97:113 -> c
    18:18:void batchDidStop():203:203 -> c
    java.lang.String getId() -> g
    int getState() -> h
    1:1:com.batch.android.module.LocalCampaignsModule provide():76:76 -> i
com.batch.android.module.LocalCampaignsModule$1 -> com.batch.android.o0.f$a:
    com.batch.android.module.LocalCampaignsModule this$0 -> a
    1:1:void <init>(com.batch.android.module.LocalCampaignsModule):58:58 -> <init>
    1:1:void onReceive(android.content.Context,android.content.Intent):62:62 -> onReceive
com.batch.android.module.LocalCampaignsModule$2 -> com.batch.android.o0.f$b:
    com.batch.android.module.LocalCampaignsModule this$0 -> a
    1:1:void <init>(com.batch.android.module.LocalCampaignsModule):187:187 -> <init>
    1:1:void run():192:192 -> run
    2:2:void run():191:191 -> run
com.batch.android.module.MessagingModule -> com.batch.android.o0.g:
    com.batch.android.module.ActionModule actionModule -> f
    java.lang.String ACTION_DISMISS_INTERSTITIAL -> i
    com.batch.android.module.TrackerModule trackerModule -> g
    java.lang.String TAG -> h
    java.lang.String ACTION_DISMISS_BANNER -> j
    java.lang.String MESSAGING_EVENT_NAME_DISMISS -> m
    java.lang.String MESSAGING_EVENT_NAME_SHOW -> l
    java.lang.String MESSAGING_EVENT_NAME_AUTO_CLOSE -> o
    java.lang.String MESSAGING_EVENT_NAME_CLOSE -> n
    java.lang.String MESSAGING_EVENT_NAME_CTA -> q
    java.lang.String MESSAGING_EVENT_NAME_GLOBAL_TAP -> p
    double DEFAULT_IMAGE_DOWNLOAD_TIMEOUT -> k
    com.batch.android.BatchMessage pendingMessage -> e
    boolean showForegroundLandings -> a
    boolean automaticMode -> b
    com.batch.android.Batch$Messaging$LifecycleListener listener -> c
    boolean doNotDisturbMode -> d
    1:1:void <init>(com.batch.android.module.ActionModule,com.batch.android.module.TrackerModule):108:108 -> <init>
    2:20:void <init>(com.batch.android.module.ActionModule,com.batch.android.module.TrackerModule):92:110 -> <init>
    1:2:void setTypefaceOverride(android.graphics.Typeface,android.graphics.Typeface):179:180 -> a
    3:3:void setLifecycleListener(com.batch.android.Batch$Messaging$LifecycleListener):185:185 -> a
    4:14:boolean doesAppHaveRequiredLibraries(boolean):211:221 -> a
    15:39:com.batch.android.BatchBannerView loadBanner(android.content.Context,com.batch.android.BatchMessage,com.batch.android.json.JSONObject):298:322 -> a
    40:44:com.batch.android.BatchBannerView loadBanner(android.content.Context,com.batch.android.BatchMessage,com.batch.android.json.JSONObject):320:324 -> a
    45:46:com.batch.android.BatchBannerView loadBanner(android.content.Context,com.batch.android.BatchMessage,com.batch.android.json.JSONObject):315:316 -> a
    47:47:com.batch.android.BatchBannerView loadBanner(android.content.Context,com.batch.android.BatchMessage,com.batch.android.json.JSONObject):299:299 -> a
    48:48:com.batch.android.BatchBannerView loadBanner(android.content.Context,com.batch.android.BatchMessage,com.batch.android.json.JSONObject):295:295 -> a
    49:49:com.batch.android.BatchBannerView loadBanner(android.content.Context,com.batch.android.BatchMessage,com.batch.android.json.JSONObject):290:290 -> a
    50:51:void performAction(android.content.Context,com.batch.android.BatchMessage,com.batch.android.messaging.model.Action):331:332 -> a
    52:74:void displayMessage(android.content.Context,com.batch.android.BatchMessage,boolean):340:362 -> a
    75:94:void displayInAppMessage(com.batch.android.BatchInAppMessage):367:386 -> a
    95:115:com.batch.android.json.JSONObject generateBaseEventParameters(com.batch.android.messaging.model.Message,java.lang.String):398:418 -> a
    116:128:void trackCTAClickEvent(com.batch.android.messaging.model.Message,int,java.lang.String):438:450 -> a
    129:131:void onMessageCTAClicked(com.batch.android.messaging.model.Message,int,com.batch.android.messaging.model.CTA):485:487 -> a
    132:147:void onMessageGlobalTap(com.batch.android.messaging.model.Message,com.batch.android.messaging.model.Action):495:510 -> a
    148:150:void onMessageAutoClosed(com.batch.android.messaging.model.Message):518:520 -> a
    1:1:void setAutomaticMode(boolean):173:173 -> b
    2:38:androidx.fragment.app.DialogFragment loadFragment(android.content.Context,com.batch.android.BatchMessage,com.batch.android.json.JSONObject):244:280 -> b
    39:40:androidx.fragment.app.DialogFragment loadFragment(android.content.Context,com.batch.android.BatchMessage,com.batch.android.json.JSONObject):261:262 -> b
    41:41:androidx.fragment.app.DialogFragment loadFragment(android.content.Context,com.batch.android.BatchMessage,com.batch.android.json.JSONObject):245:245 -> b
    42:42:androidx.fragment.app.DialogFragment loadFragment(android.content.Context,com.batch.android.BatchMessage,com.batch.android.json.JSONObject):241:241 -> b
    43:43:androidx.fragment.app.DialogFragment loadFragment(android.content.Context,com.batch.android.BatchMessage,com.batch.android.json.JSONObject):236:236 -> b
    44:46:void trackGenericEvent(com.batch.android.messaging.model.Message,java.lang.String):427:427 -> b
    51:51:void trackGenericEvent(com.batch.android.messaging.model.Message,java.lang.String):432:432 -> b
    52:54:void onMessageClosed(com.batch.android.messaging.model.Message):477:479 -> b
    1:1:void setDoNotDisturbEnabled(boolean):190:190 -> c
    2:4:void onMessageDismissed(com.batch.android.messaging.model.Message):468:470 -> c
    1:1:void setShowForegroundLandings(boolean):168:168 -> d
    2:4:void onMessageShown(com.batch.android.messaging.model.Message):460:462 -> d
    java.lang.String getId() -> g
    int getState() -> h
    1:1:com.batch.android.Batch$Messaging$LifecycleListener getListener():154:154 -> i
    1:1:boolean hasPendingMessage():195:195 -> j
    1:1:boolean isDoNotDisturbEnabled():159:159 -> k
    1:1:boolean isInAutomaticMode():149:149 -> l
    1:2:com.batch.android.BatchMessage popPendingMessage():201:202 -> m
    1:3:com.batch.android.module.MessagingModule provide():116:118 -> n
    1:1:boolean shouldShowForegroundLandings():144:144 -> o
com.batch.android.module.MessagingModule$1 -> com.batch.android.o0.g$a:
    int[] $SwitchMap$com$batch$android$messaging$model$Message$Source -> a
    1:1:void <clinit>():401:401 -> <clinit>
com.batch.android.module.OptOutModule -> com.batch.android.o0.h:
    java.lang.String OPT_OUT_PREFERENCES_NAME -> g
    java.lang.String INTENT_OPTED_OUT_WIPE_DATA_EXTRA -> f
    java.lang.String SHOULD_SEND_OPTIN_EVENT_KEY -> i
    java.lang.String OPTED_OUT_FROM_BATCHSDK_KEY -> h
    java.lang.String MANIFEST_OPT_OUT_BY_DEFAULT_KEY -> j
    android.content.SharedPreferences preferences -> b
    java.lang.String TAG -> c
    java.lang.String INTENT_OPTED_IN -> e
    java.lang.Boolean isOptedOut -> a
    java.lang.String INTENT_OPTED_OUT -> d
    1:1:void <init>():60:60 -> <init>
    2:2:void <init>():55:55 -> <init>
    1:6:android.content.SharedPreferences getPreferences(android.content.Context):66:71 -> a
    7:13:void trackOptinEventIfNeeded(android.content.Context,com.batch.android.Device):99:105 -> a
    14:54:com.batch.android.core.Promise optOut(android.content.Context,com.batch.android.Device,boolean,com.batch.android.BatchOptOutResultListener):133:173 -> a
    55:55:void lambda$optOut$1(android.content.Context,com.batch.android.BatchOptOutResultListener,boolean,com.batch.android.core.Promise,java.lang.Void):154:154 -> a
    56:59:void lambda$null$0(com.batch.android.BatchOptOutResultListener,android.content.Context,boolean,com.batch.android.core.Promise):156:159 -> a
    60:60:void lambda$optOut$3(android.content.Context,com.batch.android.BatchOptOutResultListener,com.batch.android.core.Promise,boolean,java.lang.Exception):162:162 -> a
    61:67:void lambda$null$2(com.batch.android.BatchOptOutResultListener,com.batch.android.core.Promise,android.content.Context,boolean):164:170 -> a
    68:75:void doOptOut(android.content.Context,boolean):182:189 -> a
    76:84:boolean getManifestBoolean(android.content.Context,java.lang.String,boolean):218:226 -> a
    1:14:boolean isOptedOutSync(android.content.Context):81:94 -> b
    1:9:void optIn(android.content.Context):112:120 -> c
    1:17:void wipeData(android.content.Context):195:211 -> d
    java.lang.String getId() -> g
    int getState() -> h
    1:1:java.lang.Boolean isOptedOut():76:76 -> i
com.batch.android.module.PushModule -> com.batch.android.o0.i:
    int NO_COLOR -> o
    android.net.Uri notificationSoundUri -> f
    com.batch.android.BatchNotificationInterceptor notificationInterceptor -> j
    java.util.EnumSet tempNotifType -> h
    java.lang.Integer customOpenIntentFlags -> i
    boolean didSetupRegistrationProvider -> l
    java.lang.String TAG -> n
    int notificationColor -> e
    int smallIconResourceId -> b
    com.batch.android.PushRegistrationProvider registrationProvider -> k
    com.batch.android.module.DisplayReceiptModule displayReceiptModule -> m
    android.graphics.Bitmap largeIcon -> c
    boolean manualDisplay -> g
    boolean shouldRefreshToken -> a
    java.lang.String gcmSenderId -> d
    1:1:void <init>(com.batch.android.module.DisplayReceiptModule):131:131 -> <init>
    2:53:void <init>(com.batch.android.module.DisplayReceiptModule):81:132 -> <init>
    1:1:void access$000(com.batch.android.module.PushModule,android.content.Context,com.batch.android.push.Registration):67:67 -> a
    2:2:void setCustomSmallIconResourceId(int):160:160 -> a
    3:3:void setAdditionalIntentFlags(java.lang.Integer):180:180 -> a
    4:4:void setCustomLargeIcon(android.graphics.Bitmap):200:200 -> a
    5:7:void setGCMSenderId(java.lang.String):210:212 -> a
    8:8:void setNotificationInterceptor(com.batch.android.BatchNotificationInterceptor):220:220 -> a
    9:13:boolean isBatchPush(android.content.Intent):266:270 -> a
    14:20:boolean isBatchPush(com.google.firebase.messaging.RemoteMessage):282:288 -> a
    21:25:void lambda$getRegistrationID$1(java.lang.StringBuilder,com.batch.android.runtime.State):301:305 -> a
    26:41:java.util.EnumSet getNotificationsType(android.content.Context):362:377 -> a
    42:68:void setNotificationsType(java.util.EnumSet):391:417 -> a
    69:71:void lambda$setNotificationsType$2(int,java.util.concurrent.atomic.AtomicBoolean,com.batch.android.runtime.State):402:404 -> a
    72:75:void lambda$setNotificationsType$2(int,java.util.concurrent.atomic.AtomicBoolean,com.batch.android.runtime.State):403:406 -> a
    76:80:void lambda$setNotificationsType$2(int,java.util.concurrent.atomic.AtomicBoolean,com.batch.android.runtime.State):404:408 -> a
    81:81:void setSound(android.net.Uri):450:450 -> a
    82:82:void setManualDisplay(boolean):471:471 -> a
    83:87:void appendBatchData(android.content.Intent,android.content.Intent):494:498 -> a
    88:88:void appendBatchData(android.content.Intent,android.content.Intent):497:497 -> a
    89:100:void appendBatchData(android.os.Bundle,android.content.Intent):512:523 -> a
    101:101:void appendBatchData(android.os.Bundle,android.content.Intent):522:522 -> a
    102:108:void appendBatchData(com.google.firebase.messaging.RemoteMessage,android.content.Intent):532:538 -> a
    109:113:android.app.PendingIntent makePendingIntent(android.content.Context,android.content.Intent,android.os.Bundle):557:561 -> a
    114:119:android.app.PendingIntent makePendingIntent(android.content.Context,android.content.Intent,com.google.firebase.messaging.RemoteMessage):575:580 -> a
    120:130:android.app.PendingIntent makePendingIntentForDeeplink(android.content.Context,java.lang.String,android.os.Bundle):597:607 -> a
    131:136:android.app.PendingIntent makePendingIntentForDeeplink(android.content.Context,java.lang.String,com.google.firebase.messaging.RemoteMessage):618:623 -> a
    137:147:void displayNotification(android.content.Context,android.content.Intent,com.batch.android.BatchNotificationInterceptor,boolean):668:678 -> a
    148:155:void displayNotification(android.content.Context,android.content.Intent,com.batch.android.BatchNotificationInterceptor,boolean):676:683 -> a
    156:156:void displayNotification(android.content.Context,android.content.Intent,com.batch.android.BatchNotificationInterceptor,boolean):682:682 -> a
    157:172:void displayNotification(android.content.Context,com.google.firebase.messaging.RemoteMessage,com.batch.android.BatchNotificationInterceptor):695:710 -> a
    173:180:void displayNotification(android.content.Context,com.google.firebase.messaging.RemoteMessage,com.batch.android.BatchNotificationInterceptor):708:715 -> a
    181:181:void displayNotification(android.content.Context,com.google.firebase.messaging.RemoteMessage,com.batch.android.BatchNotificationInterceptor):714:714 -> a
    182:191:void onNotificationDisplayed(android.content.Context,android.content.Intent):728:737 -> a
    192:201:void onNotificationDisplayed(android.content.Context,com.google.firebase.messaging.RemoteMessage):747:756 -> a
    202:203:void requestRegistration(com.batch.android.PushRegistrationProvider):813:814 -> a
    204:214:void emitRegistration(android.content.Context,com.batch.android.push.Registration):861:871 -> a
    215:227:void lambda$emitRegistration$3(com.batch.android.push.Registration,android.content.Context,com.batch.android.runtime.State):872:884 -> a
    228:256:void lambda$emitRegistration$3(com.batch.android.push.Registration,android.content.Context,com.batch.android.runtime.State):883:911 -> a
    257:257:void printRegistration(com.batch.android.push.Registration):960:960 -> a
    258:260:void lambda$batchWillStart$4(com.batch.android.runtime.State):987:989 -> a
    261:264:void lambda$batchWillStart$4(com.batch.android.runtime.State):988:991 -> a
    265:271:void lambda$batchWillStart$4(com.batch.android.runtime.State):989:995 -> a
    1:11:void lambda$dismissNotifications$0(com.batch.android.runtime.State):237:247 -> b
    12:32:com.batch.android.push.Registration getRegistration(android.content.Context):323:343 -> b
    33:33:void setNotificationsColor(int):429:429 -> b
    34:36:boolean shouldDisplayPush(android.content.Context,android.content.Intent):636:638 -> b
    37:39:boolean shouldDisplayPush(android.content.Context,com.google.firebase.messaging.RemoteMessage):649:651 -> b
    1:4:boolean isBackgroundRestricted(android.content.Context):949:952 -> c
    1:22:void batchWillStart():984:1005 -> e
    java.lang.String getId() -> g
    1:1:int getState():975:975 -> h
    1:1:void dismissNotifications():236:236 -> i
    1:1:java.lang.Integer getAdditionalIntentFlags():169:169 -> j
    1:3:com.batch.android.AdsIdentifierProvider getAdsIdentifierProvider():782:784 -> k
    1:3:java.lang.String getAppVersion():798:798 -> l
    6:8:java.lang.String getAppVersion():801:803 -> l
    1:1:android.graphics.Bitmap getCustomLargeIcon():190:190 -> m
    1:1:int getCustomSmallIconResourceId():150:150 -> n
    1:1:int getNotificationColor():439:439 -> o
    1:1:com.batch.android.BatchNotificationInterceptor getNotificationInterceptor():228:228 -> p
    1:14:java.lang.String getRegistrationID():298:311 -> q
    1:17:com.batch.android.PushRegistrationProvider getRegistrationProvider():1012:1028 -> r
    1:1:android.net.Uri getSound():460:460 -> s
    1:10:boolean isBatchPushServiceAvailable():926:935 -> t
    1:1:boolean isManualDisplayModeActivated():481:481 -> u
    1:1:com.batch.android.module.PushModule provide():138:138 -> v
    1:3:void refreshRegistration():769:771 -> w
com.batch.android.module.PushModule$1 -> com.batch.android.o0.i$a:
    android.content.Context val$context -> b
    com.batch.android.PushRegistrationProvider val$provider -> a
    com.batch.android.module.PushModule this$0 -> c
    1:1:void <init>(com.batch.android.module.PushModule,com.batch.android.PushRegistrationProvider,android.content.Context):815:815 -> <init>
    java.lang.String getTaskIdentifier() -> a
    1:17:void run():820:836 -> run
    18:26:void run():835:843 -> run
    27:29:void run():829:829 -> run
    30:32:void run():822:822 -> run
com.batch.android.module.TrackerModule -> com.batch.android.o0.j:
    com.batch.android.module.LocalCampaignsModule localCampaignsModule -> h
    com.batch.android.module.PushModule pushModule -> j
    com.batch.android.localcampaigns.CampaignManager campaignManager -> i
    java.lang.String TAG -> k
    java.util.Queue memoryStorage -> b
    java.util.concurrent.atomic.AtomicBoolean isFlushing -> d
    int batchSendQuantity -> f
    com.batch.android.module.OptOutModule optOutModule -> g
    com.batch.android.tracker.TrackerDatasource datasource -> a
    java.util.concurrent.ExecutorService flushExecutor -> c
    com.batch.android.event.EventSender sender -> e
    1:1:void <init>(com.batch.android.module.OptOutModule,com.batch.android.module.LocalCampaignsModule,com.batch.android.localcampaigns.CampaignManager,com.batch.android.module.PushModule):108:108 -> <init>
    2:42:void <init>(com.batch.android.module.OptOutModule,com.batch.android.module.LocalCampaignsModule,com.batch.android.localcampaigns.CampaignManager,com.batch.android.module.PushModule):72:112 -> <init>
    1:1:void track(java.lang.String):197:197 -> a
    2:2:void track(java.lang.String,com.batch.android.json.JSONObject):208:208 -> a
    3:20:void track(java.lang.String,long,com.batch.android.json.JSONObject):220:237 -> a
    21:21:void track(java.lang.String,long):273:273 -> a
    22:52:com.batch.android.core.Promise trackOptOutEvent(android.content.Context,com.batch.android.Device,java.lang.String):334:364 -> a
    53:75:void lambda$trackOptOutEvent$0(android.content.Context,java.util.List,com.batch.android.core.Promise):339:361 -> a
    76:105:com.batch.android.json.JSONObject makeOptBaseEventData(android.content.Context,com.batch.android.Device):370:399 -> a
    106:111:void lambda$flush$2(com.batch.android.runtime.State):440:445 -> a
    112:114:void onEventsSendFailure(java.util.List):523:525 -> a
    115:132:void lambda$onEventsSendFailure$4(java.util.List,com.batch.android.runtime.State):526:543 -> a
    133:135:java.util.List getEventsToSend():552:554 -> a
    136:145:void lambda$wipeData$6(android.content.Context):568:577 -> a
    1:2:void batchDidStart():173:174 -> b
    3:15:void trackCollapsible(java.lang.String,long,com.batch.android.json.JSONObject):250:262 -> b
    16:37:void trackCampaignView(java.lang.String,com.batch.android.json.JSONObject):284:305 -> b
    38:38:void trackCampaignView(java.lang.String,com.batch.android.json.JSONObject):292:292 -> b
    39:39:void trackOptInEvent(android.content.Context,com.batch.android.Device):319:319 -> b
    40:42:void onEventsSendSuccess(java.util.List):500:502 -> b
    43:54:void lambda$onEventsSendSuccess$3(java.util.List,com.batch.android.runtime.State):503:514 -> b
    55:57:void wipeData(android.content.Context):564:566 -> b
    1:3:void batchDidStop():182:184 -> c
    4:4:void lambda$getEventsToSend$5(java.util.List):554:554 -> c
    1:6:void batchWillStart():141:146 -> e
    7:9:void batchWillStart():145:145 -> e
    14:17:void batchWillStart():150:153 -> e
    18:19:void batchWillStart():152:153 -> e
    20:33:void batchWillStart():151:164 -> e
    java.lang.String getId() -> g
    1:1:int getState():135:135 -> h
    1:8:void closeDatasource():411:418 -> i
    1:11:void flush():429:439 -> j
    1:1:com.batch.android.tracker.TrackerMode getMode():486:486 -> k
    2:4:com.batch.android.tracker.TrackerMode getMode():485:485 -> k
    8:11:com.batch.android.tracker.TrackerMode getMode():489:492 -> k
    1:19:void lambda$null$1():447:465 -> l
    20:34:void lambda$null$1():451:465 -> l
    35:38:void lambda$null$1():463:466 -> l
    1:5:com.batch.android.module.TrackerModule provide():118:122 -> m
com.batch.android.module.TrackerModule$1 -> com.batch.android.o0.j$a:
    com.batch.android.core.Promise val$promise -> a
    com.batch.android.module.TrackerModule this$0 -> b
    1:1:void <init>(com.batch.android.module.TrackerModule,com.batch.android.core.Promise):343:343 -> <init>
    void onFinish() -> a
    1:1:void onSuccess(java.util.List):347:347 -> a
    2:2:void onFailure(com.batch.android.FailReason,java.util.List):353:353 -> a
com.batch.android.module.UserModule -> com.batch.android.o0.k:
    java.lang.String PARAMETER_KEY_DATA -> g
    long LOCATION_UPDATE_MINIMUM_TIME_MS -> j
    java.lang.String PARAMETER_KEY_LABEL -> f
    java.lang.String PARAMETER_KEY_AMOUNT -> h
    long CIPHER_FALLBACK_RESET_TIME_MS -> k
    com.batch.android.module.TrackerModule trackerModule -> d
    android.content.BroadcastReceiver localBroadcastReceiver -> a
    long lastLocationTrackTimestamp -> c
    java.util.regex.Pattern EVENT_NAME_PATTERN -> i
    java.util.concurrent.ScheduledExecutorService applyQueue -> l
    java.util.concurrent.atomic.AtomicBoolean checkScheduled -> b
    java.util.List pendingUserOperation -> m
    java.lang.String TAG -> e
    1:14:void <clinit>():63:76 -> <clinit>
    1:1:void <init>(com.batch.android.module.TrackerModule):87:87 -> <init>
    2:10:void <init>(com.batch.android.module.TrackerModule):80:88 -> <init>
    1:5:void storeTransactionID(java.lang.String,long):263:267 -> a
    6:6:void lambda$storeTransactionID$2(long,java.lang.String):273:273 -> a
    7:26:void lambda$storeTransactionID$2(long,java.lang.String):272:291 -> a
    27:27:void lambda$storeTransactionID$2(long,java.lang.String):276:276 -> a
    28:28:void bumpVersion(long):298:298 -> a
    29:47:void trackPublicEvent(java.lang.String,java.lang.String,com.batch.android.json.JSONObject):349:367 -> a
    48:55:boolean _trackEvent(java.lang.String,com.batch.android.json.JSONObject):373:380 -> a
    56:84:void trackLocation(android.location.Location):392:420 -> a
    85:90:void trackLocation(android.location.Location):419:424 -> a
    91:101:void trackTransaction(double,com.batch.android.json.JSONObject):431:441 -> a
    102:105:void submitOnApplyQueue(long,java.lang.Runnable):451:454 -> a
    106:115:void lambda$wipeData$6(android.content.Context):653:662 -> a
    1:38:void batchDidStart():114:151 -> b
    39:39:void lambda$bumpVersion$3(long):304:304 -> b
    40:61:void lambda$bumpVersion$3(long):303:324 -> b
    62:67:void lambda$bumpVersion$3(long):323:328 -> b
    68:68:void lambda$bumpVersion$3(long):307:307 -> b
    69:70:void userOptedIn(android.content.Context):668:669 -> b
    1:3:void startCheckWS(long):204:206 -> c
    4:6:void addUserPendingOperations(java.util.List):470:472 -> c
    7:9:void wipeData(android.content.Context):650:652 -> c
    1:1:void startSendWS(long):160:160 -> d
    2:66:void applyUserOperationsSync(java.util.List):501:565 -> d
    67:75:void applyUserOperationsSync(java.util.List):564:572 -> d
    76:97:void applyUserOperationsSync(java.util.List):571:592 -> d
    98:98:void applyUserOperationsSync(java.util.List):523:523 -> d
    99:99:void applyUserOperationsSync(java.util.List):512:512 -> d
    100:100:void applyUserOperationsSync(java.util.List):504:504 -> d
    1:3:void lambda$executeUserPendingOperations$4(java.util.List):487:489 -> e
    java.lang.String getId() -> g
    int getState() -> h
    1:17:void executeUserPendingOperations():480:496 -> i
    1:5:void lambda$printDebugInfo$5():633:637 -> j
    1:43:void lambda$startCheckWS$1():209:251 -> k
    44:49:void lambda$startCheckWS$1():250:255 -> k
    50:50:void lambda$startCheckWS$1():226:226 -> k
    1:28:void lambda$startSendWS$0():161:188 -> l
    29:39:void lambda$startSendWS$0():187:197 -> l
    40:42:void lambda$startSendWS$0():196:198 -> l
    43:43:void lambda$startSendWS$0():194:194 -> l
    44:44:void lambda$startSendWS$0():174:174 -> l
    1:1:java.util.concurrent.ScheduledExecutorService makeApplyQueue():72:72 -> m
    1:1:void printDebugInfo():632:632 -> n
    1:1:com.batch.android.module.UserModule provide():94:94 -> o
com.batch.android.module.UserModule$1 -> com.batch.android.o0.k$a:
    com.batch.android.module.UserModule this$0 -> a
    1:1:void <init>(com.batch.android.module.UserModule):136:136 -> <init>
    1:2:void onReceive(android.content.Context,android.content.Intent):140:141 -> onReceive
com.batch.android.module.UserModule$SaveException -> com.batch.android.o0.k$b:
    java.lang.String internalErrorMessage -> a
    1:1:void <init>(java.lang.String):605:605 -> <init>
    2:3:void <init>(java.lang.String,java.lang.String):610:611 -> <init>
    4:5:void <init>(java.lang.String,java.lang.String,java.lang.Throwable):616:617 -> <init>
    1:2:void log():622:623 -> a
com.batch.android.msgpack.MessagePackHelper -> com.batch.android.p0.a:
    1:1:void <init>():10:10 -> <init>
    1:27:void packObject(com.batch.android.msgpack.core.MessageBufferPacker,java.lang.Object):16:42 -> a
    28:31:void packMap(com.batch.android.msgpack.core.MessageBufferPacker,java.util.Map):48:51 -> a
    32:34:void packList(com.batch.android.msgpack.core.MessageBufferPacker,java.util.List):57:59 -> a
com.batch.android.msgpack.core.ExtensionTypeHeader -> com.batch.android.p0.b.a:
    byte type -> a
    int length -> b
    1:4:void <init>(byte,int):47:50 -> <init>
    1:1:byte checkedCastToByte(int):55:55 -> a
    2:2:int getLength():67:67 -> a
    1:1:byte getType():62:62 -> b
    1:3:boolean equals(java.lang.Object):79:81 -> equals
    1:1:int hashCode():73:73 -> hashCode
    1:1:java.lang.String toString():89:89 -> toString
com.batch.android.msgpack.core.MessageBufferPacker -> com.batch.android.p0.b.b:
    1:1:void <init>(com.batch.android.msgpack.core.MessagePack$PackerConfig):37:37 -> <init>
    2:2:void <init>(com.batch.android.msgpack.core.buffer.ArrayBufferOutput,com.batch.android.msgpack.core.MessagePack$PackerConfig):42:42 -> <init>
    1:4:com.batch.android.msgpack.core.buffer.MessageBufferOutput reset(com.batch.android.msgpack.core.buffer.MessageBufferOutput):48:51 -> a
    5:5:com.batch.android.msgpack.core.buffer.MessageBufferOutput reset(com.batch.android.msgpack.core.buffer.MessageBufferOutput):49:49 -> a
    6:7:void clear():62:63 -> a
    1:1:com.batch.android.msgpack.core.buffer.ArrayBufferOutput getArrayBufferOut():56:56 -> f
    1:1:int getBufferSize():128:128 -> g
    1:6:java.util.List toBufferList():115:120 -> h
    7:7:java.util.List toBufferList():118:118 -> h
    1:6:byte[] toByteArray():77:82 -> i
    7:7:byte[] toByteArray():80:80 -> i
    1:6:com.batch.android.msgpack.core.buffer.MessageBuffer toMessageBuffer():96:101 -> j
    7:7:com.batch.android.msgpack.core.buffer.MessageBuffer toMessageBuffer():99:99 -> j
com.batch.android.msgpack.core.MessageFormat -> com.batch.android.p0.b.c:
    com.batch.android.msgpack.core.MessageFormat FIXARRAY -> d
    com.batch.android.msgpack.core.MessageFormat STR16 -> E
    com.batch.android.msgpack.core.MessageFormat NIL -> f
    com.batch.android.msgpack.core.MessageFormat ARRAY16 -> G
    com.batch.android.msgpack.core.MessageFormat[] formatTable -> L
    com.batch.android.msgpack.core.MessageFormat BOOLEAN -> h
    com.batch.android.msgpack.core.MessageFormat MAP16 -> I
    com.batch.android.msgpack.core.MessageFormat BIN16 -> j
    com.batch.android.msgpack.core.MessageFormat NEGFIXINT -> K
    com.batch.android.msgpack.core.MessageFormat EXT8 -> l
    com.batch.android.msgpack.core.MessageFormat EXT32 -> n
    com.batch.android.msgpack.core.MessageFormat FLOAT64 -> p
    com.batch.android.msgpack.core.MessageFormat UINT16 -> r
    com.batch.android.msgpack.core.MessageFormat UINT64 -> t
    com.batch.android.msgpack.core.MessageFormat INT16 -> v
    com.batch.android.msgpack.core.MessageFormat INT64 -> x
    com.batch.android.msgpack.core.MessageFormat FIXEXT2 -> z
    com.batch.android.msgpack.core.MessageFormat FIXEXT8 -> B
    com.batch.android.msgpack.value.ValueType valueType -> a
    com.batch.android.msgpack.core.MessageFormat FIXMAP -> c
    com.batch.android.msgpack.core.MessageFormat STR8 -> D
    com.batch.android.msgpack.core.MessageFormat FIXSTR -> e
    com.batch.android.msgpack.core.MessageFormat STR32 -> F
    com.batch.android.msgpack.core.MessageFormat[] $VALUES -> M
    com.batch.android.msgpack.core.MessageFormat NEVER_USED -> g
    com.batch.android.msgpack.core.MessageFormat ARRAY32 -> H
    com.batch.android.msgpack.core.MessageFormat BIN8 -> i
    com.batch.android.msgpack.core.MessageFormat MAP32 -> J
    com.batch.android.msgpack.core.MessageFormat BIN32 -> k
    com.batch.android.msgpack.core.MessageFormat EXT16 -> m
    com.batch.android.msgpack.core.MessageFormat FLOAT32 -> o
    com.batch.android.msgpack.core.MessageFormat UINT8 -> q
    com.batch.android.msgpack.core.MessageFormat UINT32 -> s
    com.batch.android.msgpack.core.MessageFormat INT8 -> u
    com.batch.android.msgpack.core.MessageFormat INT32 -> w
    com.batch.android.msgpack.core.MessageFormat FIXEXT1 -> y
    com.batch.android.msgpack.core.MessageFormat FIXEXT4 -> A
    com.batch.android.msgpack.core.MessageFormat POSFIXINT -> b
    com.batch.android.msgpack.core.MessageFormat FIXEXT16 -> C
    1:40:void <clinit>():29:68 -> <clinit>
    41:112:void <clinit>():26:97 -> <clinit>
    1:2:void <init>(java.lang.String,int,com.batch.android.msgpack.value.ValueType):74:75 -> <init>
    1:4:com.batch.android.msgpack.value.ValueType getValueType():87:90 -> a
    5:5:com.batch.android.msgpack.value.ValueType getValueType():88:88 -> a
    6:84:com.batch.android.msgpack.core.MessageFormat toMessageFormat(byte):121:199 -> a
    85:85:com.batch.android.msgpack.core.MessageFormat toMessageFormat(byte):197:197 -> a
    86:86:com.batch.android.msgpack.core.MessageFormat toMessageFormat(byte):195:195 -> a
    87:87:com.batch.android.msgpack.core.MessageFormat toMessageFormat(byte):193:193 -> a
    88:88:com.batch.android.msgpack.core.MessageFormat toMessageFormat(byte):191:191 -> a
    89:89:com.batch.android.msgpack.core.MessageFormat toMessageFormat(byte):189:189 -> a
    90:90:com.batch.android.msgpack.core.MessageFormat toMessageFormat(byte):187:187 -> a
    91:91:com.batch.android.msgpack.core.MessageFormat toMessageFormat(byte):185:185 -> a
    92:92:com.batch.android.msgpack.core.MessageFormat toMessageFormat(byte):183:183 -> a
    93:93:com.batch.android.msgpack.core.MessageFormat toMessageFormat(byte):181:181 -> a
    94:94:com.batch.android.msgpack.core.MessageFormat toMessageFormat(byte):179:179 -> a
    95:95:com.batch.android.msgpack.core.MessageFormat toMessageFormat(byte):177:177 -> a
    96:96:com.batch.android.msgpack.core.MessageFormat toMessageFormat(byte):175:175 -> a
    97:97:com.batch.android.msgpack.core.MessageFormat toMessageFormat(byte):173:173 -> a
    98:98:com.batch.android.msgpack.core.MessageFormat toMessageFormat(byte):171:171 -> a
    99:99:com.batch.android.msgpack.core.MessageFormat toMessageFormat(byte):169:169 -> a
    100:100:com.batch.android.msgpack.core.MessageFormat toMessageFormat(byte):167:167 -> a
    101:101:com.batch.android.msgpack.core.MessageFormat toMessageFormat(byte):165:165 -> a
    102:102:com.batch.android.msgpack.core.MessageFormat toMessageFormat(byte):163:163 -> a
    103:103:com.batch.android.msgpack.core.MessageFormat toMessageFormat(byte):161:161 -> a
    104:104:com.batch.android.msgpack.core.MessageFormat toMessageFormat(byte):159:159 -> a
    105:105:com.batch.android.msgpack.core.MessageFormat toMessageFormat(byte):157:157 -> a
    106:106:com.batch.android.msgpack.core.MessageFormat toMessageFormat(byte):155:155 -> a
    107:107:com.batch.android.msgpack.core.MessageFormat toMessageFormat(byte):153:153 -> a
    108:108:com.batch.android.msgpack.core.MessageFormat toMessageFormat(byte):151:151 -> a
    109:109:com.batch.android.msgpack.core.MessageFormat toMessageFormat(byte):149:149 -> a
    110:110:com.batch.android.msgpack.core.MessageFormat toMessageFormat(byte):147:147 -> a
    111:111:com.batch.android.msgpack.core.MessageFormat toMessageFormat(byte):145:145 -> a
    112:112:com.batch.android.msgpack.core.MessageFormat toMessageFormat(byte):143:143 -> a
    113:113:com.batch.android.msgpack.core.MessageFormat toMessageFormat(byte):141:141 -> a
    114:114:com.batch.android.msgpack.core.MessageFormat toMessageFormat(byte):138:138 -> a
    1:1:com.batch.android.msgpack.core.MessageFormat valueOf(byte):109:109 -> b
    1:1:com.batch.android.msgpack.core.MessageFormat valueOf(java.lang.String):26:26 -> valueOf
    1:1:com.batch.android.msgpack.core.MessageFormat[] values():26:26 -> values
com.batch.android.msgpack.core.MessageFormatException -> com.batch.android.p0.b.d:
    1:1:void <init>(java.lang.Throwable):26:26 -> <init>
    2:2:void <init>(java.lang.String):31:31 -> <init>
    3:3:void <init>(java.lang.String,java.lang.Throwable):36:36 -> <init>
com.batch.android.msgpack.core.MessageInsufficientBufferException -> com.batch.android.p0.b.e:
    1:1:void <init>():26:26 -> <init>
    2:2:void <init>(java.lang.String):31:31 -> <init>
    3:3:void <init>(java.lang.Throwable):36:36 -> <init>
    4:4:void <init>(java.lang.String,java.lang.Throwable):41:41 -> <init>
com.batch.android.msgpack.core.MessageIntegerOverflowException -> com.batch.android.p0.b.f:
    java.math.BigInteger bigInteger -> b
    1:2:void <init>(java.math.BigInteger):32:33 -> <init>
    3:3:void <init>(long):38:38 -> <init>
    4:5:void <init>(java.lang.String,java.math.BigInteger):43:44 -> <init>
    1:1:java.math.BigInteger getBigInteger():49:49 -> a
    1:1:java.lang.String getMessage():55:55 -> getMessage
com.batch.android.msgpack.core.MessageNeverUsedFormatException -> com.batch.android.p0.b.g:
    1:1:void <init>(java.lang.Throwable):26:26 -> <init>
    2:2:void <init>(java.lang.String):31:31 -> <init>
    3:3:void <init>(java.lang.String,java.lang.Throwable):36:36 -> <init>
com.batch.android.msgpack.core.MessagePack -> com.batch.android.p0.b.h:
    com.batch.android.msgpack.core.MessagePack$UnpackerConfig DEFAULT_UNPACKER_CONFIG -> c
    java.nio.charset.Charset UTF8 -> a
    com.batch.android.msgpack.core.MessagePack$PackerConfig DEFAULT_PACKER_CONFIG -> b
    1:11:void <clinit>():68:78 -> <clinit>
    1:1:void <init>():169:169 -> <init>
    1:1:com.batch.android.msgpack.core.MessagePacker newDefaultPacker(com.batch.android.msgpack.core.buffer.MessageBufferOutput):187:187 -> a
    2:2:com.batch.android.msgpack.core.MessagePacker newDefaultPacker(java.io.OutputStream):203:203 -> a
    3:3:com.batch.android.msgpack.core.MessagePacker newDefaultPacker(java.nio.channels.WritableByteChannel):216:216 -> a
    4:4:com.batch.android.msgpack.core.MessageBufferPacker newDefaultBufferPacker():230:230 -> a
    5:5:com.batch.android.msgpack.core.MessageUnpacker newDefaultUnpacker(com.batch.android.msgpack.core.buffer.MessageBufferInput):248:248 -> a
    6:6:com.batch.android.msgpack.core.MessageUnpacker newDefaultUnpacker(java.io.InputStream):264:264 -> a
    7:7:com.batch.android.msgpack.core.MessageUnpacker newDefaultUnpacker(java.nio.channels.ReadableByteChannel):277:277 -> a
    8:8:com.batch.android.msgpack.core.MessageUnpacker newDefaultUnpacker(byte[]):292:292 -> a
    9:9:com.batch.android.msgpack.core.MessageUnpacker newDefaultUnpacker(byte[],int,int):309:309 -> a
    10:10:com.batch.android.msgpack.core.MessageUnpacker newDefaultUnpacker(java.nio.ByteBuffer):326:326 -> a
com.batch.android.msgpack.core.MessagePack$Code -> com.batch.android.p0.b.h$a:
    byte FIXEXT1 -> y
    byte FIXMAP_PREFIX -> b
    byte FIXEXT4 -> A
    byte FIXSTR_PREFIX -> d
    byte FIXEXT16 -> C
    byte NEVER_USED -> f
    byte STR16 -> E
    byte TRUE -> h
    byte ARRAY16 -> G
    byte MAP32 -> J
    byte BIN8 -> i
    byte BIN32 -> k
    byte EXT16 -> m
    byte FLOAT32 -> o
    byte UINT8 -> q
    byte UINT32 -> s
    byte INT8 -> u
    byte INT32 -> w
    byte FIXEXT2 -> z
    byte FIXEXT8 -> B
    byte POSFIXINT_MASK -> a
    byte STR8 -> D
    byte FIXARRAY_PREFIX -> c
    byte STR32 -> F
    byte NIL -> e
    byte ARRAY32 -> H
    byte FALSE -> g
    byte BIN16 -> j
    byte MAP16 -> I
    byte EXT8 -> l
    byte NEGFIXINT_PREFIX -> K
    byte EXT32 -> n
    byte FLOAT64 -> p
    byte UINT16 -> r
    byte UINT64 -> t
    byte INT16 -> v
    byte INT64 -> x
    1:1:void <init>():83:83 -> <init>
    boolean isFixInt(byte) -> a
    boolean isFixStr(byte) -> b
    boolean isFixedArray(byte) -> c
    boolean isFixedMap(byte) -> d
    boolean isFixedRaw(byte) -> e
    boolean isNegFixInt(byte) -> f
    boolean isPosFixInt(byte) -> g
com.batch.android.msgpack.core.MessagePack$PackerConfig -> com.batch.android.p0.b.h$b:
    int bufferFlushThreshold -> b
    int bufferSize -> c
    int smallStringOptimizationThreshold -> a
    boolean str8FormatSupport -> d
    1:1:void <init>():344:344 -> <init>
    2:8:void <init>():335:341 -> <init>
    9:9:void <init>(com.batch.android.msgpack.core.MessagePack$PackerConfig):348:348 -> <init>
    10:27:void <init>(com.batch.android.msgpack.core.MessagePack$PackerConfig):335:352 -> <init>
    1:1:com.batch.android.msgpack.core.MessagePack$PackerConfig clone():358:358 -> a
    2:2:com.batch.android.msgpack.core.MessagePacker newPacker(com.batch.android.msgpack.core.buffer.MessageBufferOutput):395:395 -> a
    3:3:com.batch.android.msgpack.core.MessagePacker newPacker(java.io.OutputStream):409:409 -> a
    4:4:com.batch.android.msgpack.core.MessagePacker newPacker(java.nio.channels.WritableByteChannel):420:420 -> a
    5:6:com.batch.android.msgpack.core.MessagePack$PackerConfig withBufferFlushThreshold(int):457:458 -> a
    7:8:com.batch.android.msgpack.core.MessagePack$PackerConfig withStr8FormatSupport(boolean):490:491 -> a
    1:1:int getBufferFlushThreshold():464:464 -> b
    2:3:com.batch.android.msgpack.core.MessagePack$PackerConfig withBufferSize(int):473:474 -> b
    1:2:com.batch.android.msgpack.core.MessagePack$PackerConfig withSmallStringOptimizationThreshold(int):441:442 -> c
    3:3:int getBufferSize():480:480 -> c
    1:1:java.lang.Object clone():332:332 -> clone
    1:1:int getSmallStringOptimizationThreshold():448:448 -> d
    1:1:boolean isStr8FormatSupport():497:497 -> e
    1:5:boolean equals(java.lang.Object):374:378 -> equals
    1:1:com.batch.android.msgpack.core.MessageBufferPacker newBufferPacker():432:432 -> f
    1:4:int hashCode():364:367 -> hashCode
com.batch.android.msgpack.core.MessagePack$UnpackerConfig -> com.batch.android.p0.b.h$c:
    java.nio.charset.CodingErrorAction actionOnUnmappableString -> d
    java.nio.charset.CodingErrorAction actionOnMalformedString -> c
    int bufferSize -> f
    int stringDecoderBufferSize -> g
    int stringSizeLimit -> e
    boolean allowReadingStringAsBinary -> a
    boolean allowReadingBinaryAsString -> b
    1:1:void <init>():522:522 -> <init>
    2:14:void <init>():507:519 -> <init>
    15:15:void <init>(com.batch.android.msgpack.core.MessagePack$UnpackerConfig):526:526 -> <init>
    16:41:void <init>(com.batch.android.msgpack.core.MessagePack$UnpackerConfig):507:532 -> <init>
    1:1:com.batch.android.msgpack.core.MessagePack$UnpackerConfig clone():538:538 -> a
    2:2:com.batch.android.msgpack.core.MessageUnpacker newUnpacker(com.batch.android.msgpack.core.buffer.MessageBufferInput):581:581 -> a
    3:3:com.batch.android.msgpack.core.MessageUnpacker newUnpacker(java.io.InputStream):595:595 -> a
    4:4:com.batch.android.msgpack.core.MessageUnpacker newUnpacker(java.nio.channels.ReadableByteChannel):606:606 -> a
    5:5:com.batch.android.msgpack.core.MessageUnpacker newUnpacker(byte[]):619:619 -> a
    6:6:com.batch.android.msgpack.core.MessageUnpacker newUnpacker(byte[],int,int):634:634 -> a
    7:7:com.batch.android.msgpack.core.MessageUnpacker newUnpacker(java.nio.ByteBuffer):649:649 -> a
    8:9:com.batch.android.msgpack.core.MessagePack$UnpackerConfig withAllowReadingBinaryAsString(boolean):672:673 -> a
    10:11:com.batch.android.msgpack.core.MessagePack$UnpackerConfig withActionOnMalformedString(java.nio.charset.CodingErrorAction):687:688 -> a
    12:13:com.batch.android.msgpack.core.MessagePack$UnpackerConfig withBufferSize(int):748:749 -> a
    1:2:com.batch.android.msgpack.core.MessagePack$UnpackerConfig withAllowReadingStringAsBinary(boolean):657:658 -> b
    3:3:java.nio.charset.CodingErrorAction getActionOnMalformedString():694:694 -> b
    4:5:com.batch.android.msgpack.core.MessagePack$UnpackerConfig withActionOnUnmappableString(java.nio.charset.CodingErrorAction):702:703 -> b
    6:7:com.batch.android.msgpack.core.MessagePack$UnpackerConfig withStringDecoderBufferSize(int):732:733 -> b
    1:1:java.nio.charset.CodingErrorAction getActionOnUnmappableString():709:709 -> c
    2:3:com.batch.android.msgpack.core.MessagePack$UnpackerConfig withStringSizeLimit(int):717:718 -> c
    1:1:java.lang.Object clone():504:504 -> clone
    1:1:boolean getAllowReadingBinaryAsString():679:679 -> d
    1:1:boolean getAllowReadingStringAsBinary():664:664 -> e
    1:5:boolean equals(java.lang.Object):557:561 -> equals
    1:1:int getBufferSize():755:755 -> f
    1:1:int getStringDecoderBufferSize():739:739 -> g
    1:1:int getStringSizeLimit():724:724 -> h
    1:7:int hashCode():544:550 -> hashCode
com.batch.android.msgpack.core.MessagePackException -> com.batch.android.p0.b.i:
    java.lang.IllegalStateException UNREACHABLE -> a
    1:1:void <clinit>():49:49 -> <clinit>
    1:1:void <init>():26:26 -> <init>
    2:2:void <init>(java.lang.String):31:31 -> <init>
    3:3:void <init>(java.lang.String,java.lang.Throwable):36:36 -> <init>
    4:4:void <init>(java.lang.Throwable):41:41 -> <init>
    1:1:java.lang.UnsupportedOperationException UNSUPPORTED(java.lang.String):46:46 -> a
com.batch.android.msgpack.core.MessagePacker -> com.batch.android.p0.b.j:
    boolean CORRUPTED_CHARSET_ENCODER -> i
    int UTF_8_MAX_CHAR_SIZE -> j
    com.batch.android.msgpack.core.buffer.MessageBufferOutput out -> d
    com.batch.android.msgpack.core.buffer.MessageBuffer buffer -> e
    long totalFlushBytes -> g
    int position -> f
    int bufferFlushThreshold -> b
    java.nio.charset.CharsetEncoder encoder -> h
    boolean str8FormatSupport -> c
    int smallStringOptimizationThreshold -> a
    1:25:void <clinit>():141:165 -> <clinit>
    26:26:void <clinit>():163:163 -> <clinit>
    27:27:void <clinit>():161:161 -> <clinit>
    28:28:void <clinit>():159:159 -> <clinit>
    29:39:void <clinit>():157:167 -> <clinit>
    1:7:void <init>(com.batch.android.msgpack.core.buffer.MessageBufferOutput,com.batch.android.msgpack.core.MessagePack$PackerConfig):203:209 -> <init>
    1:9:com.batch.android.msgpack.core.buffer.MessageBufferOutput reset(com.batch.android.msgpack.core.buffer.MessageBufferOutput):230:238 -> a
    10:10:void clear():262:262 -> a
    11:13:void writeByteAndByte(byte,byte):326:328 -> a
    14:17:void writeByteAndShort(byte,short):334:337 -> a
    18:21:void writeByteAndFloat(byte,float):352:355 -> a
    22:25:void writeByteAndDouble(byte,double):361:364 -> a
    26:29:void writeByteAndLong(byte,long):370:373 -> a
    30:30:com.batch.android.msgpack.core.MessagePacker packBoolean(boolean):426:426 -> a
    31:33:com.batch.android.msgpack.core.MessagePacker packByte(byte):444:446 -> a
    34:44:com.batch.android.msgpack.core.MessagePacker packShort(short):466:476 -> a
    45:70:com.batch.android.msgpack.core.MessagePacker packLong(long):534:559 -> a
    71:76:com.batch.android.msgpack.core.MessagePacker packBigInteger(java.math.BigInteger):579:584 -> a
    77:77:com.batch.android.msgpack.core.MessagePacker packFloat(float):603:603 -> a
    78:78:com.batch.android.msgpack.core.MessagePacker packDouble(double):620:620 -> a
    79:100:int encodeStringToBufferAt(int,java.lang.String):657:678 -> a
    101:130:com.batch.android.msgpack.core.MessagePacker packString(java.lang.String):696:725 -> a
    131:165:com.batch.android.msgpack.core.MessagePacker packString(java.lang.String):717:751 -> a
    166:186:com.batch.android.msgpack.core.MessagePacker packString(java.lang.String):743:763 -> a
    187:187:com.batch.android.msgpack.core.MessagePacker packString(java.lang.String):702:702 -> a
    188:188:com.batch.android.msgpack.core.MessagePacker packValue(com.batch.android.msgpack.value.Value):834:834 -> a
    189:211:com.batch.android.msgpack.core.MessagePacker packExtensionTypeHeader(byte,int):854:876 -> a
    212:212:com.batch.android.msgpack.core.MessagePacker addPayload(byte[]):991:991 -> a
    1:4:void flushBuffer():299:302 -> b
    5:6:void writeByte(byte):319:320 -> b
    7:10:void writeByteAndInt(byte,int):343:346 -> b
    11:13:void writeShort(short):379:381 -> b
    14:16:void writeLong(long):395:397 -> b
    17:20:void packStringWithGetBytes(java.lang.String):628:631 -> b
    21:21:com.batch.android.msgpack.core.MessagePacker writePayload(byte[]):944:944 -> b
    1:1:long getTotalWrittenBytes():254:254 -> c
    2:6:void ensureCapacity(int):308:312 -> c
    7:14:com.batch.android.msgpack.core.MessagePacker addPayload(byte[],int,int):1014:1021 -> c
    15:18:com.batch.android.msgpack.core.MessagePacker addPayload(byte[],int,int):1015:1018 -> c
    1:4:void close():290:293 -> close
    1:1:com.batch.android.msgpack.core.MessagePacker packNil():411:411 -> d
    2:6:com.batch.android.msgpack.core.MessagePacker packArrayHeader(int):786:790 -> d
    7:7:com.batch.android.msgpack.core.MessagePacker packArrayHeader(int):782:782 -> d
    8:15:com.batch.android.msgpack.core.MessagePacker writePayload(byte[],int,int):961:968 -> d
    16:19:com.batch.android.msgpack.core.MessagePacker writePayload(byte[],int,int):962:965 -> d
    1:17:void prepareEncoder():636:652 -> e
    18:22:com.batch.android.msgpack.core.MessagePacker packBinaryHeader(int):896:900 -> e
    1:16:com.batch.android.msgpack.core.MessagePacker packInt(int):497:512 -> f
    1:4:void flush():274:277 -> flush
    1:5:com.batch.android.msgpack.core.MessagePacker packMapHeader(int):815:819 -> g
    6:6:com.batch.android.msgpack.core.MessagePacker packMapHeader(int):811:811 -> g
    1:7:com.batch.android.msgpack.core.MessagePacker packRawStringHeader(int):921:927 -> h
    1:3:void writeInt(int):387:389 -> i
com.batch.android.msgpack.core.MessageSizeException -> com.batch.android.p0.b.k:
    long size -> b
    1:2:void <init>(long):28:29 -> <init>
    3:4:void <init>(java.lang.String,long):34:35 -> <init>
    1:1:long getSize():40:40 -> a
com.batch.android.msgpack.core.MessageStringCodingException -> com.batch.android.p0.b.l:
    1:1:void <init>(java.lang.String,java.nio.charset.CharacterCodingException):28:28 -> <init>
    2:2:void <init>(java.nio.charset.CharacterCodingException):33:33 -> <init>
    1:1:java.nio.charset.CharacterCodingException getCause():39:39 -> a
    1:1:java.lang.Throwable getCause():23:23 -> getCause
com.batch.android.msgpack.core.MessageTypeCastException -> com.batch.android.p0.b.m:
    1:1:void <init>():23:23 -> <init>
    2:2:void <init>(java.lang.String):28:28 -> <init>
    3:3:void <init>(java.lang.String,java.lang.Throwable):33:33 -> <init>
    4:4:void <init>(java.lang.Throwable):38:38 -> <init>
com.batch.android.msgpack.core.MessageTypeException -> com.batch.android.p0.b.n:
    1:1:void <init>():26:26 -> <init>
    2:2:void <init>(java.lang.String):31:31 -> <init>
    3:3:void <init>(java.lang.String,java.lang.Throwable):36:36 -> <init>
    4:4:void <init>(java.lang.Throwable):41:41 -> <init>
com.batch.android.msgpack.core.MessageUnpacker -> com.batch.android.p0.b.o:
    long totalReadBytes -> j
    com.batch.android.msgpack.core.buffer.MessageBuffer numberBuffer -> k
    int nextReadPosition -> l
    com.batch.android.msgpack.core.buffer.MessageBuffer buffer -> h
    java.lang.StringBuilder decodeStringBuffer -> m
    int position -> i
    int stringDecoderBufferSize -> f
    java.lang.String EMPTY_STRING -> q
    com.batch.android.msgpack.core.buffer.MessageBufferInput in -> g
    int stringSizeLimit -> e
    com.batch.android.msgpack.core.buffer.MessageBuffer EMPTY_BUFFER -> p
    boolean $assertionsDisabled -> r
    java.nio.charset.CodingErrorAction actionOnUnmappableString -> d
    java.nio.charset.CodingErrorAction actionOnMalformedString -> c
    java.nio.CharBuffer decodeBuffer -> o
    java.nio.charset.CharsetDecoder decoder -> n
    boolean allowReadingStringAsBinary -> a
    boolean allowReadingBinaryAsString -> b
    1:4:void <clinit>():150:153 -> <clinit>
    1:1:void <init>(com.batch.android.msgpack.core.buffer.MessageBufferInput,com.batch.android.msgpack.core.MessagePack$UnpackerConfig):212:212 -> <init>
    2:54:void <init>(com.batch.android.msgpack.core.buffer.MessageBufferInput,com.batch.android.msgpack.core.MessagePack$UnpackerConfig):167:219 -> <init>
    1:40:int unpackInt():921:960 -> A
    41:43:int unpackInt():954:956 -> A
    44:44:int unpackInt():951:951 -> A
    45:45:int unpackInt():948:948 -> A
    46:46:int unpackInt():945:945 -> A
    47:49:int unpackInt():939:941 -> A
    50:52:int unpackInt():933:935 -> A
    53:53:int unpackInt():930:930 -> A
    54:54:int unpackInt():927:927 -> A
    1:38:long unpackLong():976:1013 -> B
    39:39:long unpackLong():1010:1010 -> B
    40:40:long unpackLong():1007:1007 -> B
    41:41:long unpackLong():1004:1004 -> B
    42:42:long unpackLong():1001:1001 -> B
    43:45:long unpackLong():995:997 -> B
    46:46:long unpackLong():988:988 -> B
    47:47:long unpackLong():985:985 -> B
    48:48:long unpackLong():982:982 -> B
    1:15:int unpackMapHeader():1309:1323 -> C
    16:16:int unpackMapHeader():1315:1315 -> C
    1:5:void unpackNil():729:733 -> D
    1:16:int unpackRawStringHeader():1413:1428 -> E
    1:46:short unpackShort():860:905 -> F
    47:49:short unpackShort():899:901 -> F
    50:52:short unpackShort():893:895 -> F
    53:53:short unpackShort():890:890 -> F
    54:54:short unpackShort():887:887 -> F
    55:57:short unpackShort():881:883 -> F
    58:60:short unpackShort():875:877 -> F
    61:63:short unpackShort():869:871 -> F
    64:64:short unpackShort():866:866 -> F
    1:81:java.lang.String unpackString():1136:1216 -> G
    82:86:java.lang.String unpackString():1206:1210 -> G
    87:116:java.lang.String unpackString():1193:1222 -> G
    117:121:java.lang.String unpackString():1141:1141 -> G
    1:49:com.batch.android.msgpack.value.ImmutableValue unpackValue():604:652 -> H
    50:52:com.batch.android.msgpack.value.ImmutableValue unpackValue():647:649 -> H
    53:53:com.batch.android.msgpack.value.ImmutableValue unpackValue():648:648 -> H
    54:62:com.batch.android.msgpack.value.ImmutableValue unpackValue():636:644 -> H
    63:68:com.batch.android.msgpack.value.ImmutableValue unpackValue():628:633 -> H
    69:70:com.batch.android.msgpack.value.ImmutableValue unpackValue():624:625 -> H
    71:72:com.batch.android.msgpack.value.ImmutableValue unpackValue():620:621 -> H
    73:73:com.batch.android.msgpack.value.ImmutableValue unpackValue():618:618 -> H
    74:77:com.batch.android.msgpack.value.ImmutableValue unpackValue():612:615 -> H
    78:78:com.batch.android.msgpack.value.ImmutableValue unpackValue():610:610 -> H
    79:80:com.batch.android.msgpack.value.ImmutableValue unpackValue():607:608 -> H
    1:8:com.batch.android.msgpack.core.buffer.MessageBufferInput reset(com.batch.android.msgpack.core.buffer.MessageBufferInput):239:246 -> a
    9:16:boolean ensureBuffer():360:367 -> a
    17:29:com.batch.android.msgpack.core.MessagePackException unexpected(java.lang.String,byte):585:597 -> a
    30:30:com.batch.android.msgpack.core.MessagePackException unexpected(java.lang.String,byte):593:593 -> a
    31:88:com.batch.android.msgpack.value.Variable unpackValue(com.batch.android.msgpack.value.Variable):659:716 -> a
    89:90:com.batch.android.msgpack.value.Variable unpackValue(com.batch.android.msgpack.value.Variable):711:712 -> a
    91:98:com.batch.android.msgpack.value.Variable unpackValue(com.batch.android.msgpack.value.Variable):700:707 -> a
    99:104:com.batch.android.msgpack.value.Variable unpackValue(com.batch.android.msgpack.value.Variable):691:696 -> a
    105:106:com.batch.android.msgpack.value.Variable unpackValue(com.batch.android.msgpack.value.Variable):686:687 -> a
    107:108:com.batch.android.msgpack.value.Variable unpackValue(com.batch.android.msgpack.value.Variable):681:682 -> a
    109:109:com.batch.android.msgpack.value.Variable unpackValue(com.batch.android.msgpack.value.Variable):678:678 -> a
    110:115:com.batch.android.msgpack.value.Variable unpackValue(com.batch.android.msgpack.value.Variable):669:674 -> a
    116:116:com.batch.android.msgpack.value.Variable unpackValue(com.batch.android.msgpack.value.Variable):671:671 -> a
    117:117:com.batch.android.msgpack.value.Variable unpackValue(com.batch.android.msgpack.value.Variable):666:666 -> a
    118:119:com.batch.android.msgpack.value.Variable unpackValue(com.batch.android.msgpack.value.Variable):662:663 -> a
    120:123:void handleCoderError(java.nio.charset.CoderResult):1229:1232 -> a
    124:134:void readPayload(java.nio.ByteBuffer):1505:1515 -> a
    135:146:void readPayload(com.batch.android.msgpack.core.buffer.MessageBuffer,int,int):1535:1546 -> a
    147:147:void readPayload(byte[]):1564:1564 -> a
    148:149:com.batch.android.msgpack.core.MessageIntegerOverflowException overflowU8(byte):1681:1682 -> a
    150:151:com.batch.android.msgpack.core.MessageIntegerOverflowException overflowI16(short):1705:1706 -> a
    152:153:com.batch.android.msgpack.core.MessageIntegerOverflowException overflowI64(long):1717:1718 -> a
    1:6:com.batch.android.msgpack.core.buffer.MessageBuffer getNextBuffer():275:280 -> b
    7:7:com.batch.android.msgpack.core.buffer.MessageBuffer getNextBuffer():277:277 -> b
    8:8:int tryReadBinaryHeader(byte):1404:1404 -> b
    9:9:int tryReadBinaryHeader(byte):1402:1402 -> b
    10:10:int tryReadBinaryHeader(byte):1400:1400 -> b
    11:12:com.batch.android.msgpack.core.MessageIntegerOverflowException overflowU16(short):1687:1688 -> b
    13:14:com.batch.android.msgpack.core.MessageIntegerOverflowException overflowU64(long):1699:1700 -> b
    1:5:com.batch.android.msgpack.core.MessageFormat getNextFormat():391:395 -> c
    6:6:com.batch.android.msgpack.core.MessageFormat getNextFormat():392:392 -> c
    7:26:java.lang.String decodeStringFastPath(int):1238:1257 -> c
    27:27:java.lang.String decodeStringFastPath(int):1254:1254 -> c
    28:28:int tryReadStringHeader(byte):1389:1389 -> c
    29:29:int tryReadStringHeader(byte):1387:1387 -> c
    30:30:int tryReadStringHeader(byte):1385:1385 -> c
    31:42:void readPayload(byte[],int,int):1601:1612 -> c
    1:3:void close():1674:1676 -> close
    1:1:long getTotalReadBytes():263:263 -> d
    2:2:int utf8MultibyteCharacterSize(byte):341:341 -> d
    3:4:com.batch.android.msgpack.core.MessageIntegerOverflowException overflowI32(int):1711:1712 -> d
    1:1:boolean hasNext():354:354 -> e
    2:3:com.batch.android.msgpack.core.MessageIntegerOverflowException overflowU32(int):1693:1694 -> e
    1:2:void nextBuffer():287:288 -> f
    3:3:com.batch.android.msgpack.core.MessageSizeException overflowU32Size(int):1724:1724 -> f
    1:34:com.batch.android.msgpack.core.buffer.MessageBuffer prepareNumberBuffer(int):302:335 -> g
    35:35:com.batch.android.msgpack.core.buffer.MessageBuffer prepareNumberBuffer(int):328:328 -> g
    36:47:byte readByte():407:418 -> g
    1:2:double readDouble():453:454 -> h
    3:4:byte[] readPayload(int):1582:1583 -> h
    1:2:float readFloat():446:447 -> i
    3:10:com.batch.android.msgpack.core.buffer.MessageBuffer readPayloadAsReference(int):1630:1637 -> i
    1:2:int readInt():432:433 -> j
    3:11:void skipPayload(int):1479:1487 -> j
    1:2:long readLong():439:440 -> k
    3:93:void skipValue(int):478:568 -> k
    94:94:void skipValue(int):565:565 -> k
    95:95:void skipValue(int):562:562 -> k
    96:96:void skipValue(int):559:559 -> k
    97:97:void skipValue(int):556:556 -> k
    98:98:void skipValue(int):553:553 -> k
    99:99:void skipValue(int):550:550 -> k
    100:100:void skipValue(int):547:547 -> k
    101:101:void skipValue(int):544:544 -> k
    102:102:void skipValue(int):541:541 -> k
    103:103:void skipValue(int):538:538 -> k
    104:104:void skipValue(int):535:535 -> k
    105:105:void skipValue(int):532:532 -> k
    106:106:void skipValue(int):529:529 -> k
    107:107:void skipValue(int):525:525 -> k
    108:108:void skipValue(int):521:521 -> k
    109:109:void skipValue(int):517:517 -> k
    110:110:void skipValue(int):512:512 -> k
    111:111:void skipValue(int):507:507 -> k
    112:112:void skipValue(int):503:503 -> k
    113:113:void skipValue(int):498:498 -> k
    1:1:int readNextLength16():1651:1651 -> l
    1:3:int readNextLength32():1658:1660 -> m
    1:1:int readNextLength8():1644:1644 -> n
    1:2:short readShort():425:426 -> o
    1:12:void resetDecoder():1118:1129 -> p
    1:1:void skipValue():465:465 -> q
    1:6:boolean tryUnpackNil():750:755 -> r
    7:7:boolean tryUnpackNil():751:751 -> r
    1:15:int unpackArrayHeader():1276:1290 -> s
    16:16:int unpackArrayHeader():1282:1282 -> s
    1:40:java.math.BigInteger unpackBigInteger():1026:1065 -> t
    41:42:java.math.BigInteger unpackBigInteger():1062:1063 -> t
    43:44:java.math.BigInteger unpackBigInteger():1059:1060 -> t
    45:46:java.math.BigInteger unpackBigInteger():1056:1057 -> t
    47:48:java.math.BigInteger unpackBigInteger():1053:1054 -> t
    49:54:java.math.BigInteger unpackBigInteger():1045:1050 -> t
    55:59:java.math.BigInteger unpackBigInteger():1038:1042 -> t
    60:61:java.math.BigInteger unpackBigInteger():1035:1036 -> t
    62:63:java.math.BigInteger unpackBigInteger():1032:1033 -> t
    1:16:int unpackBinaryHeader():1450:1465 -> u
    1:7:boolean unpackBoolean():771:777 -> v
    1:52:byte unpackByte():793:844 -> w
    53:55:byte unpackByte():838:840 -> w
    56:58:byte unpackByte():832:834 -> w
    59:61:byte unpackByte():826:828 -> w
    62:62:byte unpackByte():823:823 -> w
    63:65:byte unpackByte():817:819 -> w
    66:68:byte unpackByte():811:813 -> w
    69:71:byte unpackByte():805:807 -> w
    72:74:byte unpackByte():799:801 -> w
    1:10:double unpackDouble():1102:1111 -> x
    11:11:double unpackDouble():1105:1105 -> x
    1:49:com.batch.android.msgpack.core.ExtensionTypeHeader unpackExtensionTypeHeader():1329:1377 -> y
    50:51:com.batch.android.msgpack.core.ExtensionTypeHeader unpackExtensionTypeHeader():1348:1349 -> y
    52:53:com.batch.android.msgpack.core.ExtensionTypeHeader unpackExtensionTypeHeader():1344:1345 -> y
    54:55:com.batch.android.msgpack.core.ExtensionTypeHeader unpackExtensionTypeHeader():1340:1341 -> y
    56:57:com.batch.android.msgpack.core.ExtensionTypeHeader unpackExtensionTypeHeader():1336:1337 -> y
    58:99:com.batch.android.msgpack.core.ExtensionTypeHeader unpackExtensionTypeHeader():1332:1373 -> y
    100:100:com.batch.android.msgpack.core.ExtensionTypeHeader unpackExtensionTypeHeader():1369:1369 -> y
    101:105:com.batch.android.msgpack.core.ExtensionTypeHeader unpackExtensionTypeHeader():1359:1363 -> y
    106:110:com.batch.android.msgpack.core.ExtensionTypeHeader unpackExtensionTypeHeader():1352:1356 -> y
    1:10:float unpackFloat():1080:1089 -> z
    11:11:float unpackFloat():1083:1083 -> z
com.batch.android.msgpack.core.MessageUnpacker$1 -> com.batch.android.p0.b.o$a:
    int[] $SwitchMap$com$batch$android$msgpack$value$ValueType -> b
    int[] $SwitchMap$com$batch$android$msgpack$core$MessageFormat -> a
    1:1:void <clinit>():605:605 -> <clinit>
    2:2:void <clinit>():480:480 -> <clinit>
com.batch.android.msgpack.core.Preconditions -> com.batch.android.p0.b.p:
    1:1:void <init>():76:76 -> <init>
    1:1:void checkArgument(boolean):88:88 -> a
    2:2:void checkArgument(boolean,java.lang.Object):105:105 -> a
    3:4:void checkArgument(boolean,java.lang.String,java.lang.Object[]):133:134 -> a
    5:5:java.lang.Object checkNotNull(java.lang.Object):209:209 -> a
    6:6:java.lang.Object checkNotNull(java.lang.Object,java.lang.Object):227:227 -> a
    7:8:java.lang.Object checkNotNull(java.lang.Object,java.lang.String,java.lang.Object[]):255:256 -> a
    9:9:int checkElementIndex(int,int):305:305 -> a
    10:14:java.lang.String badElementIndex(int,int,java.lang.String):335:339 -> a
    15:15:java.lang.String badElementIndex(int,int,java.lang.String):337:337 -> a
    16:18:java.lang.String badPositionIndexes(int,int,int):428:428 -> a
    19:19:java.lang.String badPositionIndexes(int,int,int):425:425 -> a
    20:20:java.lang.String badPositionIndexes(int,int,int):422:422 -> a
    21:50:java.lang.String format(java.lang.String,java.lang.Object[]):448:477 -> a
    1:1:void checkState(boolean):148:148 -> b
    2:2:void checkState(boolean,java.lang.Object):165:165 -> b
    3:4:void checkState(boolean,java.lang.String,java.lang.Object[]):193:194 -> b
    5:5:int checkPositionIndex(int,int):358:358 -> b
    6:11:java.lang.String badPositionIndex(int,int,java.lang.String):388:393 -> b
    12:12:java.lang.String badPositionIndex(int,int,java.lang.String):392:392 -> b
    13:13:java.lang.String badPositionIndex(int,int,java.lang.String):390:390 -> b
    14:14:void checkPositionIndexes(int,int,int):415:415 -> b
    1:1:int checkElementIndex(int,int,java.lang.String):327:327 -> c
    1:1:int checkPositionIndex(int,int,java.lang.String):380:380 -> d
com.batch.android.msgpack.core.buffer.ArrayBufferInput -> com.batch.android.msgpack.core.buffer.a:
    com.batch.android.msgpack.core.buffer.MessageBuffer buffer -> a
    boolean isEmpty -> b
    1:6:void <init>(com.batch.android.msgpack.core.buffer.MessageBuffer):30:35 -> <init>
    7:7:void <init>(byte[]):41:41 -> <init>
    8:8:void <init>(byte[],int,int):46:46 -> <init>
    1:6:com.batch.android.msgpack.core.buffer.MessageBuffer reset(com.batch.android.msgpack.core.buffer.MessageBuffer):57:62 -> a
    7:7:void reset(byte[]):69:69 -> a
    1:1:void reset(byte[],int,int):74:74 -> c
    1:2:void close():90:91 -> close
    1:5:com.batch.android.msgpack.core.buffer.MessageBuffer next():80:84 -> next
com.batch.android.msgpack.core.buffer.ArrayBufferOutput -> com.batch.android.msgpack.core.buffer.b:
    java.util.List list -> a
    com.batch.android.msgpack.core.buffer.MessageBuffer lastBuffer -> c
    int bufferSize -> b
    1:1:void <init>():37:37 -> <init>
    2:4:void <init>(int):41:43 -> <init>
    1:1:void clear():116:116 -> a
    2:6:void writeBuffer(int):135:139 -> a
    7:9:void write(byte[],int,int):146:148 -> a
    1:2:int getSize():54:55 -> b
    3:8:com.batch.android.msgpack.core.buffer.MessageBuffer next(int):122:127 -> b
    9:10:void add(byte[],int,int):154:155 -> b
    1:1:java.util.List toBufferList():108:108 -> c
    1:5:byte[] toByteArray():70:74 -> d
    1:6:com.batch.android.msgpack.core.buffer.MessageBuffer toMessageBuffer():89:94 -> e
com.batch.android.msgpack.core.buffer.ByteBufferInput -> com.batch.android.msgpack.core.buffer.c:
    java.nio.ByteBuffer input -> a
    boolean isRead -> b
    1:1:void <init>(java.nio.ByteBuffer):32:32 -> <init>
    2:6:void <init>(java.nio.ByteBuffer):29:33 -> <init>
    1:3:java.nio.ByteBuffer reset(java.nio.ByteBuffer):44:46 -> a
    1:6:com.batch.android.msgpack.core.buffer.MessageBuffer next():53:58 -> next
com.batch.android.msgpack.core.buffer.ChannelBufferInput -> com.batch.android.msgpack.core.buffer.d:
    java.nio.channels.ReadableByteChannel channel -> a
    com.batch.android.msgpack.core.buffer.MessageBuffer buffer -> b
    1:1:void <init>(java.nio.channels.ReadableByteChannel):36:36 -> <init>
    2:5:void <init>(java.nio.channels.ReadableByteChannel,int):40:43 -> <init>
    1:2:java.nio.channels.ReadableByteChannel reset(java.nio.channels.ReadableByteChannel):55:56 -> a
    1:1:void close():77:77 -> close
    1:7:com.batch.android.msgpack.core.buffer.MessageBuffer next():64:70 -> next
com.batch.android.msgpack.core.buffer.ChannelBufferOutput -> com.batch.android.msgpack.core.buffer.e:
    java.nio.channels.WritableByteChannel channel -> a
    com.batch.android.msgpack.core.buffer.MessageBuffer buffer -> b
    1:1:void <init>(java.nio.channels.WritableByteChannel):35:35 -> <init>
    2:4:void <init>(java.nio.channels.WritableByteChannel,int):39:41 -> <init>
    1:2:java.nio.channels.WritableByteChannel reset(java.nio.channels.WritableByteChannel):53:54 -> a
    3:5:void writeBuffer(int):72:74 -> a
    6:8:void write(byte[],int,int):82:84 -> a
    1:4:com.batch.android.msgpack.core.buffer.MessageBuffer next(int):62:65 -> b
    5:5:void add(byte[],int,int):92:92 -> b
    1:1:void close():99:99 -> close
com.batch.android.msgpack.core.buffer.DirectBufferAccess -> com.batch.android.msgpack.core.buffer.f:
    java.lang.Class directByteBufferClass -> f
    com.batch.android.msgpack.core.buffer.DirectBufferAccess$DirectBufferConstructorType directBufferConstructorType -> g
    java.lang.reflect.Method memoryBlockWrapFromJni -> h
    java.lang.reflect.Method mClean -> c
    java.lang.reflect.Constructor byteBufferConstructor -> e
    java.lang.reflect.Method mInvokeCleaner -> d
    java.lang.reflect.Method mGetAddress -> a
    java.lang.reflect.Method mCleaner -> b
    1:54:void <clinit>():56:109 -> <clinit>
    55:68:void <clinit>():99:112 -> <clinit>
    1:1:void <init>():31:31 -> <init>
    1:1:java.lang.Object access$000(java.nio.ByteBuffer):28:28 -> a
    2:2:java.lang.Object access$100(java.nio.ByteBuffer,java.lang.reflect.Method):28:28 -> a
    3:10:void clean(java.lang.Object):245:252 -> a
    11:26:java.nio.ByteBuffer newByteBuffer(long,int,int,java.nio.ByteBuffer):264:279 -> a
    27:30:java.nio.ByteBuffer newByteBuffer(long,int,int,java.nio.ByteBuffer):275:275 -> a
    31:33:java.nio.ByteBuffer newByteBuffer(long,int,int,java.nio.ByteBuffer):272:272 -> a
    34:34:java.nio.ByteBuffer newByteBuffer(long,int,int,java.nio.ByteBuffer):270:270 -> a
    35:37:java.nio.ByteBuffer newByteBuffer(long,int,int,java.nio.ByteBuffer):266:266 -> a
    50:54:java.nio.ByteBuffer newByteBuffer(long,int,int,java.nio.ByteBuffer):279:283 -> a
    1:1:java.lang.Object access$200(java.nio.ByteBuffer):28:28 -> b
    2:5:java.lang.Object getCleanMethod(java.nio.ByteBuffer,java.lang.reflect.Method):194:197 -> b
    6:10:long getAddress(java.lang.Object):234:238 -> b
    11:11:long getAddress(java.lang.Object):236:236 -> b
    1:3:java.lang.Object getCleanerMethod(java.nio.ByteBuffer):171:173 -> c
    4:4:boolean isDirectByteBufferInstance(java.lang.Object):258:258 -> c
    1:3:java.lang.Object getInvokeCleanerMethod(java.nio.ByteBuffer):218:220 -> d
    1:25:void setupCleanerJava6(java.nio.ByteBuffer):119:143 -> e
    26:26:void setupCleanerJava6(java.nio.ByteBuffer):141:141 -> e
    27:27:void setupCleanerJava6(java.nio.ByteBuffer):128:128 -> e
    1:12:void setupCleanerJava9(java.nio.ByteBuffer):148:159 -> f
    13:13:void setupCleanerJava9(java.nio.ByteBuffer):157:157 -> f
com.batch.android.msgpack.core.buffer.DirectBufferAccess$1 -> com.batch.android.msgpack.core.buffer.f$a:
    java.nio.ByteBuffer val$direct -> a
    1:1:void <init>(java.nio.ByteBuffer):120:120 -> <init>
    1:1:java.lang.Object run():124:124 -> run
com.batch.android.msgpack.core.buffer.DirectBufferAccess$2 -> com.batch.android.msgpack.core.buffer.f$b:
    java.nio.ByteBuffer val$direct -> a
    1:1:void <init>(java.nio.ByteBuffer):133:133 -> <init>
    1:1:java.lang.Object run():137:137 -> run
com.batch.android.msgpack.core.buffer.DirectBufferAccess$3 -> com.batch.android.msgpack.core.buffer.f$c:
    java.nio.ByteBuffer val$direct -> a
    1:1:void <init>(java.nio.ByteBuffer):149:149 -> <init>
    1:1:java.lang.Object run():153:153 -> run
com.batch.android.msgpack.core.buffer.DirectBufferAccess$4 -> com.batch.android.msgpack.core.buffer.f$d:
    int[] $SwitchMap$com$batch$android$msgpack$core$buffer$DirectBufferAccess$DirectBufferConstructorType -> a
    1:1:void <clinit>():264:264 -> <clinit>
com.batch.android.msgpack.core.buffer.DirectBufferAccess$DirectBufferConstructorType -> com.batch.android.msgpack.core.buffer.f$e:
    com.batch.android.msgpack.core.buffer.DirectBufferAccess$DirectBufferConstructorType ARGS_MB_INT_INT -> d
    com.batch.android.msgpack.core.buffer.DirectBufferAccess$DirectBufferConstructorType ARGS_LONG_INT -> b
    com.batch.android.msgpack.core.buffer.DirectBufferAccess$DirectBufferConstructorType ARGS_INT_INT -> c
    com.batch.android.msgpack.core.buffer.DirectBufferAccess$DirectBufferConstructorType ARGS_LONG_INT_REF -> a
    com.batch.android.msgpack.core.buffer.DirectBufferAccess$DirectBufferConstructorType[] $VALUES -> e
    1:4:void <clinit>():35:38 -> <clinit>
    5:5:void <clinit>():33:33 -> <clinit>
    1:1:void <init>(java.lang.String,int):33:33 -> <init>
    1:1:com.batch.android.msgpack.core.buffer.DirectBufferAccess$DirectBufferConstructorType valueOf(java.lang.String):33:33 -> valueOf
    1:1:com.batch.android.msgpack.core.buffer.DirectBufferAccess$DirectBufferConstructorType[] values():33:33 -> values
com.batch.android.msgpack.core.buffer.InputStreamBufferInput -> com.batch.android.msgpack.core.buffer.g:
    byte[] buffer -> b
    java.io.InputStream in -> a
    1:1:void <init>(java.io.InputStream):48:48 -> <init>
    2:4:void <init>(java.io.InputStream,int):52:54 -> <init>
    1:8:com.batch.android.msgpack.core.buffer.MessageBufferInput newBufferInput(java.io.InputStream):36:43 -> a
    1:2:java.io.InputStream reset(java.io.InputStream):66:67 -> b
    1:1:void close():86:86 -> close
    1:5:com.batch.android.msgpack.core.buffer.MessageBuffer next():75:79 -> next
com.batch.android.msgpack.core.buffer.MessageBuffer -> com.batch.android.msgpack.core.buffer.MessageBuffer:
    1:58:void <clinit>():51:108 -> <clinit>
    59:114:void <clinit>():101:156 -> <clinit>
    115:159:void <clinit>():112:156 -> <clinit>
    160:202:void <clinit>():117:159 -> <clinit>
    203:204:void <clinit>():155:156 -> <clinit>
    1:5:void <init>(byte[],int,int):349:353 -> <init>
    6:27:void <init>(java.nio.ByteBuffer):362:383 -> <init>
    28:32:void <init>(java.lang.Object,long,int):389:393 -> <init>
    1:1:com.batch.android.msgpack.core.buffer.MessageBuffer allocate(int):217:217 -> allocate
    2:2:com.batch.android.msgpack.core.buffer.MessageBuffer allocate(int):215:215 -> allocate
    1:1:byte[] array():622:622 -> array
    1:1:int arrayOffset():627:627 -> arrayOffset
    1:1:void copyTo(int,com.batch.android.msgpack.core.buffer.MessageBuffer,int,int):640:640 -> copyTo
    1:1:boolean getBoolean(int):427:427 -> getBoolean
    1:1:byte getByte(int):422:422 -> getByte
    1:1:void getBytes(int,byte[],int,int):468:468 -> getBytes
    2:6:void getBytes(int,int,java.nio.ByteBuffer):473:477 -> getBytes
    7:7:void getBytes(int,int,java.nio.ByteBuffer):474:474 -> getBytes
    1:1:double getDouble(int):463:463 -> getDouble
    1:1:float getFloat(int):452:452 -> getFloat
    1:3:int getInt(int):445:447 -> getInt
    1:15:int getJavaVersion():164:178 -> getJavaVersion
    1:2:long getLong(int):457:458 -> getLong
    1:2:short getShort(int):432:433 -> getShort
    1:1:boolean hasArray():605:605 -> hasArray
    1:16:com.batch.android.msgpack.core.buffer.MessageBuffer newInstance(java.lang.reflect.Constructor,java.lang.Object[]):310:325 -> newInstance
    17:17:com.batch.android.msgpack.core.buffer.MessageBuffer newInstance(java.lang.reflect.Constructor,java.lang.Object[]):320:320 -> newInstance
    18:18:com.batch.android.msgpack.core.buffer.MessageBuffer newInstance(java.lang.reflect.Constructor,java.lang.Object[]):316:316 -> newInstance
    19:19:com.batch.android.msgpack.core.buffer.MessageBuffer newInstance(java.lang.reflect.Constructor,java.lang.Object[]):313:313 -> newInstance
    1:5:com.batch.android.msgpack.core.buffer.MessageBuffer newMessageBuffer(byte[],int,int):277:281 -> newMessageBuffer
    6:10:com.batch.android.msgpack.core.buffer.MessageBuffer newMessageBuffer(java.nio.ByteBuffer):292:296 -> newMessageBuffer
    1:1:void putBoolean(int,boolean):487:487 -> putBoolean
    1:1:void putByte(int,byte):482:482 -> putByte
    1:11:void putByteBuffer(int,java.nio.ByteBuffer,int):533:543 -> putByteBuffer
    12:21:void putByteBuffer(int,java.nio.ByteBuffer,int):542:551 -> putByteBuffer
    22:33:void putByteBuffer(int,java.nio.ByteBuffer,int):550:561 -> putByteBuffer
    34:34:void putByteBuffer(int,java.nio.ByteBuffer,int):538:538 -> putByteBuffer
    35:35:void putByteBuffer(int,java.nio.ByteBuffer,int):534:534 -> putByteBuffer
    1:1:void putBytes(int,byte[],int,int):528:528 -> putBytes
    1:1:void putDouble(int,double):523:523 -> putDouble
    1:1:void putFloat(int,float):511:511 -> putFloat
    1:2:void putInt(int,int):505:506 -> putInt
    1:2:void putLong(int,long):517:518 -> putLong
    1:1:void putMessageBuffer(int,com.batch.android.msgpack.core.buffer.MessageBuffer,int,int):569:569 -> putMessageBuffer
    1:2:void putShort(int,short):492:493 -> putShort
    1:7:void releaseBuffer(com.batch.android.msgpack.core.buffer.MessageBuffer):331:337 -> releaseBuffer
    1:1:int size():406:406 -> size
    1:5:com.batch.android.msgpack.core.buffer.MessageBuffer slice(int,int):412:416 -> slice
    1:9:java.nio.ByteBuffer sliceAsByteBuffer(int,int):581:589 -> sliceAsByteBuffer
    10:10:java.nio.ByteBuffer sliceAsByteBuffer(int,int):587:587 -> sliceAsByteBuffer
    11:11:java.nio.ByteBuffer sliceAsByteBuffer():600:600 -> sliceAsByteBuffer
    1:2:byte[] toByteArray():615:616 -> toByteArray
    1:8:java.lang.String toHexString(int,int):645:652 -> toHexString
    1:1:com.batch.android.msgpack.core.buffer.MessageBuffer wrap(byte[]):232:232 -> wrap
    2:2:com.batch.android.msgpack.core.buffer.MessageBuffer wrap(byte[],int,int):249:249 -> wrap
    3:3:com.batch.android.msgpack.core.buffer.MessageBuffer wrap(java.nio.ByteBuffer):266:266 -> wrap
com.batch.android.msgpack.core.buffer.MessageBufferBE -> com.batch.android.msgpack.core.buffer.MessageBufferBE:
    1:1:void <init>(byte[],int,int):32:32 -> <init>
    2:2:void <init>(java.nio.ByteBuffer):37:37 -> <init>
    3:3:void <init>(java.lang.Object,long,int):42:42 -> <init>
    1:5:com.batch.android.msgpack.core.buffer.MessageBufferBE slice(int,int):48:52 -> a
    1:1:double getDouble(int):83:83 -> getDouble
    1:1:float getFloat(int):77:77 -> getFloat
    1:1:int getInt(int):66:66 -> getInt
    1:1:long getLong(int):71:71 -> getLong
    1:1:short getShort(int):59:59 -> getShort
    1:1:void putDouble(int,double):107:107 -> putDouble
    1:1:void putInt(int,int):95:95 -> putInt
    1:1:void putLong(int,long):101:101 -> putLong
    1:1:void putShort(int,short):89:89 -> putShort
    1:1:com.batch.android.msgpack.core.buffer.MessageBuffer slice(int,int):27:27 -> slice
com.batch.android.msgpack.core.buffer.MessageBufferInput -> com.batch.android.msgpack.core.buffer.h:
com.batch.android.msgpack.core.buffer.MessageBufferOutput -> com.batch.android.msgpack.core.buffer.i:
    void write(byte[],int,int) -> a
    void writeBuffer(int) -> a
    void add(byte[],int,int) -> b
    com.batch.android.msgpack.core.buffer.MessageBuffer next(int) -> b
com.batch.android.msgpack.core.buffer.MessageBufferU -> com.batch.android.msgpack.core.buffer.MessageBufferU:
    1:2:void <init>(byte[],int,int):33:34 -> <init>
    3:4:void <init>(java.nio.ByteBuffer):39:40 -> <init>
    5:6:void <init>(java.lang.Object,long,int,java.nio.ByteBuffer):45:46 -> <init>
    1:1:byte[] array():264:264 -> array
    1:5:void copyTo(int,com.batch.android.msgpack.core.buffer.MessageBuffer,int,int):234:238 -> copyTo
    1:1:boolean getBoolean(int):81:81 -> getBoolean
    1:1:byte getByte(int):75:75 -> getByte
    1:6:void getBytes(int,int,java.nio.ByteBuffer):118:123 -> getBytes
    7:11:void getBytes(int,byte[],int,int):190:194 -> getBytes
    1:1:double getDouble(int):111:111 -> getDouble
    1:1:float getFloat(int):99:99 -> getFloat
    1:1:int getInt(int):93:93 -> getInt
    1:1:long getLong(int):105:105 -> getLong
    1:1:short getShort(int):87:87 -> getShort
    1:1:boolean hasArray():258:258 -> hasArray
    1:1:void putBoolean(int,boolean):135:135 -> putBoolean
    1:1:void putByte(int,byte):129:129 -> putByte
    1:16:void putByteBuffer(int,java.nio.ByteBuffer,int):200:215 -> putByteBuffer
    17:17:void putByteBuffer(int,java.nio.ByteBuffer,int):201:201 -> putByteBuffer
    1:5:void putBytes(int,byte[],int,int):223:227 -> putBytes
    1:1:void putDouble(int,double):165:165 -> putDouble
    1:1:void putFloat(int,float):153:153 -> putFloat
    1:1:void putInt(int,int):147:147 -> putInt
    1:1:void putLong(int,long):159:159 -> putLong
    1:1:void putMessageBuffer(int,com.batch.android.msgpack.core.buffer.MessageBuffer,int,int):244:244 -> putMessageBuffer
    1:1:void putShort(int,short):141:141 -> putShort
    1:2:void resetBufferPosition():68:69 -> resetBufferPosition
    1:1:com.batch.android.msgpack.core.buffer.MessageBuffer slice(int,int):26:26 -> slice
    2:12:com.batch.android.msgpack.core.buffer.MessageBufferU slice(int,int):52:62 -> slice
    1:6:java.nio.ByteBuffer sliceAsByteBuffer(int,int):172:177 -> sliceAsByteBuffer
    7:7:java.nio.ByteBuffer sliceAsByteBuffer():183:183 -> sliceAsByteBuffer
    1:2:byte[] toByteArray():250:251 -> toByteArray
com.batch.android.msgpack.core.buffer.OutputStreamBufferOutput -> com.batch.android.msgpack.core.buffer.j:
    java.io.OutputStream out -> a
    com.batch.android.msgpack.core.buffer.MessageBuffer buffer -> b
    1:1:void <init>(java.io.OutputStream):34:34 -> <init>
    2:4:void <init>(java.io.OutputStream,int):38:40 -> <init>
    1:2:java.io.OutputStream reset(java.io.OutputStream):52:53 -> a
    3:3:void writeBuffer(int):71:71 -> a
    4:4:void write(byte[],int,int):78:78 -> a
    1:4:com.batch.android.msgpack.core.buffer.MessageBuffer next(int):61:64 -> b
    5:5:void add(byte[],int,int):85:85 -> b
    1:1:void close():92:92 -> close
    1:1:void flush():99:99 -> flush
com.batch.android.msgpack.value.ArrayValue -> com.batch.android.p0.c.a:
    com.batch.android.msgpack.value.Value getOrNilValue(int) -> a
    java.util.List list() -> k
com.batch.android.msgpack.value.BinaryValue -> com.batch.android.p0.c.b:
com.batch.android.msgpack.value.BooleanValue -> com.batch.android.p0.c.c:
    boolean getBoolean() -> M
com.batch.android.msgpack.value.ExtensionValue -> com.batch.android.p0.c.d:
    byte[] getData() -> e
    byte getType() -> p
com.batch.android.msgpack.value.FloatValue -> com.batch.android.p0.c.e:
com.batch.android.msgpack.value.ImmutableArrayValue -> com.batch.android.p0.c.f:
    java.util.List list() -> k
com.batch.android.msgpack.value.ImmutableBinaryValue -> com.batch.android.p0.c.g:
com.batch.android.msgpack.value.ImmutableBooleanValue -> com.batch.android.p0.c.h:
com.batch.android.msgpack.value.ImmutableExtensionValue -> com.batch.android.p0.c.i:
com.batch.android.msgpack.value.ImmutableFloatValue -> com.batch.android.p0.c.j:
com.batch.android.msgpack.value.ImmutableIntegerValue -> com.batch.android.p0.c.k:
com.batch.android.msgpack.value.ImmutableMapValue -> com.batch.android.p0.c.l:
com.batch.android.msgpack.value.ImmutableNilValue -> com.batch.android.p0.c.m:
com.batch.android.msgpack.value.ImmutableNumberValue -> com.batch.android.p0.c.n:
com.batch.android.msgpack.value.ImmutableRawValue -> com.batch.android.p0.c.o:
com.batch.android.msgpack.value.ImmutableStringValue -> com.batch.android.p0.c.p:
com.batch.android.msgpack.value.ImmutableValue -> com.batch.android.p0.c.q:
    com.batch.android.msgpack.value.ImmutableArrayValue asArrayValue() -> a
    1:1:com.batch.android.msgpack.value.ArrayValue asArrayValue():21:21 -> a
    com.batch.android.msgpack.value.ImmutableNilValue asNilValue() -> b
    1:1:com.batch.android.msgpack.value.NilValue asNilValue():21:21 -> b
    com.batch.android.msgpack.value.ImmutableIntegerValue asIntegerValue() -> c
    1:1:com.batch.android.msgpack.value.IntegerValue asIntegerValue():21:21 -> c
    com.batch.android.msgpack.value.ImmutableMapValue asMapValue() -> d
    1:1:com.batch.android.msgpack.value.MapValue asMapValue():21:21 -> d
    com.batch.android.msgpack.value.ImmutableBinaryValue asBinaryValue() -> f
    1:1:com.batch.android.msgpack.value.BinaryValue asBinaryValue():21:21 -> f
    com.batch.android.msgpack.value.ImmutableStringValue asStringValue() -> g
    1:1:com.batch.android.msgpack.value.StringValue asStringValue():21:21 -> g
    com.batch.android.msgpack.value.ImmutableRawValue asRawValue() -> h
    1:1:com.batch.android.msgpack.value.RawValue asRawValue():21:21 -> h
    com.batch.android.msgpack.value.ImmutableBooleanValue asBooleanValue() -> i
    1:1:com.batch.android.msgpack.value.BooleanValue asBooleanValue():21:21 -> i
    com.batch.android.msgpack.value.ImmutableFloatValue asFloatValue() -> j
    1:1:com.batch.android.msgpack.value.FloatValue asFloatValue():21:21 -> j
com.batch.android.msgpack.value.IntegerValue -> com.batch.android.p0.c.r:
    java.math.BigInteger asBigInteger() -> B
    long asLong() -> I
    byte asByte() -> J
    boolean isInLongRange() -> K
    boolean isInByteRange() -> U
    int asInt() -> V
    boolean isInIntRange() -> o
    short asShort() -> t
    com.batch.android.msgpack.core.MessageFormat mostSuccinctMessageFormat() -> u
    boolean isInShortRange() -> y
com.batch.android.msgpack.value.MapValue -> com.batch.android.p0.c.s:
    java.util.Map map() -> H
    com.batch.android.msgpack.value.Value[] getKeyValueArray() -> x
com.batch.android.msgpack.value.NilValue -> com.batch.android.p0.c.t:
com.batch.android.msgpack.value.NumberValue -> com.batch.android.p0.c.u:
    java.math.BigInteger toBigInteger() -> F
    int toInt() -> G
    long toLong() -> Y
    float toFloat() -> m
    double toDouble() -> n
    byte toByte() -> r
    short toShort() -> z
com.batch.android.msgpack.value.RawValue -> com.batch.android.p0.c.v:
    java.lang.String asString() -> A
    java.nio.ByteBuffer asByteBuffer() -> D
    byte[] asByteArray() -> P
com.batch.android.msgpack.value.StringValue -> com.batch.android.p0.c.w:
com.batch.android.msgpack.value.Value -> com.batch.android.p0.c.x:
    boolean isBinaryValue() -> C
    boolean isNilValue() -> E
    boolean isNumberValue() -> L
    boolean isArrayValue() -> N
    boolean isRawValue() -> O
    boolean isExtensionValue() -> Q
    com.batch.android.msgpack.value.NumberValue asNumberValue() -> R
    boolean isMapValue() -> S
    boolean isFloatValue() -> T
    boolean isBooleanValue() -> W
    java.lang.String toJson() -> X
    com.batch.android.msgpack.value.ArrayValue asArrayValue() -> a
    void writeTo(com.batch.android.msgpack.core.MessagePacker) -> a
    com.batch.android.msgpack.value.NilValue asNilValue() -> b
    com.batch.android.msgpack.value.IntegerValue asIntegerValue() -> c
    com.batch.android.msgpack.value.MapValue asMapValue() -> d
    com.batch.android.msgpack.value.BinaryValue asBinaryValue() -> f
    com.batch.android.msgpack.value.StringValue asStringValue() -> g
    com.batch.android.msgpack.value.RawValue asRawValue() -> h
    com.batch.android.msgpack.value.BooleanValue asBooleanValue() -> i
    com.batch.android.msgpack.value.FloatValue asFloatValue() -> j
    com.batch.android.msgpack.value.ValueType getValueType() -> l
    com.batch.android.msgpack.value.ExtensionValue asExtensionValue() -> q
    com.batch.android.msgpack.value.ImmutableValue immutableValue() -> s
    boolean isStringValue() -> v
    boolean isIntegerValue() -> w
com.batch.android.msgpack.value.ValueFactory -> com.batch.android.p0.c.y:
    1:1:void <init>():39:39 -> <init>
    1:1:com.batch.android.msgpack.value.ImmutableBooleanValue newBoolean(boolean):49:49 -> a
    2:2:com.batch.android.msgpack.value.ImmutableIntegerValue newInteger(byte):54:54 -> a
    3:3:com.batch.android.msgpack.value.ImmutableIntegerValue newInteger(short):59:59 -> a
    4:4:com.batch.android.msgpack.value.ImmutableIntegerValue newInteger(int):64:64 -> a
    5:5:com.batch.android.msgpack.value.ImmutableIntegerValue newInteger(long):69:69 -> a
    6:6:com.batch.android.msgpack.value.ImmutableIntegerValue newInteger(java.math.BigInteger):74:74 -> a
    7:7:com.batch.android.msgpack.value.ImmutableFloatValue newFloat(float):79:79 -> a
    8:8:com.batch.android.msgpack.value.ImmutableFloatValue newFloat(double):84:84 -> a
    9:9:com.batch.android.msgpack.value.ImmutableBinaryValue newBinary(byte[]):89:89 -> a
    10:12:com.batch.android.msgpack.value.ImmutableBinaryValue newBinary(byte[],boolean):95:97 -> a
    13:13:com.batch.android.msgpack.value.ImmutableBinaryValue newBinary(byte[],int,int):103:103 -> a
    14:17:com.batch.android.msgpack.value.ImmutableBinaryValue newBinary(byte[],int,int,boolean):108:111 -> a
    18:18:com.batch.android.msgpack.value.ImmutableStringValue newString(java.lang.String):117:117 -> a
    19:23:com.batch.android.msgpack.value.ImmutableArrayValue newArray(java.util.List):150:154 -> a
    24:27:com.batch.android.msgpack.value.ImmutableArrayValue newArray(com.batch.android.msgpack.value.Value[]):159:162 -> a
    28:33:com.batch.android.msgpack.value.ImmutableArrayValue newArray(com.batch.android.msgpack.value.Value[],boolean):168:173 -> a
    34:34:com.batch.android.msgpack.value.ImmutableArrayValue emptyArray():179:179 -> a
    35:43:com.batch.android.msgpack.value.ImmutableMapValue newMap(java.util.Map):185:193 -> a
    44:49:com.batch.android.msgpack.value.MapValue newMap(java.util.Map$Entry[]):224:229 -> a
    50:50:java.util.Map$Entry newMapEntry(com.batch.android.msgpack.value.Value,com.batch.android.msgpack.value.Value):239:239 -> a
    51:51:com.batch.android.msgpack.value.ImmutableExtensionValue newExtension(byte,byte[]):286:286 -> a
    1:1:com.batch.android.msgpack.value.ImmutableStringValue newString(byte[]):122:122 -> b
    2:4:com.batch.android.msgpack.value.ImmutableStringValue newString(byte[],boolean):128:130 -> b
    5:5:com.batch.android.msgpack.value.ImmutableStringValue newString(byte[],int,int):136:136 -> b
    6:9:com.batch.android.msgpack.value.ImmutableStringValue newString(byte[],int,int,boolean):141:144 -> b
    10:13:com.batch.android.msgpack.value.ImmutableMapValue newMap(com.batch.android.msgpack.value.Value[]):198:201 -> b
    14:19:com.batch.android.msgpack.value.ImmutableMapValue newMap(com.batch.android.msgpack.value.Value[],boolean):207:212 -> b
    20:20:com.batch.android.msgpack.value.ImmutableMapValue emptyMap():218:218 -> b
    1:1:com.batch.android.msgpack.value.ValueFactory$MapBuilder newMapBuilder():234:234 -> c
    1:1:com.batch.android.msgpack.value.ImmutableNilValue newNil():44:44 -> d
com.batch.android.msgpack.value.ValueFactory$MapBuilder -> com.batch.android.p0.c.y$a:
    java.util.Map map -> a
    1:1:void <init>():247:247 -> <init>
    2:2:void <init>():244:244 -> <init>
    1:1:com.batch.android.msgpack.value.MapValue build():252:252 -> a
    2:2:com.batch.android.msgpack.value.ValueFactory$MapBuilder put(java.util.Map$Entry):257:257 -> a
    3:3:com.batch.android.msgpack.value.ValueFactory$MapBuilder put(com.batch.android.msgpack.value.Value,com.batch.android.msgpack.value.Value):263:263 -> a
    4:5:com.batch.android.msgpack.value.ValueFactory$MapBuilder putAll(java.lang.Iterable):269:270 -> a
    6:7:com.batch.android.msgpack.value.ValueFactory$MapBuilder putAll(java.util.Map):277:278 -> a
com.batch.android.msgpack.value.ValueType -> com.batch.android.p0.c.z:
    com.batch.android.msgpack.value.ValueType NIL -> c
    com.batch.android.msgpack.value.ValueType BOOLEAN -> d
    com.batch.android.msgpack.value.ValueType INTEGER -> e
    com.batch.android.msgpack.value.ValueType FLOAT -> f
    com.batch.android.msgpack.value.ValueType STRING -> g
    com.batch.android.msgpack.value.ValueType BINARY -> h
    com.batch.android.msgpack.value.ValueType ARRAY -> i
    com.batch.android.msgpack.value.ValueType MAP -> j
    com.batch.android.msgpack.value.ValueType EXTENSION -> k
    boolean numberType -> a
    boolean rawType -> b
    com.batch.android.msgpack.value.ValueType[] $VALUES -> l
    1:9:void <clinit>():29:37 -> <clinit>
    10:10:void <clinit>():27:27 -> <clinit>
    1:3:void <init>(java.lang.String,int,boolean,boolean):43:45 -> <init>
    1:1:boolean isArrayType():90:90 -> a
    1:1:boolean isBinaryType():85:85 -> b
    1:1:boolean isBooleanType():55:55 -> c
    1:1:boolean isExtensionType():100:100 -> d
    1:1:boolean isFloatType():70:70 -> e
    1:1:boolean isIntegerType():65:65 -> f
    1:1:boolean isMapType():95:95 -> g
    1:1:boolean isNilType():50:50 -> h
    1:1:boolean isNumberType():60:60 -> i
    1:1:boolean isRawType():75:75 -> j
    1:1:boolean isStringType():80:80 -> k
    1:1:com.batch.android.msgpack.value.ValueType valueOf(java.lang.String):27:27 -> valueOf
    1:1:com.batch.android.msgpack.value.ValueType[] values():27:27 -> values
com.batch.android.msgpack.value.Variable -> com.batch.android.p0.c.a0:
    com.batch.android.msgpack.value.Variable$ArrayValueAccessor arrayAccessor -> g
    long longValue -> k
    com.batch.android.msgpack.value.Variable$BinaryValueAccessor binaryAccessor -> e
    java.math.BigInteger LONG_MAX -> p
    java.math.BigInteger LONG_MIN -> o
    com.batch.android.msgpack.value.Variable$StringValueAccessor stringAccessor -> f
    com.batch.android.msgpack.value.Variable$FloatValueAccessor floatAccessor -> d
    java.lang.Object objectValue -> m
    com.batch.android.msgpack.value.Variable$ExtensionValueAccessor extensionAccessor -> i
    double doubleValue -> l
    com.batch.android.msgpack.value.Variable$AbstractValueAccessor accessor -> n
    com.batch.android.msgpack.value.Variable$NilValueAccessor nilAccessor -> a
    com.batch.android.msgpack.value.Variable$MapValueAccessor mapAccessor -> h
    long INT_MAX -> v
    long INT_MIN -> u
    com.batch.android.msgpack.value.Variable$IntegerValueAccessor integerAccessor -> c
    long BYTE_MAX -> r
    long BYTE_MIN -> q
    long SHORT_MAX -> t
    long SHORT_MIN -> s
    com.batch.android.msgpack.value.Variable$Type type -> j
    com.batch.android.msgpack.value.Variable$BooleanValueAccessor booleanAccessor -> b
    1:2:void <clinit>():346:347 -> <clinit>
    1:1:void <init>():247:247 -> <init>
    2:22:void <init>():228:248 -> <init>
    1:1:boolean isBinaryValue():1102:1102 -> C
    1:1:boolean isNilValue():1066:1066 -> E
    1:1:boolean isNumberValue():1078:1078 -> L
    1:1:boolean isArrayValue():1114:1114 -> N
    1:1:boolean isRawValue():1096:1096 -> O
    1:1:boolean isExtensionValue():1126:1126 -> Q
    1:4:com.batch.android.msgpack.value.NumberValue asNumberValue():1150:1153 -> R
    5:5:com.batch.android.msgpack.value.NumberValue asNumberValue():1151:1151 -> R
    1:1:boolean isMapValue():1120:1120 -> S
    1:1:boolean isFloatValue():1090:1090 -> T
    1:1:boolean isBooleanValue():1072:1072 -> W
    1:1:java.lang.String toJson():1048:1048 -> X
    1:2:com.batch.android.msgpack.value.Variable setNilValue():257:258 -> Z
    1:1:long access$1000(com.batch.android.msgpack.value.Variable):39:39 -> a
    2:4:com.batch.android.msgpack.value.Variable setBooleanValue(boolean):298:300 -> a
    5:7:com.batch.android.msgpack.value.Variable setIntegerValue(long):441:443 -> a
    8:15:com.batch.android.msgpack.value.Variable setIntegerValue(java.math.BigInteger):449:456 -> a
    16:19:com.batch.android.msgpack.value.Variable setFloatValue(double):592:595 -> a
    20:22:com.batch.android.msgpack.value.Variable setFloatValue(float):601:603 -> a
    23:25:com.batch.android.msgpack.value.Variable setBinaryValue(byte[]):701:703 -> a
    26:26:com.batch.android.msgpack.value.Variable setStringValue(java.lang.String):745:745 -> a
    27:29:com.batch.android.msgpack.value.Variable setArrayValue(java.util.List):794:796 -> a
    30:32:com.batch.android.msgpack.value.Variable setMapValue(java.util.Map):875:877 -> a
    33:35:com.batch.android.msgpack.value.Variable setExtensionValue(byte,byte[]):968:970 -> a
    36:36:void writeTo(com.batch.android.msgpack.core.MessagePacker):1030:1030 -> a
    37:40:com.batch.android.msgpack.value.ArrayValue asArrayValue():1204:1207 -> a
    41:41:com.batch.android.msgpack.value.ArrayValue asArrayValue():1205:1205 -> a
    1:1:com.batch.android.msgpack.value.Variable$Type access$1100(com.batch.android.msgpack.value.Variable):39:39 -> b
    2:4:com.batch.android.msgpack.value.Variable setStringValue(byte[]):750:752 -> b
    5:8:com.batch.android.msgpack.value.NilValue asNilValue():1132:1135 -> b
    9:9:com.batch.android.msgpack.value.NilValue asNilValue():1133:1133 -> b
    1:1:java.lang.Object access$1200(com.batch.android.msgpack.value.Variable):39:39 -> c
    2:5:com.batch.android.msgpack.value.IntegerValue asIntegerValue():1159:1162 -> c
    6:6:com.batch.android.msgpack.value.IntegerValue asIntegerValue():1160:1160 -> c
    1:1:double access$1300(com.batch.android.msgpack.value.Variable):39:39 -> d
    2:5:com.batch.android.msgpack.value.MapValue asMapValue():1213:1216 -> d
    6:6:com.batch.android.msgpack.value.MapValue asMapValue():1214:1214 -> d
    1:1:boolean equals(java.lang.Object):1042:1042 -> equals
    1:4:com.batch.android.msgpack.value.BinaryValue asBinaryValue():1186:1189 -> f
    5:5:com.batch.android.msgpack.value.BinaryValue asBinaryValue():1187:1187 -> f
    1:4:com.batch.android.msgpack.value.StringValue asStringValue():1195:1198 -> g
    5:5:com.batch.android.msgpack.value.StringValue asStringValue():1196:1196 -> g
    1:4:com.batch.android.msgpack.value.RawValue asRawValue():1177:1180 -> h
    5:5:com.batch.android.msgpack.value.RawValue asRawValue():1178:1178 -> h
    1:1:int hashCode():1036:1036 -> hashCode
    1:4:com.batch.android.msgpack.value.BooleanValue asBooleanValue():1141:1144 -> i
    5:5:com.batch.android.msgpack.value.BooleanValue asBooleanValue():1142:1142 -> i
    1:4:com.batch.android.msgpack.value.FloatValue asFloatValue():1168:1171 -> j
    5:5:com.batch.android.msgpack.value.FloatValue asFloatValue():1169:1169 -> j
    1:1:com.batch.android.msgpack.value.ValueType getValueType():1060:1060 -> l
    1:4:com.batch.android.msgpack.value.ExtensionValue asExtensionValue():1222:1225 -> q
    5:5:com.batch.android.msgpack.value.ExtensionValue asExtensionValue():1223:1223 -> q
    1:1:com.batch.android.msgpack.value.ImmutableValue immutableValue():1023:1023 -> s
    1:1:java.lang.String toString():1054:1054 -> toString
    1:1:boolean isStringValue():1108:1108 -> v
    1:1:boolean isIntegerValue():1084:1084 -> w
com.batch.android.msgpack.value.Variable$1 -> com.batch.android.p0.c.a0$a:
com.batch.android.msgpack.value.Variable$AbstractNumberValueAccessor -> com.batch.android.p0.c.a0$b:
    com.batch.android.msgpack.value.Variable this$0 -> b
    1:1:void <init>(com.batch.android.msgpack.value.Variable):355:355 -> <init>
    2:2:void <init>(com.batch.android.msgpack.value.Variable,com.batch.android.msgpack.value.Variable$1):355:355 -> <init>
    1:6:java.math.BigInteger toBigInteger():404:409 -> F
    1:4:int toInt():386:389 -> G
    com.batch.android.msgpack.value.NumberValue asNumberValue() -> R
    1:4:long toLong():395:398 -> Y
    1:6:float toFloat():415:420 -> m
    1:6:double toDouble():426:431 -> n
    1:4:byte toByte():368:371 -> r
    1:4:short toShort():377:380 -> z
com.batch.android.msgpack.value.Variable$AbstractRawValueAccessor -> com.batch.android.p0.c.a0$c:
    com.batch.android.msgpack.value.Variable this$0 -> b
    1:1:void <init>(com.batch.android.msgpack.value.Variable):643:643 -> <init>
    2:2:void <init>(com.batch.android.msgpack.value.Variable,com.batch.android.msgpack.value.Variable$1):643:643 -> <init>
    1:8:java.lang.String asString():668:675 -> A
    1:1:java.nio.ByteBuffer asByteBuffer():662:662 -> D
    1:1:byte[] asByteArray():656:656 -> P
    com.batch.android.msgpack.value.RawValue asRawValue() -> h
    1:8:java.lang.String toString():683:690 -> toString
com.batch.android.msgpack.value.Variable$AbstractValueAccessor -> com.batch.android.p0.c.a0$d:
    com.batch.android.msgpack.value.Variable this$0 -> a
    1:1:void <init>(com.batch.android.msgpack.value.Variable):42:42 -> <init>
    2:2:void <init>(com.batch.android.msgpack.value.Variable,com.batch.android.msgpack.value.Variable$1):42:42 -> <init>
    1:1:boolean isBinaryValue():84:84 -> C
    1:1:boolean isNilValue():48:48 -> E
    1:1:boolean isNumberValue():60:60 -> L
    1:1:boolean isArrayValue():96:96 -> N
    1:1:boolean isRawValue():78:78 -> O
    1:1:boolean isExtensionValue():108:108 -> Q
    1:1:com.batch.android.msgpack.value.NumberValue asNumberValue():126:126 -> R
    1:1:boolean isMapValue():102:102 -> S
    1:1:boolean isFloatValue():72:72 -> T
    1:1:boolean isBooleanValue():54:54 -> W
    1:1:java.lang.String toJson():192:192 -> X
    1:1:com.batch.android.msgpack.value.ArrayValue asArrayValue():162:162 -> a
    1:1:com.batch.android.msgpack.value.NilValue asNilValue():114:114 -> b
    1:1:com.batch.android.msgpack.value.IntegerValue asIntegerValue():132:132 -> c
    1:1:com.batch.android.msgpack.value.MapValue asMapValue():168:168 -> d
    1:1:boolean equals(java.lang.Object):180:180 -> equals
    1:1:com.batch.android.msgpack.value.BinaryValue asBinaryValue():150:150 -> f
    1:1:com.batch.android.msgpack.value.StringValue asStringValue():156:156 -> g
    1:1:com.batch.android.msgpack.value.RawValue asRawValue():144:144 -> h
    1:1:int hashCode():186:186 -> hashCode
    1:1:com.batch.android.msgpack.value.BooleanValue asBooleanValue():120:120 -> i
    1:1:com.batch.android.msgpack.value.FloatValue asFloatValue():138:138 -> j
    1:1:com.batch.android.msgpack.value.ExtensionValue asExtensionValue():174:174 -> q
    1:1:java.lang.String toString():198:198 -> toString
    1:1:boolean isStringValue():90:90 -> v
    1:1:boolean isIntegerValue():66:66 -> w
com.batch.android.msgpack.value.Variable$ArrayValueAccessor -> com.batch.android.p0.c.a0$e:
    com.batch.android.msgpack.value.Variable this$0 -> b
    1:1:void <init>(com.batch.android.msgpack.value.Variable):800:800 -> <init>
    2:2:void <init>(com.batch.android.msgpack.value.Variable,com.batch.android.msgpack.value.Variable$1):800:800 -> <init>
    1:1:com.batch.android.msgpack.value.ImmutableArrayValue immutableValue():819:819 -> Z
    com.batch.android.msgpack.value.ArrayValue asArrayValue() -> a
    1:5:com.batch.android.msgpack.value.Value getOrNilValue(int):837:841 -> a
    6:9:void writeTo(com.batch.android.msgpack.core.MessagePacker):861:864 -> a
    1:1:com.batch.android.msgpack.value.Value get(int):831:831 -> get
    1:1:java.util.Iterator iterator():847:847 -> iterator
    1:1:java.util.List list():854:854 -> k
    1:1:com.batch.android.msgpack.value.ValueType getValueType():807:807 -> l
    1:1:com.batch.android.msgpack.value.ImmutableValue immutableValue():800:800 -> s
    1:1:int size():825:825 -> size
com.batch.android.msgpack.value.Variable$BinaryValueAccessor -> com.batch.android.p0.c.a0$f:
    com.batch.android.msgpack.value.Variable this$0 -> c
    1:1:void <init>(com.batch.android.msgpack.value.Variable):707:707 -> <init>
    2:2:void <init>(com.batch.android.msgpack.value.Variable,com.batch.android.msgpack.value.Variable$1):707:707 -> <init>
    1:1:com.batch.android.msgpack.value.ImmutableBinaryValue immutableValue():726:726 -> Z
    1:3:void writeTo(com.batch.android.msgpack.core.MessagePacker):733:735 -> a
    com.batch.android.msgpack.value.BinaryValue asBinaryValue() -> f
    1:1:com.batch.android.msgpack.value.ValueType getValueType():714:714 -> l
    1:1:com.batch.android.msgpack.value.ImmutableValue immutableValue():707:707 -> s
com.batch.android.msgpack.value.Variable$BooleanValueAccessor -> com.batch.android.p0.c.a0$g:
    com.batch.android.msgpack.value.Variable this$0 -> b
    1:1:void <init>(com.batch.android.msgpack.value.Variable):304:304 -> <init>
    2:2:void <init>(com.batch.android.msgpack.value.Variable,com.batch.android.msgpack.value.Variable$1):304:304 -> <init>
    1:1:boolean getBoolean():329:329 -> M
    1:1:com.batch.android.msgpack.value.ImmutableBooleanValue immutableValue():323:323 -> Z
    1:1:void writeTo(com.batch.android.msgpack.core.MessagePacker):336:336 -> a
    com.batch.android.msgpack.value.BooleanValue asBooleanValue() -> i
    1:1:com.batch.android.msgpack.value.ValueType getValueType():311:311 -> l
    1:1:com.batch.android.msgpack.value.ImmutableValue immutableValue():304:304 -> s
com.batch.android.msgpack.value.Variable$ExtensionValueAccessor -> com.batch.android.p0.c.a0$h:
    com.batch.android.msgpack.value.Variable this$0 -> b
    1:1:void <init>(com.batch.android.msgpack.value.Variable):974:974 -> <init>
    2:2:void <init>(com.batch.android.msgpack.value.Variable,com.batch.android.msgpack.value.Variable$1):974:974 -> <init>
    1:1:com.batch.android.msgpack.value.ImmutableExtensionValue immutableValue():993:993 -> Z
    1:1:void writeTo(com.batch.android.msgpack.core.MessagePacker):1012:1012 -> a
    1:1:byte[] getData():1005:1005 -> e
    1:1:com.batch.android.msgpack.value.ValueType getValueType():981:981 -> l
    1:1:byte getType():999:999 -> p
    com.batch.android.msgpack.value.ExtensionValue asExtensionValue() -> q
    1:1:com.batch.android.msgpack.value.ImmutableValue immutableValue():974:974 -> s
com.batch.android.msgpack.value.Variable$FloatValueAccessor -> com.batch.android.p0.c.a0$i:
    com.batch.android.msgpack.value.Variable this$0 -> c
    1:1:void <init>(com.batch.android.msgpack.value.Variable):607:607 -> <init>
    2:2:void <init>(com.batch.android.msgpack.value.Variable,com.batch.android.msgpack.value.Variable$1):607:607 -> <init>
    1:1:com.batch.android.msgpack.value.ImmutableFloatValue immutableValue():620:620 -> Z
    1:1:void writeTo(com.batch.android.msgpack.core.MessagePacker):633:633 -> a
    com.batch.android.msgpack.value.FloatValue asFloatValue() -> j
    1:1:com.batch.android.msgpack.value.ValueType getValueType():626:626 -> l
    1:1:com.batch.android.msgpack.value.ImmutableValue immutableValue():607:607 -> s
com.batch.android.msgpack.value.Variable$IntegerValueAccessor -> com.batch.android.p0.c.a0$j:
    com.batch.android.msgpack.value.Variable this$0 -> c
    1:1:void <init>(com.batch.android.msgpack.value.Variable):461:461 -> <init>
    2:2:void <init>(com.batch.android.msgpack.value.Variable,com.batch.android.msgpack.value.Variable$1):461:461 -> <init>
    1:4:java.math.BigInteger asBigInteger():567:570 -> B
    1:4:long asLong():558:561 -> I
    5:5:long asLong():559:559 -> I
    1:4:byte asByte():531:534 -> J
    5:5:byte asByte():532:532 -> J
    1:1:boolean isInLongRange():516:516 -> K
    1:4:boolean isInByteRange():489:492 -> U
    1:4:int asInt():549:552 -> V
    5:5:int asInt():550:550 -> V
    1:4:com.batch.android.msgpack.value.ImmutableIntegerValue immutableValue():480:483 -> Z
    1:4:void writeTo(com.batch.android.msgpack.core.MessagePacker):578:581 -> a
    com.batch.android.msgpack.value.IntegerValue asIntegerValue() -> c
    1:1:com.batch.android.msgpack.value.ValueType getValueType():468:468 -> l
    1:4:boolean isInIntRange():507:510 -> o
    1:1:com.batch.android.msgpack.value.ImmutableValue immutableValue():461:461 -> s
    1:4:short asShort():540:543 -> t
    5:5:short asShort():541:541 -> t
    1:1:com.batch.android.msgpack.core.MessageFormat mostSuccinctMessageFormat():525:525 -> u
    1:4:boolean isInShortRange():498:501 -> y
com.batch.android.msgpack.value.Variable$MapValueAccessor -> com.batch.android.p0.c.a0$k:
    com.batch.android.msgpack.value.Variable this$0 -> b
    1:1:void <init>(com.batch.android.msgpack.value.Variable):881:881 -> <init>
    2:2:void <init>(com.batch.android.msgpack.value.Variable,com.batch.android.msgpack.value.Variable$1):881:881 -> <init>
    1:1:java.util.Map map():947:947 -> H
    1:1:com.batch.android.msgpack.value.ImmutableMapValue immutableValue():900:900 -> Z
    1:5:void writeTo(com.batch.android.msgpack.core.MessagePacker):954:958 -> a
    com.batch.android.msgpack.value.MapValue asMapValue() -> d
    1:1:java.util.Set entrySet():918:918 -> entrySet
    1:1:java.util.Set keySet():912:912 -> keySet
    1:1:com.batch.android.msgpack.value.ValueType getValueType():888:888 -> l
    1:1:com.batch.android.msgpack.value.ImmutableValue immutableValue():881:881 -> s
    1:1:int size():906:906 -> size
    1:1:java.util.Collection values():924:924 -> values
    1:9:com.batch.android.msgpack.value.Value[] getKeyValueArray():930:938 -> x
com.batch.android.msgpack.value.Variable$NilValueAccessor -> com.batch.android.p0.c.a0$l:
    com.batch.android.msgpack.value.Variable this$0 -> b
    1:1:void <init>(com.batch.android.msgpack.value.Variable):262:262 -> <init>
    2:2:void <init>(com.batch.android.msgpack.value.Variable,com.batch.android.msgpack.value.Variable$1):262:262 -> <init>
    1:1:com.batch.android.msgpack.value.ImmutableNilValue immutableValue():281:281 -> Z
    1:1:void writeTo(com.batch.android.msgpack.core.MessagePacker):288:288 -> a
    com.batch.android.msgpack.value.NilValue asNilValue() -> b
    1:1:com.batch.android.msgpack.value.ValueType getValueType():269:269 -> l
    1:1:com.batch.android.msgpack.value.ImmutableValue immutableValue():262:262 -> s
com.batch.android.msgpack.value.Variable$StringValueAccessor -> com.batch.android.p0.c.a0$m:
    com.batch.android.msgpack.value.Variable this$0 -> c
    1:1:void <init>(com.batch.android.msgpack.value.Variable):756:756 -> <init>
    2:2:void <init>(com.batch.android.msgpack.value.Variable,com.batch.android.msgpack.value.Variable$1):756:756 -> <init>
    1:1:com.batch.android.msgpack.value.ImmutableStringValue immutableValue():775:775 -> Z
    1:3:void writeTo(com.batch.android.msgpack.core.MessagePacker):782:784 -> a
    com.batch.android.msgpack.value.StringValue asStringValue() -> g
    1:1:com.batch.android.msgpack.value.ValueType getValueType():763:763 -> l
    1:1:com.batch.android.msgpack.value.ImmutableValue immutableValue():756:756 -> s
com.batch.android.msgpack.value.Variable$Type -> com.batch.android.p0.c.a0$n:
    com.batch.android.msgpack.value.Variable$Type BIG_INTEGER -> e
    com.batch.android.msgpack.value.Variable$Type LONG -> d
    com.batch.android.msgpack.value.Variable$Type BOOLEAN -> c
    com.batch.android.msgpack.value.Variable$Type NULL -> b
    com.batch.android.msgpack.value.Variable$Type LIST -> i
    com.batch.android.msgpack.value.Variable$Type RAW_STRING -> h
    com.batch.android.msgpack.value.Variable$Type BYTE_ARRAY -> g
    com.batch.android.msgpack.value.Variable$Type DOUBLE -> f
    com.batch.android.msgpack.value.Variable$Type EXTENSION -> k
    com.batch.android.msgpack.value.Variable$Type MAP -> j
    com.batch.android.msgpack.value.Variable$Type[] $VALUES -> l
    com.batch.android.msgpack.value.ValueType valueType -> a
    1:10:void <clinit>():204:213 -> <clinit>
    11:11:void <clinit>():202:202 -> <clinit>
    1:2:void <init>(java.lang.String,int,com.batch.android.msgpack.value.ValueType):218:219 -> <init>
    1:1:com.batch.android.msgpack.value.ValueType getValueType():224:224 -> a
    1:1:com.batch.android.msgpack.value.Variable$Type valueOf(java.lang.String):202:202 -> valueOf
    1:1:com.batch.android.msgpack.value.Variable$Type[] values():202:202 -> values
com.batch.android.msgpack.value.impl.AbstractImmutableRawValue -> com.batch.android.p0.c.b0.a:
    char[] HEX_TABLE -> d
    byte[] data -> a
    java.nio.charset.CharacterCodingException codingException -> c
    java.lang.String decodedStringCache -> b
    1:1:void <clinit>():169:169 -> <clinit>
    1:2:void <init>(byte[]):37:38 -> <init>
    3:5:void <init>(java.lang.String):42:44 -> <init>
    1:7:java.lang.String asString():68:74 -> A
    8:8:java.lang.String asString():72:72 -> A
    1:1:boolean isBinaryValue():28:28 -> C
    1:1:java.nio.ByteBuffer asByteBuffer():62:62 -> D
    1:1:boolean isNilValue():28:28 -> E
    1:1:boolean isNumberValue():28:28 -> L
    1:1:boolean isArrayValue():28:28 -> N
    1:1:boolean isRawValue():28:28 -> O
    1:1:byte[] asByteArray():56:56 -> P
    1:1:boolean isExtensionValue():28:28 -> Q
    1:1:boolean isMapValue():28:28 -> S
    1:1:boolean isFloatValue():28:28 -> T
    1:1:boolean isBooleanValue():28:28 -> W
    1:3:java.lang.String toJson():81:83 -> X
    1:1:com.batch.android.msgpack.value.ImmutableExtensionValue asExtensionValue():28:28 -> Z
    1:1:com.batch.android.msgpack.value.ImmutableArrayValue asArrayValue():28:28 -> a
    2:24:void appendJsonString(java.lang.StringBuilder,java.lang.String):122:144 -> a
    25:31:void appendJsonString(java.lang.StringBuilder,java.lang.String):131:137 -> a
    32:60:void appendJsonString(java.lang.StringBuilder,java.lang.String):128:156 -> a
    61:77:void appendJsonString(java.lang.StringBuilder,java.lang.String):150:166 -> a
    78:82:void escapeChar(java.lang.StringBuilder,int):173:177 -> a
    1:1:com.batch.android.msgpack.value.ImmutableNumberValue asNumberValue():28:28 -> a0
    1:1:com.batch.android.msgpack.value.ImmutableNilValue asNilValue():28:28 -> b
    1:21:void decodeString():88:108 -> b0
    22:26:void decodeString():104:108 -> b0
    1:1:com.batch.android.msgpack.value.ImmutableIntegerValue asIntegerValue():28:28 -> c
    1:1:com.batch.android.msgpack.value.ImmutableMapValue asMapValue():28:28 -> d
    1:1:com.batch.android.msgpack.value.ImmutableBinaryValue asBinaryValue():28:28 -> f
    1:1:com.batch.android.msgpack.value.ImmutableStringValue asStringValue():28:28 -> g
    com.batch.android.msgpack.value.ImmutableRawValue asRawValue() -> h
    1:1:com.batch.android.msgpack.value.RawValue asRawValue():28:28 -> h
    1:1:com.batch.android.msgpack.value.ImmutableBooleanValue asBooleanValue():28:28 -> i
    1:1:com.batch.android.msgpack.value.ImmutableFloatValue asFloatValue():28:28 -> j
    1:4:java.lang.String toString():114:117 -> toString
    1:1:boolean isStringValue():28:28 -> v
    1:1:boolean isIntegerValue():28:28 -> w
com.batch.android.msgpack.value.impl.AbstractImmutableValue -> com.batch.android.p0.c.b0.b:
    1:1:void <init>():32:32 -> <init>
    1:1:boolean isBinaryValue():74:74 -> C
    1:1:boolean isNilValue():38:38 -> E
    1:1:boolean isNumberValue():50:50 -> L
    1:1:boolean isArrayValue():86:86 -> N
    1:1:boolean isRawValue():68:68 -> O
    1:1:boolean isExtensionValue():98:98 -> Q
    1:1:com.batch.android.msgpack.value.NumberValue asNumberValue():32:32 -> R
    1:1:boolean isMapValue():92:92 -> S
    1:1:boolean isFloatValue():62:62 -> T
    1:1:boolean isBooleanValue():44:44 -> W
    1:1:com.batch.android.msgpack.value.ImmutableExtensionValue asExtensionValue():164:164 -> Z
    1:1:com.batch.android.msgpack.value.ArrayValue asArrayValue():32:32 -> a
    2:2:com.batch.android.msgpack.value.ImmutableArrayValue asArrayValue():152:152 -> a
    1:1:com.batch.android.msgpack.value.ImmutableNumberValue asNumberValue():116:116 -> a0
    1:1:com.batch.android.msgpack.value.NilValue asNilValue():32:32 -> b
    2:2:com.batch.android.msgpack.value.ImmutableNilValue asNilValue():104:104 -> b
    1:1:com.batch.android.msgpack.value.IntegerValue asIntegerValue():32:32 -> c
    2:2:com.batch.android.msgpack.value.ImmutableIntegerValue asIntegerValue():122:122 -> c
    1:1:com.batch.android.msgpack.value.MapValue asMapValue():32:32 -> d
    2:2:com.batch.android.msgpack.value.ImmutableMapValue asMapValue():158:158 -> d
    1:1:com.batch.android.msgpack.value.BinaryValue asBinaryValue():32:32 -> f
    2:2:com.batch.android.msgpack.value.ImmutableBinaryValue asBinaryValue():140:140 -> f
    1:1:com.batch.android.msgpack.value.StringValue asStringValue():32:32 -> g
    2:2:com.batch.android.msgpack.value.ImmutableStringValue asStringValue():146:146 -> g
    1:1:com.batch.android.msgpack.value.RawValue asRawValue():32:32 -> h
    2:2:com.batch.android.msgpack.value.ImmutableRawValue asRawValue():134:134 -> h
    1:1:com.batch.android.msgpack.value.BooleanValue asBooleanValue():32:32 -> i
    2:2:com.batch.android.msgpack.value.ImmutableBooleanValue asBooleanValue():110:110 -> i
    1:1:com.batch.android.msgpack.value.FloatValue asFloatValue():32:32 -> j
    2:2:com.batch.android.msgpack.value.ImmutableFloatValue asFloatValue():128:128 -> j
    1:1:com.batch.android.msgpack.value.ExtensionValue asExtensionValue():32:32 -> q
    1:1:boolean isStringValue():80:80 -> v
    1:1:boolean isIntegerValue():56:56 -> w
com.batch.android.msgpack.value.impl.ImmutableArrayValueImpl -> com.batch.android.p0.c.b0.c:
    com.batch.android.msgpack.value.Value[] array -> a
    com.batch.android.msgpack.value.impl.ImmutableArrayValueImpl EMPTY -> b
    1:1:void <clinit>():40:40 -> <clinit>
    1:2:void <init>(com.batch.android.msgpack.value.Value[]):50:51 -> <init>
    1:1:boolean isBinaryValue():36:36 -> C
    1:1:boolean isNilValue():36:36 -> E
    1:1:boolean isNumberValue():36:36 -> L
    1:1:boolean isArrayValue():36:36 -> N
    1:1:boolean isRawValue():36:36 -> O
    1:1:boolean isExtensionValue():36:36 -> Q
    1:1:boolean isMapValue():36:36 -> S
    1:1:boolean isFloatValue():36:36 -> T
    1:1:boolean isBooleanValue():36:36 -> W
    1:12:java.lang.String toJson():163:174 -> X
    1:1:com.batch.android.msgpack.value.ImmutableExtensionValue asExtensionValue():36:36 -> Z
    com.batch.android.msgpack.value.ImmutableArrayValue asArrayValue() -> a
    1:1:com.batch.android.msgpack.value.ArrayValue asArrayValue():36:36 -> a
    2:5:com.batch.android.msgpack.value.Value getOrNilValue(int):87:90 -> a
    6:8:void writeTo(com.batch.android.msgpack.core.MessagePacker):109:111 -> a
    9:12:void appendString(java.lang.StringBuilder,com.batch.android.msgpack.value.Value):196:199 -> a
    1:1:com.batch.android.msgpack.value.ImmutableNumberValue asNumberValue():36:36 -> a0
    1:1:com.batch.android.msgpack.value.ImmutableNilValue asNilValue():36:36 -> b
    1:1:com.batch.android.msgpack.value.ImmutableArrayValue empty():44:44 -> b0
    1:1:com.batch.android.msgpack.value.ImmutableIntegerValue asIntegerValue():36:36 -> c
    com.batch.android.msgpack.value.ImmutableArrayValue immutableValue() -> c0
    1:1:com.batch.android.msgpack.value.ImmutableMapValue asMapValue():36:36 -> d
    1:20:boolean equals(java.lang.Object):121:140 -> equals
    1:1:com.batch.android.msgpack.value.ImmutableBinaryValue asBinaryValue():36:36 -> f
    1:1:com.batch.android.msgpack.value.ImmutableStringValue asStringValue():36:36 -> g
    1:1:com.batch.android.msgpack.value.Value get(int):81:81 -> get
    1:1:com.batch.android.msgpack.value.ImmutableRawValue asRawValue():36:36 -> h
    1:3:int hashCode():153:155 -> hashCode
    1:1:com.batch.android.msgpack.value.ImmutableBooleanValue asBooleanValue():36:36 -> i
    1:1:java.util.Iterator iterator():96:96 -> iterator
    1:1:com.batch.android.msgpack.value.ImmutableFloatValue asFloatValue():36:36 -> j
    1:1:java.util.List list():102:102 -> k
    1:1:com.batch.android.msgpack.value.ValueType getValueType():57:57 -> l
    1:1:com.batch.android.msgpack.value.ImmutableValue immutableValue():36:36 -> s
    1:1:int size():75:75 -> size
    1:12:java.lang.String toString():180:191 -> toString
    1:1:boolean isStringValue():36:36 -> v
    1:1:boolean isIntegerValue():36:36 -> w
com.batch.android.msgpack.value.impl.ImmutableArrayValueImpl$ImmutableArrayValueList -> com.batch.android.p0.c.b0.c$a:
    com.batch.android.msgpack.value.Value[] array -> a
    1:2:void <init>(com.batch.android.msgpack.value.Value[]):209:210 -> <init>
    1:1:java.lang.Object get(int):203:203 -> get
    2:2:com.batch.android.msgpack.value.Value get(int):216:216 -> get
    1:1:int size():222:222 -> size
com.batch.android.msgpack.value.impl.ImmutableArrayValueImpl$Ite -> com.batch.android.p0.c.b0.c$b:
    com.batch.android.msgpack.value.Value[] array -> a
    int index -> b
    1:3:void <init>(com.batch.android.msgpack.value.Value[]):233:235 -> <init>
    1:6:com.batch.android.msgpack.value.Value next():247:252 -> a
    7:7:com.batch.android.msgpack.value.Value next():249:249 -> a
    1:1:boolean hasNext():241:241 -> hasNext
    1:1:java.lang.Object next():226:226 -> next
    1:1:void remove():258:258 -> remove
com.batch.android.msgpack.value.impl.ImmutableBigIntegerValueImpl -> com.batch.android.p0.c.b0.d:
    java.math.BigInteger INT_MIN -> f
    java.math.BigInteger SHORT_MAX -> e
    java.math.BigInteger LONG_MIN -> h
    java.math.BigInteger INT_MAX -> g
    java.math.BigInteger BYTE_MIN -> b
    java.math.BigInteger value -> a
    java.math.BigInteger SHORT_MIN -> d
    java.math.BigInteger BYTE_MAX -> c
    java.math.BigInteger LONG_MAX -> i
    1:8:void <clinit>():61:68 -> <clinit>
    1:2:void <init>(java.math.BigInteger):57:58 -> <init>
    1:1:java.math.BigInteger asBigInteger():205:205 -> B
    1:1:boolean isBinaryValue():35:35 -> C
    1:1:boolean isNilValue():35:35 -> E
    1:1:java.math.BigInteger toBigInteger():121:121 -> F
    1:1:int toInt():109:109 -> G
    1:4:long asLong():196:199 -> I
    5:5:long asLong():197:197 -> I
    1:4:byte asByte():169:172 -> J
    5:5:byte asByte():170:170 -> J
    1:1:boolean isInLongRange():157:157 -> K
    1:1:boolean isNumberValue():35:35 -> L
    1:1:boolean isArrayValue():35:35 -> N
    1:1:boolean isRawValue():35:35 -> O
    1:1:boolean isExtensionValue():35:35 -> Q
    1:1:com.batch.android.msgpack.value.NumberValue asNumberValue():35:35 -> R
    1:1:boolean isMapValue():35:35 -> S
    1:1:boolean isFloatValue():35:35 -> T
    1:1:boolean isInByteRange():139:139 -> U
    1:4:int asInt():187:190 -> V
    5:5:int asInt():188:188 -> V
    1:1:boolean isBooleanValue():35:35 -> W
    1:1:java.lang.String toJson():250:250 -> X
    1:1:long toLong():115:115 -> Y
    1:1:com.batch.android.msgpack.value.ImmutableExtensionValue asExtensionValue():35:35 -> Z
    1:1:com.batch.android.msgpack.value.ImmutableArrayValue asArrayValue():35:35 -> a
    2:11:com.batch.android.msgpack.core.MessageFormat mostSuccinctMessageFormat(com.batch.android.msgpack.value.IntegerValue):41:50 -> a
    12:12:void writeTo(com.batch.android.msgpack.core.MessagePacker):212:212 -> a
    com.batch.android.msgpack.value.ImmutableNumberValue asNumberValue() -> a0
    1:1:com.batch.android.msgpack.value.ImmutableNilValue asNilValue():35:35 -> b
    com.batch.android.msgpack.value.ImmutableIntegerValue immutableValue() -> b0
    com.batch.android.msgpack.value.ImmutableIntegerValue asIntegerValue() -> c
    1:1:com.batch.android.msgpack.value.IntegerValue asIntegerValue():35:35 -> c
    1:1:com.batch.android.msgpack.value.ImmutableMapValue asMapValue():35:35 -> d
    1:10:boolean equals(java.lang.Object):221:230 -> equals
    1:1:com.batch.android.msgpack.value.ImmutableBinaryValue asBinaryValue():35:35 -> f
    1:1:com.batch.android.msgpack.value.ImmutableStringValue asStringValue():35:35 -> g
    1:1:com.batch.android.msgpack.value.ImmutableRawValue asRawValue():35:35 -> h
    1:9:int hashCode():236:244 -> hashCode
    1:1:com.batch.android.msgpack.value.ImmutableBooleanValue asBooleanValue():35:35 -> i
    1:1:com.batch.android.msgpack.value.ImmutableFloatValue asFloatValue():35:35 -> j
    1:1:com.batch.android.msgpack.value.ValueType getValueType():73:73 -> l
    1:1:float toFloat():127:127 -> m
    1:1:double toDouble():133:133 -> n
    1:1:boolean isInIntRange():151:151 -> o
    1:1:byte toByte():97:97 -> r
    1:1:com.batch.android.msgpack.value.ImmutableValue immutableValue():35:35 -> s
    1:4:short asShort():178:181 -> t
    5:5:short asShort():179:179 -> t
    1:1:java.lang.String toString():256:256 -> toString
    1:1:com.batch.android.msgpack.core.MessageFormat mostSuccinctMessageFormat():163:163 -> u
    1:1:boolean isStringValue():35:35 -> v
    1:1:boolean isIntegerValue():35:35 -> w
    1:1:boolean isInShortRange():145:145 -> y
    1:1:short toShort():103:103 -> z
com.batch.android.msgpack.value.impl.ImmutableBinaryValueImpl -> com.batch.android.p0.c.b0.e:
    1:1:void <init>(byte[]):38:38 -> <init>
    1:2:void writeTo(com.batch.android.msgpack.core.MessagePacker):63:64 -> a
    com.batch.android.msgpack.value.ImmutableBinaryValue immutableValue() -> c0
    1:13:boolean equals(java.lang.Object):73:85 -> equals
    com.batch.android.msgpack.value.ImmutableBinaryValue asBinaryValue() -> f
    1:1:com.batch.android.msgpack.value.BinaryValue asBinaryValue():32:32 -> f
    1:1:int hashCode():92:92 -> hashCode
    1:1:com.batch.android.msgpack.value.ValueType getValueType():44:44 -> l
    1:1:com.batch.android.msgpack.value.ImmutableValue immutableValue():32:32 -> s
com.batch.android.msgpack.value.impl.ImmutableBooleanValueImpl -> com.batch.android.p0.c.b0.f:
    com.batch.android.msgpack.value.ImmutableBooleanValue FALSE -> c
    boolean value -> a
    com.batch.android.msgpack.value.ImmutableBooleanValue TRUE -> b
    1:2:void <clinit>():36:37 -> <clinit>
    1:2:void <init>(boolean):42:43 -> <init>
    1:1:boolean isBinaryValue():32:32 -> C
    1:1:boolean isNilValue():32:32 -> E
    1:1:boolean isNumberValue():32:32 -> L
    1:1:boolean getBoolean():67:67 -> M
    1:1:boolean isArrayValue():32:32 -> N
    1:1:boolean isRawValue():32:32 -> O
    1:1:boolean isExtensionValue():32:32 -> Q
    1:1:boolean isMapValue():32:32 -> S
    1:1:boolean isFloatValue():32:32 -> T
    1:1:boolean isBooleanValue():32:32 -> W
    1:1:java.lang.String toJson():107:107 -> X
    1:1:com.batch.android.msgpack.value.ImmutableExtensionValue asExtensionValue():32:32 -> Z
    1:1:com.batch.android.msgpack.value.ImmutableArrayValue asArrayValue():32:32 -> a
    2:2:void writeTo(com.batch.android.msgpack.core.MessagePacker):74:74 -> a
    1:1:com.batch.android.msgpack.value.ImmutableNumberValue asNumberValue():32:32 -> a0
    1:1:com.batch.android.msgpack.value.ImmutableNilValue asNilValue():32:32 -> b
    com.batch.android.msgpack.value.ImmutableBooleanValue immutableValue() -> b0
    1:1:com.batch.android.msgpack.value.ImmutableIntegerValue asIntegerValue():32:32 -> c
    1:1:com.batch.android.msgpack.value.ImmutableMapValue asMapValue():32:32 -> d
    1:9:boolean equals(java.lang.Object):83:91 -> equals
    1:1:com.batch.android.msgpack.value.ImmutableBinaryValue asBinaryValue():32:32 -> f
    1:1:com.batch.android.msgpack.value.ImmutableStringValue asStringValue():32:32 -> g
    1:1:com.batch.android.msgpack.value.ImmutableRawValue asRawValue():32:32 -> h
    1:1:int hashCode():97:97 -> hashCode
    com.batch.android.msgpack.value.ImmutableBooleanValue asBooleanValue() -> i
    1:1:com.batch.android.msgpack.value.BooleanValue asBooleanValue():32:32 -> i
    1:1:com.batch.android.msgpack.value.ImmutableFloatValue asFloatValue():32:32 -> j
    1:1:com.batch.android.msgpack.value.ValueType getValueType():49:49 -> l
    1:1:com.batch.android.msgpack.value.ImmutableValue immutableValue():32:32 -> s
    1:1:java.lang.String toString():113:113 -> toString
    1:1:boolean isStringValue():32:32 -> v
    1:1:boolean isIntegerValue():32:32 -> w
com.batch.android.msgpack.value.impl.ImmutableDoubleValueImpl -> com.batch.android.p0.c.b0.g:
    double value -> a
    1:2:void <init>(double):40:41 -> <init>
    1:1:boolean isBinaryValue():33:33 -> C
    1:1:boolean isNilValue():33:33 -> E
    1:1:java.math.BigInteger toBigInteger():95:95 -> F
    1:1:int toInt():83:83 -> G
    1:1:boolean isNumberValue():33:33 -> L
    1:1:boolean isArrayValue():33:33 -> N
    1:1:boolean isRawValue():33:33 -> O
    1:1:boolean isExtensionValue():33:33 -> Q
    1:1:com.batch.android.msgpack.value.NumberValue asNumberValue():33:33 -> R
    1:1:boolean isMapValue():33:33 -> S
    1:1:boolean isFloatValue():33:33 -> T
    1:1:boolean isBooleanValue():33:33 -> W
    1:4:java.lang.String toJson():144:147 -> X
    1:1:long toLong():89:89 -> Y
    1:1:com.batch.android.msgpack.value.ImmutableExtensionValue asExtensionValue():33:33 -> Z
    1:1:com.batch.android.msgpack.value.ImmutableArrayValue asArrayValue():33:33 -> a
    2:2:void writeTo(com.batch.android.msgpack.core.MessagePacker):114:114 -> a
    com.batch.android.msgpack.value.ImmutableNumberValue asNumberValue() -> a0
    1:1:com.batch.android.msgpack.value.ImmutableNilValue asNilValue():33:33 -> b
    com.batch.android.msgpack.value.impl.ImmutableDoubleValueImpl immutableValue() -> b0
    1:1:com.batch.android.msgpack.value.ImmutableIntegerValue asIntegerValue():33:33 -> c
    1:1:com.batch.android.msgpack.value.ImmutableMapValue asMapValue():33:33 -> d
    1:9:boolean equals(java.lang.Object):123:131 -> equals
    1:1:com.batch.android.msgpack.value.ImmutableBinaryValue asBinaryValue():33:33 -> f
    1:1:com.batch.android.msgpack.value.ImmutableStringValue asStringValue():33:33 -> g
    1:1:com.batch.android.msgpack.value.ImmutableRawValue asRawValue():33:33 -> h
    1:1:int hashCode():137:137 -> hashCode
    1:1:com.batch.android.msgpack.value.ImmutableBooleanValue asBooleanValue():33:33 -> i
    com.batch.android.msgpack.value.ImmutableFloatValue asFloatValue() -> j
    1:1:com.batch.android.msgpack.value.FloatValue asFloatValue():33:33 -> j
    1:1:com.batch.android.msgpack.value.ValueType getValueType():47:47 -> l
    1:1:float toFloat():101:101 -> m
    1:1:double toDouble():107:107 -> n
    1:1:byte toByte():71:71 -> r
    1:1:com.batch.android.msgpack.value.ImmutableValue immutableValue():33:33 -> s
    1:1:java.lang.String toString():154:154 -> toString
    1:1:boolean isStringValue():33:33 -> v
    1:1:boolean isIntegerValue():33:33 -> w
    1:1:short toShort():77:77 -> z
com.batch.android.msgpack.value.impl.ImmutableExtensionValueImpl -> com.batch.android.p0.c.b0.h:
    byte[] data -> b
    byte type -> a
    1:3:void <init>(byte,byte[]):40:42 -> <init>
    1:1:boolean isBinaryValue():32:32 -> C
    1:1:boolean isNilValue():32:32 -> E
    1:1:boolean isNumberValue():32:32 -> L
    1:1:boolean isArrayValue():32:32 -> N
    1:1:boolean isRawValue():32:32 -> O
    1:1:boolean isExtensionValue():32:32 -> Q
    1:1:boolean isMapValue():32:32 -> S
    1:1:boolean isFloatValue():32:32 -> T
    1:1:boolean isBooleanValue():32:32 -> W
    1:9:java.lang.String toJson():114:122 -> X
    com.batch.android.msgpack.value.ImmutableExtensionValue asExtensionValue() -> Z
    1:1:com.batch.android.msgpack.value.ImmutableArrayValue asArrayValue():32:32 -> a
    2:3:void writeTo(com.batch.android.msgpack.core.MessagePacker):79:80 -> a
    1:1:com.batch.android.msgpack.value.ImmutableNumberValue asNumberValue():32:32 -> a0
    1:1:com.batch.android.msgpack.value.ImmutableNilValue asNilValue():32:32 -> b
    com.batch.android.msgpack.value.ImmutableExtensionValue immutableValue() -> b0
    1:1:com.batch.android.msgpack.value.ImmutableIntegerValue asIntegerValue():32:32 -> c
    1:1:com.batch.android.msgpack.value.ImmutableMapValue asMapValue():32:32 -> d
    1:1:byte[] getData():72:72 -> e
    1:10:boolean equals(java.lang.Object):89:98 -> equals
    1:1:com.batch.android.msgpack.value.ImmutableBinaryValue asBinaryValue():32:32 -> f
    1:1:com.batch.android.msgpack.value.ImmutableStringValue asStringValue():32:32 -> g
    1:1:com.batch.android.msgpack.value.ImmutableRawValue asRawValue():32:32 -> h
    1:2:int hashCode():104:105 -> hashCode
    1:1:com.batch.android.msgpack.value.ImmutableBooleanValue asBooleanValue():32:32 -> i
    1:1:com.batch.android.msgpack.value.ImmutableFloatValue asFloatValue():32:32 -> j
    1:1:com.batch.android.msgpack.value.ValueType getValueType():48:48 -> l
    1:1:byte getType():66:66 -> p
    1:1:com.batch.android.msgpack.value.ExtensionValue asExtensionValue():32:32 -> q
    1:1:com.batch.android.msgpack.value.ImmutableValue immutableValue():32:32 -> s
    1:9:java.lang.String toString():128:136 -> toString
    1:1:boolean isStringValue():32:32 -> v
    1:1:boolean isIntegerValue():32:32 -> w
com.batch.android.msgpack.value.impl.ImmutableLongValueImpl -> com.batch.android.p0.c.b0.i:
    long INT_MIN -> f
    long SHORT_MAX -> e
    long INT_MAX -> g
    long BYTE_MIN -> b
    long value -> a
    long SHORT_MIN -> d
    long BYTE_MAX -> c
    1:2:void <init>(long):42:43 -> <init>
    1:1:java.math.BigInteger asBigInteger():185:185 -> B
    1:1:boolean isBinaryValue():35:35 -> C
    1:1:boolean isNilValue():35:35 -> E
    1:1:java.math.BigInteger toBigInteger():104:104 -> F
    1:1:int toInt():92:92 -> G
    1:1:long asLong():179:179 -> I
    1:4:byte asByte():152:155 -> J
    5:5:byte asByte():153:153 -> J
    boolean isInLongRange() -> K
    1:1:boolean isNumberValue():35:35 -> L
    1:1:boolean isArrayValue():35:35 -> N
    1:1:boolean isRawValue():35:35 -> O
    1:1:boolean isExtensionValue():35:35 -> Q
    1:1:com.batch.android.msgpack.value.NumberValue asNumberValue():35:35 -> R
    1:1:boolean isMapValue():35:35 -> S
    1:1:boolean isFloatValue():35:35 -> T
    1:1:boolean isInByteRange():122:122 -> U
    1:4:int asInt():170:173 -> V
    5:5:int asInt():171:171 -> V
    1:1:boolean isBooleanValue():35:35 -> W
    1:1:java.lang.String toJson():229:229 -> X
    1:1:long toLong():98:98 -> Y
    1:1:com.batch.android.msgpack.value.ImmutableExtensionValue asExtensionValue():35:35 -> Z
    1:1:com.batch.android.msgpack.value.ImmutableArrayValue asArrayValue():35:35 -> a
    2:2:void writeTo(com.batch.android.msgpack.core.MessagePacker):192:192 -> a
    com.batch.android.msgpack.value.ImmutableNumberValue asNumberValue() -> a0
    1:1:com.batch.android.msgpack.value.ImmutableNilValue asNilValue():35:35 -> b
    com.batch.android.msgpack.value.ImmutableIntegerValue immutableValue() -> b0
    com.batch.android.msgpack.value.ImmutableIntegerValue asIntegerValue() -> c
    1:1:com.batch.android.msgpack.value.IntegerValue asIntegerValue():35:35 -> c
    1:1:com.batch.android.msgpack.value.ImmutableMapValue asMapValue():35:35 -> d
    1:13:boolean equals(java.lang.Object):201:213 -> equals
    1:1:com.batch.android.msgpack.value.ImmutableBinaryValue asBinaryValue():35:35 -> f
    1:1:com.batch.android.msgpack.value.ImmutableStringValue asStringValue():35:35 -> g
    1:1:com.batch.android.msgpack.value.ImmutableRawValue asRawValue():35:35 -> h
    1:1:int hashCode():219:219 -> hashCode
    1:1:com.batch.android.msgpack.value.ImmutableBooleanValue asBooleanValue():35:35 -> i
    1:1:com.batch.android.msgpack.value.ImmutableFloatValue asFloatValue():35:35 -> j
    1:1:com.batch.android.msgpack.value.ValueType getValueType():56:56 -> l
    1:1:float toFloat():110:110 -> m
    1:1:double toDouble():116:116 -> n
    1:1:boolean isInIntRange():134:134 -> o
    1:1:byte toByte():80:80 -> r
    1:1:com.batch.android.msgpack.value.ImmutableValue immutableValue():35:35 -> s
    1:4:short asShort():161:164 -> t
    5:5:short asShort():162:162 -> t
    1:1:java.lang.String toString():235:235 -> toString
    1:1:com.batch.android.msgpack.core.MessageFormat mostSuccinctMessageFormat():146:146 -> u
    1:1:boolean isStringValue():35:35 -> v
    1:1:boolean isIntegerValue():35:35 -> w
    1:1:boolean isInShortRange():128:128 -> y
    1:1:short toShort():86:86 -> z
com.batch.android.msgpack.value.impl.ImmutableMapValueImpl -> com.batch.android.p0.c.b0.j:
    com.batch.android.msgpack.value.Value[] kvs -> a
    com.batch.android.msgpack.value.impl.ImmutableMapValueImpl EMPTY -> b
    1:1:void <clinit>():44:44 -> <clinit>
    1:2:void <init>(com.batch.android.msgpack.value.Value[]):54:55 -> <init>
    1:1:boolean isBinaryValue():40:40 -> C
    1:1:boolean isNilValue():40:40 -> E
    1:1:java.util.Map map():109:109 -> H
    1:1:boolean isNumberValue():40:40 -> L
    1:1:boolean isArrayValue():40:40 -> N
    1:1:boolean isRawValue():40:40 -> O
    1:1:boolean isExtensionValue():40:40 -> Q
    1:1:boolean isMapValue():40:40 -> S
    1:1:boolean isFloatValue():40:40 -> T
    1:1:boolean isBooleanValue():40:40 -> W
    1:16:java.lang.String toJson():153:168 -> X
    1:1:com.batch.android.msgpack.value.ImmutableExtensionValue asExtensionValue():40:40 -> Z
    1:1:com.batch.android.msgpack.value.ImmutableArrayValue asArrayValue():40:40 -> a
    2:4:void writeTo(com.batch.android.msgpack.core.MessagePacker):116:118 -> a
    5:8:void appendJsonKey(java.lang.StringBuilder,com.batch.android.msgpack.value.Value):173:176 -> a
    1:1:com.batch.android.msgpack.value.ImmutableNumberValue asNumberValue():40:40 -> a0
    1:1:com.batch.android.msgpack.value.ImmutableNilValue asNilValue():40:40 -> b
    2:5:void appendString(java.lang.StringBuilder,com.batch.android.msgpack.value.Value):203:206 -> b
    1:1:com.batch.android.msgpack.value.ImmutableMapValue empty():48:48 -> b0
    1:1:com.batch.android.msgpack.value.ImmutableIntegerValue asIntegerValue():40:40 -> c
    com.batch.android.msgpack.value.ImmutableMapValue immutableValue() -> c0
    com.batch.android.msgpack.value.ImmutableMapValue asMapValue() -> d
    1:1:com.batch.android.msgpack.value.MapValue asMapValue():40:40 -> d
    1:1:java.util.Set entrySet():97:97 -> entrySet
    1:10:boolean equals(java.lang.Object):128:137 -> equals
    1:1:com.batch.android.msgpack.value.ImmutableBinaryValue asBinaryValue():40:40 -> f
    1:1:com.batch.android.msgpack.value.ImmutableStringValue asStringValue():40:40 -> g
    1:1:com.batch.android.msgpack.value.ImmutableRawValue asRawValue():40:40 -> h
    1:2:int hashCode():144:145 -> hashCode
    1:1:com.batch.android.msgpack.value.ImmutableBooleanValue asBooleanValue():40:40 -> i
    1:1:com.batch.android.msgpack.value.ImmutableFloatValue asFloatValue():40:40 -> j
    1:1:java.util.Set keySet():91:91 -> keySet
    1:1:com.batch.android.msgpack.value.ValueType getValueType():61:61 -> l
    1:1:com.batch.android.msgpack.value.ImmutableValue immutableValue():40:40 -> s
    1:1:int size():85:85 -> size
    1:16:java.lang.String toString():183:198 -> toString
    1:1:boolean isStringValue():40:40 -> v
    1:1:java.util.Collection values():103:103 -> values
    1:1:boolean isIntegerValue():40:40 -> w
    1:1:com.batch.android.msgpack.value.Value[] getKeyValueArray():79:79 -> x
com.batch.android.msgpack.value.impl.ImmutableMapValueImpl$EntryIterator -> com.batch.android.p0.c.b0.j$a:
    com.batch.android.msgpack.value.Value[] kvs -> a
    int index -> b
    1:3:void <init>(com.batch.android.msgpack.value.Value[],int):344:346 -> <init>
    1:6:com.batch.android.msgpack.value.Value next():358:363 -> a
    7:7:com.batch.android.msgpack.value.Value next():360:360 -> a
    1:1:boolean hasNext():352:352 -> hasNext
    1:1:java.lang.Object next():337:337 -> next
    1:1:void remove():369:369 -> remove
com.batch.android.msgpack.value.impl.ImmutableMapValueImpl$EntrySet -> com.batch.android.p0.c.b0.j$b:
    com.batch.android.msgpack.value.Value[] kvs -> a
    1:2:void <init>(com.batch.android.msgpack.value.Value[]):233:234 -> <init>
    1:1:java.util.Iterator iterator():246:246 -> iterator
    1:1:int size():240:240 -> size
com.batch.android.msgpack.value.impl.ImmutableMapValueImpl$EntrySetIterator -> com.batch.android.p0.c.b0.j$c:
    com.batch.android.msgpack.value.Value[] kvs -> a
    int index -> b
    1:3:void <init>(com.batch.android.msgpack.value.Value[]):257:259 -> <init>
    1:10:java.util.Map$Entry next():271:280 -> a
    11:11:java.util.Map$Entry next():272:272 -> a
    1:1:boolean hasNext():265:265 -> hasNext
    1:1:java.lang.Object next():250:250 -> next
    1:1:void remove():287:287 -> remove
com.batch.android.msgpack.value.impl.ImmutableMapValueImpl$ImmutableMapValueMap -> com.batch.android.p0.c.b0.j$d:
    com.batch.android.msgpack.value.Value[] kvs -> a
    1:2:void <init>(com.batch.android.msgpack.value.Value[]):216:217 -> <init>
    1:1:java.util.Set entrySet():223:223 -> entrySet
com.batch.android.msgpack.value.impl.ImmutableMapValueImpl$KeySet -> com.batch.android.p0.c.b0.j$e:
    com.batch.android.msgpack.value.Value[] kvs -> a
    1:2:void <init>(com.batch.android.msgpack.value.Value[]):297:298 -> <init>
    1:1:java.util.Iterator iterator():310:310 -> iterator
    1:1:int size():304:304 -> size
com.batch.android.msgpack.value.impl.ImmutableMapValueImpl$ValueCollection -> com.batch.android.p0.c.b0.j$f:
    com.batch.android.msgpack.value.Value[] kvs -> a
    1:2:void <init>(com.batch.android.msgpack.value.Value[]):320:321 -> <init>
    1:1:java.util.Iterator iterator():333:333 -> iterator
    1:1:int size():327:327 -> size
com.batch.android.msgpack.value.impl.ImmutableNilValueImpl -> com.batch.android.p0.c.b0.k:
    com.batch.android.msgpack.value.ImmutableNilValue instance -> a
    1:1:void <clinit>():36:36 -> <clinit>
    1:1:void <init>():44:44 -> <init>
    1:1:boolean isBinaryValue():32:32 -> C
    1:1:boolean isNilValue():32:32 -> E
    1:1:boolean isNumberValue():32:32 -> L
    1:1:boolean isArrayValue():32:32 -> N
    1:1:boolean isRawValue():32:32 -> O
    1:1:boolean isExtensionValue():32:32 -> Q
    1:1:boolean isMapValue():32:32 -> S
    1:1:boolean isFloatValue():32:32 -> T
    1:1:boolean isBooleanValue():32:32 -> W
    java.lang.String toJson() -> X
    1:1:com.batch.android.msgpack.value.ImmutableExtensionValue asExtensionValue():32:32 -> Z
    1:1:com.batch.android.msgpack.value.ImmutableArrayValue asArrayValue():32:32 -> a
    2:2:void writeTo(com.batch.android.msgpack.core.MessagePacker):69:69 -> a
    1:1:com.batch.android.msgpack.value.ImmutableNumberValue asNumberValue():32:32 -> a0
    com.batch.android.msgpack.value.ImmutableNilValue asNilValue() -> b
    1:1:com.batch.android.msgpack.value.NilValue asNilValue():32:32 -> b
    1:1:com.batch.android.msgpack.value.ImmutableNilValue get():40:40 -> b0
    1:1:com.batch.android.msgpack.value.ImmutableIntegerValue asIntegerValue():32:32 -> c
    com.batch.android.msgpack.value.ImmutableNilValue immutableValue() -> c0
    1:1:com.batch.android.msgpack.value.ImmutableMapValue asMapValue():32:32 -> d
    1:4:boolean equals(java.lang.Object):78:81 -> equals
    1:1:com.batch.android.msgpack.value.ImmutableBinaryValue asBinaryValue():32:32 -> f
    1:1:com.batch.android.msgpack.value.ImmutableStringValue asStringValue():32:32 -> g
    1:1:com.batch.android.msgpack.value.ImmutableRawValue asRawValue():32:32 -> h
    1:1:com.batch.android.msgpack.value.ImmutableBooleanValue asBooleanValue():32:32 -> i
    1:1:com.batch.android.msgpack.value.ImmutableFloatValue asFloatValue():32:32 -> j
    1:1:com.batch.android.msgpack.value.ValueType getValueType():50:50 -> l
    1:1:com.batch.android.msgpack.value.ImmutableValue immutableValue():32:32 -> s
    1:1:java.lang.String toString():93:93 -> toString
    1:1:boolean isStringValue():32:32 -> v
    1:1:boolean isIntegerValue():32:32 -> w
com.batch.android.msgpack.value.impl.ImmutableStringValueImpl -> com.batch.android.p0.c.b0.l:
    1:1:void <init>(byte[]):38:38 -> <init>
    2:2:void <init>(java.lang.String):43:43 -> <init>
    1:2:void writeTo(com.batch.android.msgpack.core.MessagePacker):68:69 -> a
    com.batch.android.msgpack.value.ImmutableStringValue immutableValue() -> c0
    1:13:boolean equals(java.lang.Object):78:90 -> equals
    com.batch.android.msgpack.value.ImmutableStringValue asStringValue() -> g
    1:1:com.batch.android.msgpack.value.StringValue asStringValue():32:32 -> g
    1:1:int hashCode():97:97 -> hashCode
    1:1:com.batch.android.msgpack.value.ValueType getValueType():49:49 -> l
    1:1:com.batch.android.msgpack.value.ImmutableValue immutableValue():32:32 -> s
com.batch.android.post.DisplayReceiptPostDataProvider -> com.batch.android.q0.a:
    java.util.Collection receipts -> a
    java.lang.String TAG -> b
    1:2:void <init>(java.util.Collection):16:17 -> <init>
    java.lang.String getContentType() -> a
    1:1:java.lang.Object getRawData():10:10 -> b
    1:1:java.util.Collection getRawData():23:23 -> c
    1:1:boolean isEmpty():55:55 -> d
    1:9:byte[] getData():41:49 -> e
    10:10:byte[] getData():42:42 -> e
    1:8:byte[] pack():28:35 -> f
com.batch.android.post.InboxSyncPostDataProvider -> com.batch.android.q0.b:
    com.batch.android.json.JSONObject body -> a
    java.lang.String TAG -> b
    1:15:void <init>(java.util.Collection):18:32 -> <init>
    java.lang.String getContentType() -> a
    1:1:java.lang.Object getRawData():12:12 -> b
    1:1:com.batch.android.json.JSONObject getRawData():39:39 -> c
    1:1:boolean isEmpty():50:50 -> d
    1:1:byte[] getData():45:45 -> e
com.batch.android.post.JSONPostDataProvider -> com.batch.android.q0.c:
    com.batch.android.json.JSONObject data -> a
    1:1:void <init>():25:25 -> <init>
    2:7:void <init>(com.batch.android.json.JSONObject):34:39 -> <init>
    8:8:void <init>(com.batch.android.json.JSONObject):36:36 -> <init>
    java.lang.String getContentType() -> a
    1:1:java.lang.Object getRawData():11:11 -> b
    1:1:com.batch.android.json.JSONObject getRawData():59:59 -> c
    1:1:byte[] getData():47:47 -> e
com.batch.android.post.ParametersPostDataProvider -> com.batch.android.q0.d:
    java.util.Map params -> a
    1:1:void <init>():28:28 -> <init>
    2:2:void <init>(java.util.Map):37:37 -> <init>
    3:26:void <init>(java.util.Map):19:42 -> <init>
    27:27:void <init>(java.util.Map):39:39 -> <init>
    java.lang.String getContentType() -> a
    1:1:java.lang.Object getRawData():14:14 -> b
    1:1:java.util.Map getRawData():50:50 -> c
    1:19:byte[] getData():59:77 -> e
com.batch.android.post.PostDataProvider -> com.batch.android.q0.e:
    java.lang.String getContentType() -> a
    java.lang.Object getRawData() -> b
    byte[] getData() -> e
com.batch.android.push.FCMRegistrationProvider -> com.batch.android.push.a:
    com.batch.android.adsidentifier.GCMAdsIdentifierProvider adsIdentifierProvider -> a
    java.lang.String MANIFEST_SENDER_ID_KEY -> c
    java.lang.String senderID -> b
    1:3:void <init>(android.content.Context):29:31 -> <init>
    1:45:java.lang.String fetchSenderID(android.content.Context):38:82 -> a
    46:47:boolean isFirebaseCorePresent():157:158 -> a
    1:1:boolean isFirebaseMessagingPresent():168:168 -> b
    1:14:void checkLibraryAvailability():106:119 -> checkLibraryAvailability
    15:15:void checkLibraryAvailability():114:114 -> checkLibraryAvailability
    16:16:void checkLibraryAvailability():109:109 -> checkLibraryAvailability
    1:1:com.batch.android.AdsIdentifierProvider getAdsIdentifierProvider():151:151 -> getAdsIdentifierProvider
    1:14:java.lang.String getRegistration():130:143 -> getRegistration
    1:1:java.lang.String getSenderID():88:88 -> getSenderID
com.batch.android.push.GCMAbstractRegistrationProvider -> com.batch.android.push.b:
    com.batch.android.adsidentifier.GCMAdsIdentifierProvider adsIdentifierProvider -> a
    android.content.Context context -> b
    java.lang.String senderID -> c
    java.lang.String TAG -> d
    1:4:void <init>(android.content.Context,java.lang.String):25:28 -> <init>
    java.lang.Integer getGMSAvailability() -> a
    1:4:boolean isC2DMessagePermissionAvailable():107:110 -> b
    1:4:boolean isReceivePermissionAvailable():94:97 -> c
    1:33:void checkLibraryAvailability():46:78 -> checkLibraryAvailability
    34:34:void checkLibraryAvailability():73:73 -> checkLibraryAvailability
    35:35:void checkLibraryAvailability():68:68 -> checkLibraryAvailability
    36:38:void checkLibraryAvailability():59:61 -> checkLibraryAvailability
    39:39:void checkLibraryAvailability():54:54 -> checkLibraryAvailability
    40:40:void checkLibraryAvailability():47:47 -> checkLibraryAvailability
    1:4:boolean isWakeLockPermissionAvailable():118:121 -> d
    1:1:com.batch.android.AdsIdentifierProvider getAdsIdentifierProvider():86:86 -> getAdsIdentifierProvider
    1:1:java.lang.String getSenderID():34:34 -> getSenderID
com.batch.android.push.GCMIidRegistrationProvider -> com.batch.android.push.c:
    1:1:void <init>(android.content.Context,java.lang.String):18:18 -> <init>
    1:1:java.lang.Integer getGMSAvailability():30:30 -> a
    1:11:void checkLibraryAvailability():38:48 -> checkLibraryAvailability
    12:15:void checkLibraryAvailability():41:44 -> checkLibraryAvailability
    1:1:java.lang.String getRegistration():55:55 -> getRegistration
com.batch.android.push.GCMLegacyRegistrationProvider -> com.batch.android.push.d:
    1:1:void <init>(android.content.Context,java.lang.String):18:18 -> <init>
    1:1:java.lang.Integer getGMSAvailability():29:29 -> a
    1:4:java.lang.String getRegistration():36:39 -> getRegistration
com.batch.android.push.PushRegistrationDiscoveryService -> com.batch.android.push.PushRegistrationDiscoveryService:
    1:1:void <init>():12:12 -> <init>
com.batch.android.push.PushRegistrationProviderFactory -> com.batch.android.push.e:
    android.content.Context context -> a
    java.lang.String COMPONENT_KEY_PREFIX -> f
    java.lang.String gcmSenderID -> c
    boolean shouldUseGoogleInstanceID -> b
    java.lang.String COMPONENT_SENTINEL_VALUE -> e
    java.lang.String TAG -> d
    1:4:void <init>(android.content.Context,boolean,java.lang.String):44:47 -> <init>
    1:24:com.batch.android.PushRegistrationProvider getExternalPushRegistrationProvider():206:229 -> a
    25:33:com.batch.android.PushRegistrationProvider getExternalPushRegistrationProvider():228:236 -> a
    34:39:com.batch.android.PushRegistrationProvider getExternalPushRegistrationProvider():235:240 -> a
    40:44:com.batch.android.PushRegistrationProvider getExternalPushRegistrationProvider():239:243 -> a
    45:45:boolean isExternalProviderAllowed(java.lang.String):252:252 -> a
    1:62:com.batch.android.PushRegistrationProvider getRegistrationProvider():79:140 -> b
    63:70:com.batch.android.PushRegistrationProvider getRegistrationProvider():139:146 -> b
    1:10:boolean isBatchGCMIidServiceAvailable():188:197 -> c
    1:1:boolean isGCMInstanceIdAvailable():178:178 -> d
    1:17:boolean isLegacyPushReceiverInManifest():152:168 -> e
com.batch.android.push.Registration -> com.batch.android.push.f:
    java.lang.String provider -> a
    java.lang.String senderID -> c
    java.lang.String registrationID -> b
    1:4:void <init>(java.lang.String,java.lang.String,java.lang.String):20:23 -> <init>
com.batch.android.push.formats.BaseFormat -> com.batch.android.push.g.a:
    android.graphics.Bitmap icon -> c
    java.lang.String title -> a
    android.graphics.Bitmap picture -> d
    java.lang.String body -> b
    1:5:void <init>(java.lang.String,java.lang.String,android.graphics.Bitmap,android.graphics.Bitmap):28:32 -> <init>
com.batch.android.push.formats.NewsFormat -> com.batch.android.push.g.b:
    1:1:void <init>(java.lang.String,java.lang.String,android.graphics.Bitmap,android.graphics.Bitmap):28:28 -> <init>
    void applyExtraBuilderConfiguration(androidx.core.app.NotificationCompat$Builder) -> a
    1:11:android.widget.RemoteViews generateCollapsedView(java.lang.String):33:43 -> a
    12:12:androidx.core.app.NotificationCompat$Style getSupportNotificationStyle():68:68 -> a
    1:10:android.widget.RemoteViews generateExpandedView(java.lang.String):51:60 -> b
    11:11:boolean isSupported():77:77 -> b
com.batch.android.push.formats.NotificationFormat -> com.batch.android.push.g.c:
    void applyExtraBuilderConfiguration(androidx.core.app.NotificationCompat$Builder) -> a
    android.widget.RemoteViews generateCollapsedView(java.lang.String) -> a
    androidx.core.app.NotificationCompat$Style getSupportNotificationStyle() -> a
    android.widget.RemoteViews generateExpandedView(java.lang.String) -> b
com.batch.android.push.formats.SystemFormat -> com.batch.android.push.g.d:
    boolean useLegacyBigPictureIconBehaviour -> e
    1:2:void <init>(java.lang.String,java.lang.String,android.graphics.Bitmap,android.graphics.Bitmap,boolean):23:24 -> <init>
    android.widget.RemoteViews generateCollapsedView(java.lang.String) -> a
    1:15:androidx.core.app.NotificationCompat$Style getSupportNotificationStyle():47:61 -> a
    16:21:void applyExtraBuilderConfiguration(androidx.core.app.NotificationCompat$Builder):70:75 -> a
    android.widget.RemoteViews generateExpandedView(java.lang.String) -> b
com.batch.android.query.AttributesCheckQuery -> com.batch.android.r0.a:
    long version -> d
    java.lang.String transactionID -> e
    1:12:void <init>(android.content.Context,long,java.lang.String):29:40 -> <init>
    13:13:void <init>(android.content.Context,long,java.lang.String):36:36 -> <init>
    14:14:void <init>(android.content.Context,long,java.lang.String):32:32 -> <init>
    1:4:com.batch.android.json.JSONObject toJSON():48:51 -> e
com.batch.android.query.AttributesSendQuery -> com.batch.android.r0.b:
    long version -> d
    java.util.Map attributes -> e
    java.util.Map tags -> f
    1:17:void <init>(android.content.Context,long,java.util.Map,java.util.Map):40:56 -> <init>
    18:18:void <init>(android.content.Context,long,java.util.Map,java.util.Map):51:51 -> <init>
    19:19:void <init>(android.content.Context,long,java.util.Map,java.util.Map):47:47 -> <init>
    20:20:void <init>(android.content.Context,long,java.util.Map,java.util.Map):43:43 -> <init>
    1:5:com.batch.android.json.JSONObject toJSON():64:68 -> e
com.batch.android.query.LocalCampaignsQuery -> com.batch.android.r0.c:
    java.util.Map capping -> d
    java.lang.String TAG -> e
    1:1:void <init>(com.batch.android.localcampaigns.CampaignManager,android.content.Context):33:33 -> <init>
    2:20:void <init>(com.batch.android.localcampaigns.CampaignManager,android.content.Context):29:47 -> <init>
    1:8:com.batch.android.json.JSONObject toJSON():55:62 -> e
com.batch.android.query.PushQuery -> com.batch.android.r0.d:
    com.batch.android.push.Registration registration -> d
    1:7:void <init>(android.content.Context,com.batch.android.push.Registration):26:32 -> <init>
    8:8:void <init>(android.content.Context,com.batch.android.push.Registration):29:29 -> <init>
    1:7:com.batch.android.json.JSONObject toJSON():40:46 -> e
    1:3:int getNotificationType():59:59 -> f
com.batch.android.query.Query -> com.batch.android.r0.e:
    android.content.Context context -> a
    com.batch.android.query.QueryType type -> c
    java.lang.String id -> b
    1:12:void <init>(android.content.Context,com.batch.android.query.QueryType):37:48 -> <init>
    13:13:void <init>(android.content.Context,com.batch.android.query.QueryType):43:43 -> <init>
    14:14:void <init>(android.content.Context,com.batch.android.query.QueryType):39:39 -> <init>
    1:1:java.lang.String generateID():111:111 -> a
    1:1:android.content.Context getContext():80:80 -> b
    1:1:java.lang.String getID():60:60 -> c
    1:1:com.batch.android.query.QueryType getType():70:70 -> d
    1:4:com.batch.android.json.JSONObject toJSON():94:97 -> e
com.batch.android.query.QueryType -> com.batch.android.r0.f:
    com.batch.android.query.QueryType ATTRIBUTES -> d
    com.batch.android.query.QueryType PUSH -> c
    com.batch.android.query.QueryType TRACKING -> b
    com.batch.android.query.QueryType START -> a
    com.batch.android.query.QueryType LOCAL_CAMPAIGNS -> f
    com.batch.android.query.QueryType ATTRIBUTES_CHECK -> e
    com.batch.android.query.QueryType[] $VALUES -> g
    1:21:void <clinit>():15:35 -> <clinit>
    22:22:void <clinit>():10:10 -> <clinit>
    1:1:void <init>(java.lang.String,int):10:10 -> <init>
    1:1:com.batch.android.query.QueryType valueOf(java.lang.String):10:10 -> valueOf
    1:1:com.batch.android.query.QueryType[] values():10:10 -> values
com.batch.android.query.StartQuery -> com.batch.android.r0.g:
    java.lang.String pushId -> f
    boolean fromPush -> e
    boolean userActivity -> d
    1:5:void <init>(android.content.Context,boolean,java.lang.String,boolean):36:40 -> <init>
    1:7:com.batch.android.json.JSONObject toJSON():48:54 -> e
com.batch.android.query.TrackingQuery -> com.batch.android.r0.h:
    java.util.List events -> d
    1:7:void <init>(android.content.Context,java.util.List):35:41 -> <init>
    8:8:void <init>(android.content.Context,java.util.List):38:38 -> <init>
    1:47:com.batch.android.json.JSONObject toJSON():49:95 -> e
com.batch.android.query.response.AbstractLocalCampaignsResponse -> com.batch.android.r0.i.a:
    1:1:void <init>(android.content.Context,com.batch.android.query.QueryType,com.batch.android.json.JSONObject):19:19 -> <init>
    2:2:void <init>(android.content.Context,com.batch.android.query.QueryType,java.lang.String):24:24 -> <init>
com.batch.android.query.response.AttributesCheckResponse -> com.batch.android.r0.i.b:
    long version -> e
    java.lang.String actionString -> d
    java.lang.Long time -> f
    1:1:void <init>(android.content.Context,com.batch.android.json.JSONObject):26:26 -> <init>
    2:19:void <init>(android.content.Context,com.batch.android.json.JSONObject):20:37 -> <init>
    1:15:com.batch.android.query.response.AttributesCheckResponse$Action getAction():43:57 -> d
com.batch.android.query.response.AttributesCheckResponse$Action -> com.batch.android.r0.i.b$a:
    com.batch.android.query.response.AttributesCheckResponse$Action RESEND -> d
    com.batch.android.query.response.AttributesCheckResponse$Action UNKNOWN -> e
    com.batch.android.query.response.AttributesCheckResponse$Action OK -> a
    com.batch.android.query.response.AttributesCheckResponse$Action BUMP -> b
    com.batch.android.query.response.AttributesCheckResponse$Action RECHECK -> c
    com.batch.android.query.response.AttributesCheckResponse$Action[] $VALUES -> f
    1:5:void <clinit>():62:66 -> <clinit>
    6:6:void <clinit>():60:60 -> <clinit>
    1:1:void <init>(java.lang.String,int):60:60 -> <init>
    1:1:com.batch.android.query.response.AttributesCheckResponse$Action valueOf(java.lang.String):60:60 -> valueOf
    1:1:com.batch.android.query.response.AttributesCheckResponse$Action[] values():60:60 -> values
com.batch.android.query.response.AttributesSendResponse -> com.batch.android.r0.i.c:
    long version -> e
    java.lang.String transactionID -> d
    1:1:void <init>(android.content.Context,com.batch.android.json.JSONObject):23:23 -> <init>
    2:13:void <init>(android.content.Context,com.batch.android.json.JSONObject):19:30 -> <init>
com.batch.android.query.response.LocalCampaignsResponse -> com.batch.android.r0.i.d:
    java.lang.String TAG -> g
    java.util.List campaigns -> d
    boolean autosave -> f
    java.lang.Long minDisplayInterval -> e
    1:4:void <init>(android.content.Context,com.batch.android.json.JSONObject):45:48 -> <init>
    5:8:void <init>(android.content.Context,com.batch.android.json.JSONObject,boolean):55:58 -> <init>
    1:31:com.batch.android.localcampaigns.model.LocalCampaign parseCampaign(com.batch.android.json.JSONObject):137:167 -> a
    32:76:com.batch.android.localcampaigns.model.LocalCampaign parseCampaign(com.batch.android.json.JSONObject):166:210 -> a
    77:77:com.batch.android.localcampaigns.model.LocalCampaign parseCampaign(com.batch.android.json.JSONObject):169:169 -> a
    78:78:com.batch.android.localcampaigns.model.LocalCampaign parseCampaign(com.batch.android.json.JSONObject):163:163 -> a
    79:79:com.batch.android.localcampaigns.model.LocalCampaign parseCampaign(com.batch.android.json.JSONObject):148:148 -> a
    80:80:com.batch.android.localcampaigns.model.LocalCampaign parseCampaign(com.batch.android.json.JSONObject):141:141 -> a
    81:81:com.batch.android.localcampaigns.model.LocalCampaign parseCampaign(com.batch.android.json.JSONObject):134:134 -> a
    82:94:java.util.List parseTriggers(com.batch.android.json.JSONArray):240:252 -> a
    1:16:com.batch.android.localcampaigns.model.LocalCampaign$Output parseOutput(com.batch.android.json.JSONObject):217:232 -> b
    17:17:com.batch.android.localcampaigns.model.LocalCampaign$Output parseOutput(com.batch.android.json.JSONObject):229:229 -> b
    18:18:com.batch.android.localcampaigns.model.LocalCampaign$Output parseOutput(com.batch.android.json.JSONObject):220:220 -> b
    1:9:void parseResponse(com.batch.android.json.JSONObject):76:84 -> c
    10:54:void parseResponse(com.batch.android.json.JSONObject):81:125 -> c
    55:55:void parseResponse(com.batch.android.json.JSONObject):124:124 -> c
    1:1:java.util.List getCampaigns():64:64 -> d
    2:27:com.batch.android.localcampaigns.model.LocalCampaign$Trigger parseTrigger(com.batch.android.json.JSONObject):260:285 -> d
    28:37:com.batch.android.localcampaigns.model.LocalCampaign$Trigger parseTrigger(com.batch.android.json.JSONObject):274:283 -> d
    38:38:com.batch.android.localcampaigns.model.LocalCampaign$Trigger parseTrigger(com.batch.android.json.JSONObject):280:280 -> d
    39:41:com.batch.android.localcampaigns.model.LocalCampaign$Trigger parseTrigger(com.batch.android.json.JSONObject):270:272 -> d
    42:42:com.batch.android.localcampaigns.model.LocalCampaign$Trigger parseTrigger(com.batch.android.json.JSONObject):263:263 -> d
    1:1:java.lang.Long getMinDisplayInterval():70:70 -> e
com.batch.android.query.response.PushResponse -> com.batch.android.r0.i.e:
    1:1:void <init>(android.content.Context,com.batch.android.json.JSONObject):24:24 -> <init>
com.batch.android.query.response.Response -> com.batch.android.r0.i.f:
    android.content.Context context -> b
    com.batch.android.query.QueryType queryType -> c
    java.lang.String queryID -> a
    1:1:void <init>(android.content.Context,com.batch.android.query.QueryType,com.batch.android.json.JSONObject):39:39 -> <init>
    2:17:void <init>(android.content.Context,com.batch.android.query.QueryType,java.lang.String):48:63 -> <init>
    18:18:void <init>(android.content.Context,com.batch.android.query.QueryType,java.lang.String):58:58 -> <init>
    19:19:void <init>(android.content.Context,com.batch.android.query.QueryType,java.lang.String):54:54 -> <init>
    20:20:void <init>(android.content.Context,com.batch.android.query.QueryType,java.lang.String):50:50 -> <init>
    1:1:android.content.Context getContext():95:95 -> a
    1:1:java.lang.String getQueryID():75:75 -> b
    1:1:com.batch.android.query.QueryType getQueryType():85:85 -> c
com.batch.android.query.response.StartResponse -> com.batch.android.r0.i.g:
    1:1:void <init>(android.content.Context,com.batch.android.json.JSONObject):26:26 -> <init>
com.batch.android.query.response.TrackingResponse -> com.batch.android.r0.i.h:
    1:1:void <init>(android.content.Context,com.batch.android.json.JSONObject):24:24 -> <init>
com.batch.android.runtime.ChangeStateAction -> com.batch.android.s0.a:
    com.batch.android.runtime.State run(com.batch.android.runtime.State) -> a
com.batch.android.runtime.ForegroundActivityLifecycleListener -> com.batch.android.s0.b:
    java.util.concurrent.atomic.AtomicInteger resumeCount -> a
    java.lang.String TAG -> b
    1:5:void <init>():15:19 -> <init>
    1:13:boolean isApplicationInForeground():70:82 -> a
    1:1:void onActivityPaused(android.app.Activity):42:42 -> onActivityPaused
    1:1:void onActivityResumed(android.app.Activity):36:36 -> onActivityResumed
com.batch.android.runtime.RuntimeManager -> com.batch.android.s0.c:
    android.content.Context context -> a
    java.util.Date lastUserStartDate -> d
    java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock r -> k
    com.batch.android.runtime.SessionManager sessionManager -> g
    java.lang.String TAG -> m
    com.batch.android.runtime.ForegroundActivityLifecycleListener foregroundActivityLifecycleListener -> f
    com.batch.android.runtime.State state -> i
    java.util.Date stopDate -> h
    android.app.Activity activity -> e
    android.os.Handler handler -> b
    java.util.concurrent.locks.ReentrantReadWriteLock lock -> j
    java.util.concurrent.atomic.AtomicInteger serviceRefCount -> c
    java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock w -> l
    1:1:void <init>():99:99 -> <init>
    2:56:void <init>():40:94 -> <init>
    1:12:boolean changeState(com.batch.android.runtime.ChangeStateAction):112:123 -> a
    13:27:boolean changeStateIf(com.batch.android.runtime.State,com.batch.android.runtime.ChangeStateAction):135:149 -> a
    28:37:boolean changeStateIf(com.batch.android.runtime.State,com.batch.android.runtime.ChangeStateAction):141:150 -> a
    38:43:void run(com.batch.android.runtime.StateAction):162:167 -> a
    44:53:boolean runIf(com.batch.android.runtime.State,com.batch.android.runtime.StateAction):179:188 -> a
    54:58:boolean runIf(com.batch.android.runtime.State,com.batch.android.runtime.StateAction):185:189 -> a
    59:59:boolean runIfReady(java.lang.Runnable):202:202 -> a
    60:70:boolean runIf(com.batch.android.runtime.State,java.lang.Runnable):214:224 -> a
    71:76:boolean runIf(com.batch.android.runtime.State,java.lang.Runnable):220:225 -> a
    77:77:void setActivity(android.app.Activity):269:269 -> a
    78:81:void setContext(android.content.Context):375:378 -> a
    82:84:void registerActivityListenerIfNeeded(android.app.Application):395:397 -> a
    85:98:void registerSessionManagerIfNeeded(android.app.Application,boolean):416:429 -> a
    99:99:void clearSessionManager():454:454 -> a
    1:1:void decrementServiceRefCount():295:295 -> b
    1:1:android.app.Activity getActivity():279:279 -> c
    1:1:android.content.Context getContext():388:388 -> d
    1:1:java.util.Date getLastUserStartDate():362:362 -> e
    1:5:java.lang.String getSessionIdentifier():439:443 -> f
    1:1:com.batch.android.runtime.SessionManager getSessionManager():448:448 -> g
    1:1:void incrementServiceRefCount():287:287 -> h
    1:5:boolean isApplicationInForeground():403:407 -> i
    1:1:boolean isReady():312:312 -> j
    1:13:boolean isRetainedByService():320:332 -> k
    1:4:java.lang.Long onStart():239:242 -> l
    1:5:void onStopWithoutFinishing():252:256 -> m
    1:1:void resetServiceRefCount():304:304 -> n
    1:1:void updateLastUserStartDate():352:352 -> o
com.batch.android.runtime.SessionManager -> com.batch.android.s0.d:
    java.lang.String TAG -> f
    java.util.concurrent.atomic.AtomicInteger createCount -> a
    int BACKGROUNDED_SESSION_EXPIRATION_SEC -> g
    java.lang.Long backgroundSessionExpirationUptime -> b
    java.lang.String INTENT_NEW_SESSION -> e
    boolean sessionActive -> c
    java.lang.String sessionIdentifier -> d
    1:22:void <init>():30:51 -> <init>
    1:6:void startNewSessionIfNeeded(android.content.Context):79:84 -> a
    7:19:boolean areAllActivitiesDestroyed():95:107 -> a
    1:1:java.lang.String getSessionIdentifier():60:60 -> b
    1:1:long getUptime():123:123 -> c
    1:3:void invalidateSessionIfNeeded():71:73 -> d
    1:2:boolean isSessionActive():65:66 -> e
    1:1:void onActivityCreated(android.app.Activity,android.os.Bundle):149:149 -> onActivityCreated
    1:5:void onActivityDestroyed(android.app.Activity):186:190 -> onActivityDestroyed
    1:2:void onActivityResumed(android.app.Activity):161:162 -> onActivityResumed
    1:1:void onLowMemory():143:143 -> onLowMemory
    1:1:void onTrimMemory(int):130:130 -> onTrimMemory
com.batch.android.runtime.State -> com.batch.android.s0.e:
    com.batch.android.runtime.State[] $VALUES -> d
    com.batch.android.runtime.State READY -> b
    com.batch.android.runtime.State FINISHING -> c
    com.batch.android.runtime.State OFF -> a
    1:11:void <clinit>():13:23 -> <clinit>
    12:12:void <clinit>():8:8 -> <clinit>
    1:1:void <init>(java.lang.String,int):8:8 -> <init>
    1:1:com.batch.android.runtime.State valueOf(java.lang.String):8:8 -> valueOf
    1:1:com.batch.android.runtime.State[] values():8:8 -> values
com.batch.android.runtime.StateAction -> com.batch.android.s0.f:
    void run(com.batch.android.runtime.State) -> a
com.batch.android.tracker.TrackerDatabaseHelper -> com.batch.android.t0.a:
    java.lang.String COLUMN_PARAMETERS -> g
    java.lang.String COLUMN_TIMEZONE -> f
    java.lang.String COLUMN_SERVER_TIME -> i
    java.lang.String COLUMN_STATE -> h
    int DATABASE_VERSION -> m
    java.lang.String COLUMN_SESSION_ID -> k
    java.lang.String COLUMN_SECURE_DATE -> j
    java.lang.String DATABASE_NAME -> l
    java.lang.String TABLE_EVENTS -> a
    java.lang.String COLUMN_ID -> c
    java.lang.String COLUMN_DB_ID -> b
    java.lang.String COLUMN_DATE -> e
    java.lang.String COLUMN_NAME -> d
    1:1:void <init>(android.content.Context):35:35 -> <init>
    1:1:void onCreate(android.database.sqlite.SQLiteDatabase):41:41 -> onCreate
    1:4:void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int):59:62 -> onUpgrade
com.batch.android.tracker.TrackerDatasource -> com.batch.android.t0.b:
    android.content.Context context -> a
    android.database.sqlite.SQLiteDatabase database -> b
    com.batch.android.tracker.TrackerDatabaseHelper databaseHelper -> c
    java.lang.String TAG -> d
    1:8:void <init>(android.content.Context):47:54 -> <init>
    9:9:void <init>(android.content.Context):49:49 -> <init>
    1:1:void clearDB():95:95 -> a
    2:3:boolean addEvent(com.batch.android.event.Event):108:109 -> a
    4:34:com.batch.android.event.Event parseEvent(android.database.Cursor):182:212 -> a
    35:50:int updateEventsToNewState(java.lang.String[],com.batch.android.event.Event$State):250:265 -> a
    51:56:int updateEventsToNewState(java.lang.String[],com.batch.android.event.Event$State):263:268 -> a
    57:73:int deleteEvents(java.lang.String[]):281:297 -> a
    74:78:int deleteEvents(java.lang.String[]):296:300 -> a
    79:79:int deleteOverflowEvents(int):313:313 -> a
    1:17:java.util.List extractEventsToSend(int):120:136 -> b
    18:51:java.util.List extractEventsToSend(int):134:167 -> b
    52:52:boolean updateEventsToNew(java.lang.String[]):226:226 -> b
    53:55:void close():323:325 -> b
    56:70:boolean insert(com.batch.android.event.Event):337:351 -> b
    71:99:boolean insert(com.batch.android.event.Event):349:377 -> b
    100:107:boolean insert(com.batch.android.event.Event):376:383 -> b
    108:119:boolean insert(com.batch.android.event.Event):382:393 -> b
    120:124:boolean insert(com.batch.android.event.Event):392:396 -> b
    125:125:boolean insert(com.batch.android.event.Event):343:343 -> b
    1:19:java.util.List getAllEvents():66:84 -> c
    20:36:java.util.List getAllEvents():68:84 -> c
    37:37:boolean updateEventsToOld(java.lang.String[]):237:237 -> c
    1:6:boolean resetEventStatus():410:415 -> d
    7:13:boolean resetEventStatus():413:419 -> d
com.batch.android.tracker.TrackerEventSender -> com.batch.android.t0.c:
    java.lang.String WEBSERVICE_HAS_FINISHED_EVENT -> i
    1:1:void <init>(com.batch.android.runtime.RuntimeManager,com.batch.android.event.EventSender$EventSenderListener):23:23 -> <init>
    1:1:com.batch.android.core.TaskRunnable getWebserviceTask(java.util.List,com.batch.android.webservice.listener.TrackerWebserviceListener):37:37 -> a
    java.lang.String getWebserviceFinishedEvent() -> b
com.batch.android.tracker.TrackerMode -> com.batch.android.t0.d:
    com.batch.android.tracker.TrackerMode[] $VALUES -> e
    com.batch.android.tracker.TrackerMode OFF -> b
    com.batch.android.tracker.TrackerMode DB_ONLY -> c
    com.batch.android.tracker.TrackerMode ON -> d
    int value -> a
    1:11:void <clinit>():13:23 -> <clinit>
    12:12:void <clinit>():8:8 -> <clinit>
    1:2:void <init>(java.lang.String,int,int):30:31 -> <init>
    1:1:int getValue():36:36 -> a
    2:3:com.batch.android.tracker.TrackerMode fromValue(int):49:50 -> a
    1:1:com.batch.android.tracker.TrackerMode valueOf(java.lang.String):8:8 -> valueOf
    1:1:com.batch.android.tracker.TrackerMode[] values():8:8 -> values
com.batch.android.user.AttributeType -> com.batch.android.u0.a:
    com.batch.android.user.AttributeType DELETED -> c
    com.batch.android.user.AttributeType[] $VALUES -> i
    com.batch.android.user.AttributeType BOOL -> g
    com.batch.android.user.AttributeType DOUBLE -> f
    com.batch.android.user.AttributeType LONG -> e
    char typeChar -> b
    com.batch.android.user.AttributeType STRING -> d
    com.batch.android.user.AttributeType DATE -> h
    int value -> a
    1:11:void <clinit>():10:20 -> <clinit>
    12:12:void <clinit>():8:8 -> <clinit>
    1:3:void <init>(java.lang.String,int,int,char):29:31 -> <init>
    1:1:char getTypeChar():41:41 -> a
    2:3:com.batch.android.user.AttributeType fromValue(int):54:55 -> a
    1:1:int getValue():36:36 -> b
    1:1:com.batch.android.user.AttributeType valueOf(java.lang.String):8:8 -> valueOf
    1:1:com.batch.android.user.AttributeType[] values():8:8 -> values
com.batch.android.user.SQLUserDatasource -> com.batch.android.u0.b:
    android.content.Context context -> a
    java.lang.String TAG -> f
    long currentChangeset -> e
    com.batch.android.user.UserDatabaseHelper databaseHelper -> c
    android.database.sqlite.SQLiteDatabase database -> b
    boolean transactionOccurring -> d
    1:1:void <init>(android.content.Context):64:64 -> <init>
    2:17:void <init>(android.content.Context):56:71 -> <init>
    18:18:void <init>(android.content.Context):66:66 -> <init>
    1:10:void acquireTransactionLock(long):104:113 -> a
    11:13:void setAttribute(java.lang.String,long):161:163 -> a
    14:16:void setAttribute(java.lang.String,double):169:171 -> a
    17:19:void setAttribute(java.lang.String,boolean):177:179 -> a
    20:22:void setAttribute(java.lang.String,java.lang.String):186:188 -> a
    23:25:void setAttribute(java.lang.String,java.util.Date):195:197 -> a
    26:30:void clearTags(java.lang.String):254:258 -> a
    31:47:void setAttribute(java.lang.String,android.content.ContentValues,com.batch.android.user.AttributeType,boolean):284:300 -> a
    48:48:void setAttribute(java.lang.String,android.content.ContentValues,com.batch.android.user.AttributeType,boolean):285:285 -> a
    49:74:java.lang.String printDebugDump():525:550 -> a
    75:76:void logAndThrow(java.lang.String,java.lang.Throwable):560:561 -> a
    1:10:void commitTransaction():125:134 -> b
    11:11:void removeAttribute(java.lang.String):203:203 -> b
    12:12:void addTag(java.lang.String,java.lang.String):213:213 -> b
    13:23:void deleteAttribute(java.lang.String,boolean):307:317 -> b
    24:24:void deleteAttribute(java.lang.String,boolean):308:308 -> b
    1:1:void removeTag(java.lang.String,java.lang.String):220:220 -> c
    2:6:void clearTags():244:248 -> c
    1:6:void clear():233:238 -> clear
    1:9:void close():79:87 -> close
    1:5:void clearAttributes():266:270 -> d
    6:19:void deleteTag(java.lang.String,java.lang.String):359:372 -> d
    20:20:void deleteTag(java.lang.String,java.lang.String):371:371 -> d
    21:21:void deleteTag(java.lang.String,java.lang.String):362:362 -> d
    1:20:void writeTag(java.lang.String,java.lang.String):329:348 -> e
    21:21:void writeTag(java.lang.String,java.lang.String):347:347 -> e
    22:22:void writeTag(java.lang.String,java.lang.String):332:332 -> e
    23:67:java.util.HashMap getAttributes():449:493 -> e
    68:68:java.util.HashMap getAttributes():490:490 -> e
    69:70:java.util.HashMap getAttributes():485:486 -> e
    71:71:java.util.HashMap getAttributes():482:482 -> e
    72:100:java.util.HashMap getAttributes():479:507 -> e
    101:162:java.util.HashMap getAttributes():451:512 -> e
    1:51:java.util.Map getTagCollections():388:438 -> f
    52:82:java.util.Map getTagCollections():408:438 -> f
    83:130:java.util.Map getTagCollections():392:439 -> f
    1:10:void rollbackTransaction():141:150 -> g
    1:1:void throwInvalidStateException():566:566 -> h
com.batch.android.user.SQLUserDatasource$1 -> com.batch.android.u0.b$a:
    int[] $SwitchMap$com$batch$android$user$AttributeType -> a
    1:1:void <clinit>():477:477 -> <clinit>
com.batch.android.user.UserAttribute -> com.batch.android.u0.c:
    com.batch.android.user.AttributeType type -> b
    java.lang.Object value -> a
    1:3:void <init>(java.lang.Object,com.batch.android.user.AttributeType):16:18 -> <init>
    1:13:java.util.Map getServerMapRepresentation(java.util.Map):23:35 -> a
    1:7:boolean equals(java.lang.Object):49:55 -> equals
    1:1:java.lang.String toString():61:61 -> toString
com.batch.android.user.UserDataDiff -> com.batch.android.u0.d:
    com.batch.android.user.UserDataDiff$Result result -> a
    1:14:void <init>(java.util.Map,java.util.Map,java.util.Map,java.util.Map):27:40 -> <init>
    1:15:void computeAttributes(java.util.Map,java.util.Map):52:66 -> a
    16:48:void computeTagSetDiff(java.util.Set,java.util.Set,java.util.Set[]):103:135 -> a
    49:49:void computeTagSetDiff(java.util.Set,java.util.Set,java.util.Set[]):115:115 -> a
    50:53:void computeTagSetDiff(java.util.Set,java.util.Set,java.util.Set[]):108:111 -> a
    1:10:void computeTags(java.util.Map,java.util.Map):72:81 -> b
    11:27:void computeTags(java.util.Map,java.util.Map):80:96 -> b
com.batch.android.user.UserDataDiff$1 -> com.batch.android.u0.d$a:
com.batch.android.user.UserDataDiff$Result -> com.batch.android.u0.d$b:
    java.util.Map addedAttributes -> a
    java.util.Map removedAttributes -> b
    java.util.Map addedTags -> c
    java.util.Map removedTags -> d
    1:1:void <init>(com.batch.android.user.UserDataDiff$1):142:142 -> <init>
    2:2:void <init>():151:151 -> <init>
    1:4:boolean hasChanges():157:160 -> a
    5:9:com.batch.android.json.JSONObject toEventParameters(long):168:172 -> a
    10:21:com.batch.android.json.JSONObject convertToJson(java.util.Map,java.util.Map):180:191 -> a
com.batch.android.user.UserDatabaseException -> com.batch.android.u0.e:
    1:1:void <init>(java.lang.String):7:7 -> <init>
com.batch.android.user.UserDatabaseHelper -> com.batch.android.u0.f:
    java.lang.String COLUMN_TAG_COLLECTION -> g
    java.lang.String TABLE_TAGS -> f
    java.lang.String COLUMN_TAG_CHANGESET -> i
    java.lang.String COLUMN_TAG_VALUE -> h
    java.lang.String DATABASE_NAME -> j
    int DATABASE_VERSION -> k
    java.lang.String TABLE_ATTRIBUTES -> a
    java.lang.String COLUMN_ATTR_TYPE -> c
    java.lang.String COLUMN_ATTR_NAME -> b
    java.lang.String COLUMN_ATTR_CHANGESET -> e
    java.lang.String COLUMN_ATTR_VALUE -> d
    1:1:void <init>(android.content.Context):37:37 -> <init>
    1:10:void onCreate(android.database.sqlite.SQLiteDatabase):43:52 -> onCreate
com.batch.android.user.UserDatasource -> com.batch.android.u0.g:
    void acquireTransactionLock(long) -> a
    void clearTags(java.lang.String) -> a
    java.lang.String printDebugDump() -> a
    void setAttribute(java.lang.String,double) -> a
    void setAttribute(java.lang.String,long) -> a
    void setAttribute(java.lang.String,java.lang.String) -> a
    void setAttribute(java.lang.String,java.util.Date) -> a
    void setAttribute(java.lang.String,boolean) -> a
    void addTag(java.lang.String,java.lang.String) -> b
    void commitTransaction() -> b
    void removeAttribute(java.lang.String) -> b
    void clearTags() -> c
    void removeTag(java.lang.String,java.lang.String) -> c
    void clearAttributes() -> d
    java.util.HashMap getAttributes() -> e
    java.util.Map getTagCollections() -> f
    void rollbackTransaction() -> g
com.batch.android.user.UserOperation -> com.batch.android.u0.h:
    void execute(com.batch.android.user.SQLUserDatasource) -> a
com.batch.android.webservice.listener.AttributesCheckWebserviceListener -> com.batch.android.v0.a.a:
    void onError(com.batch.android.FailReason) -> a
    void onSuccess(com.batch.android.query.response.AttributesCheckResponse) -> a
com.batch.android.webservice.listener.AttributesSendWebserviceListener -> com.batch.android.v0.a.b:
    void onError(com.batch.android.FailReason) -> a
    void onSuccess(com.batch.android.query.response.AttributesSendResponse) -> a
com.batch.android.webservice.listener.DisplayReceiptWebserviceListener -> com.batch.android.v0.a.c:
    void onFailure(com.batch.android.core.Webservice$WebserviceError) -> a
com.batch.android.webservice.listener.InboxWebserviceListener -> com.batch.android.v0.a.d:
    void onFailure(java.lang.String) -> a
    void onSuccess(com.batch.android.inbox.InboxWebserviceResponse) -> a
com.batch.android.webservice.listener.LocalCampaignsWebserviceListener -> com.batch.android.v0.a.e:
    void onError(com.batch.android.FailReason) -> a
    void onSuccess(java.util.List) -> a
com.batch.android.webservice.listener.PushWebserviceListener -> com.batch.android.v0.a.f:
    void onError(com.batch.android.FailReason) -> a
com.batch.android.webservice.listener.StartWebserviceListener -> com.batch.android.v0.a.g:
    void onError(com.batch.android.FailReason) -> a
com.batch.android.webservice.listener.TrackerWebserviceListener -> com.batch.android.v0.a.h:
    void onFailure(com.batch.android.FailReason,java.util.List) -> a
    void onFinish() -> a
    void onSuccess(java.util.List) -> a
com.batch.android.webservice.listener.impl.AttributesCheckWebserviceListenerImpl -> com.batch.android.v0.a.i.a:
    long DEFAULT_RECHECK_TIME -> a
    1:1:void <init>():13:13 -> <init>
    1:36:void onSuccess(com.batch.android.query.response.AttributesCheckResponse):22:57 -> a
    37:46:void onSuccess(com.batch.android.query.response.AttributesCheckResponse):38:47 -> a
    47:84:void onSuccess(com.batch.android.query.response.AttributesCheckResponse):28:65 -> a
    85:85:void onError(com.batch.android.FailReason):72:72 -> a
com.batch.android.webservice.listener.impl.AttributesCheckWebserviceListenerImpl$1 -> com.batch.android.v0.a.i.a$a:
    int[] $SwitchMap$com$batch$android$query$response$AttributesCheckResponse$Action -> a
    1:1:void <clinit>():22:22 -> <clinit>
com.batch.android.webservice.listener.impl.AttributesSendWebserviceListenerImpl -> com.batch.android.v0.a.i.b:
    1:1:void <init>():13:13 -> <init>
    1:1:void onSuccess(com.batch.android.query.response.AttributesSendResponse):19:19 -> a
    2:2:void onError(com.batch.android.FailReason):26:26 -> a
com.batch.android.webservice.listener.impl.LocalCampaignsWebserviceListenerImpl -> com.batch.android.v0.a.i.c:
    com.batch.android.localcampaigns.CampaignManager campaignManager -> b
    com.batch.android.module.LocalCampaignsModule localCampaignsModule -> a
    1:3:void <init>(com.batch.android.module.LocalCampaignsModule,com.batch.android.localcampaigns.CampaignManager):29:31 -> <init>
    1:3:com.batch.android.webservice.listener.impl.LocalCampaignsWebserviceListenerImpl provide():37:39 -> a
    4:6:void onSuccess(java.util.List):46:48 -> a
    7:9:void onError(com.batch.android.FailReason):56:56 -> a
    10:11:void handleInAppResponse(com.batch.android.query.response.LocalCampaignsResponse):62:63 -> a
com.batch.android.webservice.listener.impl.PushWebserviceListenerImpl -> com.batch.android.v0.a.i.d:
    1:1:void <init>():11:11 -> <init>
    void onError(com.batch.android.FailReason) -> a
com.batch.android.webservice.listener.impl.StartWebserviceListenerImpl -> com.batch.android.v0.a.i.e:
    1:1:void <init>():12:12 -> <init>
    void onError(com.batch.android.FailReason) -> a
